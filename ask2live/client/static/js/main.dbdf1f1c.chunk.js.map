{"version":3,"sources":["reportWebVitals.js","reducers/counter.js","components/Nav.js","actions/types.js","actions/UserActions.js","components/onBoard/LoginPage.js","actions/QuestionListActions.js","actions/SessionActions.js","components/sessionCard/CurrentReserveSessionsCards.js","components/sessionCard/OtherLiveSessionsCards.js","components/sessionCard/MyLiveSessionsCards.js","components/sessionCard/HostConfirmedSessionsCards.js","components/SessionCreateButton.js","components/ProfileEditButton.js","containers/SessionCardContainer.js","components/mypage/ProfileGate.js","components/mypage/MypageNav.js","components/mypage/Mypage.js","actions/SessionToReserveActions.js","components/mypage/SessionConfirm.js","components/mypage/MypageLiveSession.js","components/mypage/MypageConfirmedSession.js","components/Emoji.js","containers/MypageContainer.js","containers/SessionCreateContainer.js","components/mypage/ProfileDetail.js","components/CheckString.js","components/mypage/MypageEdit.js","components/sessionCard/PreQuestionNav.js","components/sessionCard/PreQuestions.js","actions/EnteredSessionActions.js","components/liveSession/Participant.js","components/liveSession/ParticipantList.js","components/liveSession/StringQuestion.js","components/Avatar.js","components/liveSession/VoiceQuestion.js","components/liveSession/CurrentQuestion.js","components/liveSession/Question.js","components/liveSession/QuestionSwiper.js","components/liveSession/QuestionList.js","components/liveSession/Questioning.js","components/liveSession/InsertField.js","components/liveSession/chatting/Message.js","components/liveSession/chatting/EmptyScreen.js","components/liveSession/chatting/Chat.js","actions/MessagesActions.js","environment.js","components/liveSession/agora/MediaPlayer.js","components/liveSession/agora/PlayerWrapper.js","components/liveSession/LiveSession.js","components/liveSession/agora/useAgora.js","components/JoinCard.js","containers/LiveSessionContainer.js","components/ReserveToLive.js","containers/SessionMatchContainer.js","actions/AllUsersActions.js","hoc/auth.js","App.js","escapeInapp.js","reducers/user.js","reducers/session.js","reducers/mySession.js","reducers/messages.js","reducers/authorize.js","reducers/questionlist.js","reducers/enteredSession.js","reducers/allUsers.js","reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INCREMENT","DECREMENT","counterReducer","state","action","type","Person","Home","makeStyles","theme","root","menuButton","marginRight","spacing","title","flexGrow","appBar","top","bottom","left","right","margin","backgroundColor","borderRadius","width","maxWidth","zIndex","ON_MESSAGES_VALUE_CHANGE","ON_MESSAGES_READING","ON_MESSAGES_READ","USER_GET_PENDING","USER_GET_SUCCESS","USER_GET_FAILURE","ALL_USERS_GET_PENDING","ALL_USERS_GET_SUCCESS","ALL_USERS_GET_FAILURE","QUESTIONLIST_GET_PENDING","QUESTIONLIST_GET_SUCCESS","QUESTIONLIST_GET_ERROR","QUESTIONLIST_DELETE","SETLIVE","SESSION_GET_PENDING","SESSION_GET_SUCCESS","SESSION_GET_FAILURE","MY_SESSION_GET_PENDING","MY_SESSION_GET_SUCCESS","MY_SESSION_GET_FAILURE","ENTEREDSESSION_GET_PENDING","ENTEREDSESSION_GET_SUCCESS","ENTEREDSESSION_GET_ERROR","ENTEREDSESSION_DELETE","getUserInfo","token","dispatch","console","log","config","headers","Authorization","axios","get","userGetApi","response","payload","catch","error","Alert","props","elevation","variant","defaults","xsrfCookieName","xsrfHeaderName","marginTop","list","palette","background","paper","style","login","position","display","justifyContent","flexDirection","loginWrapper","height","loginCard","border","boxShadow","paddingTop","loginBtnWrapper","color","loginBtn","infoIcon","cursor","logo","backgroundImage","backgroundPosition","backgroundSize","LoginPage","history","useHistory","localStorage","push","useState","loginId","setLoginId","loginPassword","setLoginPassword","open","setOpen","openTwo","setOpenTwo","handleClose","event","reason","handleCloseTwo","useDispatch","Login","a","dataToSubmit","username","password","post","res","window","setItem","data","detail","location","before","err","Grid","container","justify","fontSize","className","marginBottom","TextField","errer","length","helperText","value","placeholder","size","id","onChange","target","substring","onClick","Snackbar","autoHideDuration","onClose","severity","getQuestionlist","holeId","getApi","getSessionInfo","getUserSessionInfo","userSessionGetApi","useStyles","flexWrap","minWidth","successContent","transform","content","date","work_field","marginLeft","wish","questions","questionIcon","avatarWrapper","avatar","check","chipGrid","wishButton","textAlign","hostProfile","opacity","onClickWish","sessionId","patch","e","alert","onClickWishCancel","CurrentReserveSessionsCards","currentReserveSessions","classes","user","useSelector","map","session","Paper","progress","strokeWidth","strokeColor","gapDegree","format","percent","Avatar","src","host_profile_image","hole_reservations","Math","ceil","guests","target_demand","commingSoon","alignItems","Chip","label","Typography","component","host_username","host_work_company","host_work_field","item","reserve_date","count_questions","Button","clickable","startIcon","Object","keys","indexOf","setTimeout","pathname","host","borderBottom","padding","bullet","paddingBottom","pos","avatarRoot","small","large","imageWrapper","float","paddingRight","contentTime","contentTitle","textOverflow","contentName","contentField","whiteSpace","overflow","buttonWrapper","profileimage","livelogo1","livelogo1_back","OtherLiveSessionsCards","otherLiveSessions","setTitle","subtitle","setSubtitle","now","Date","Card","CardContent","search","livehole_id","hostName","hostImage","alt","count_participant","description","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","cardContent","cookieWrapper","backgroundRepeat","useCookie","living","contentWrapper","contentWork","live2","MyLiveSessionsCard","React","MyLiveSessionsCards","myLiveSessions","HostConfirmedSessionsCards","hostConfirmedSessions","reserveDate","setReserveDate","toDate","posision","paddingLeft","textWrap","balloonWhite","balloonColor","mike","SessioinCreateButton","noMyLive","profileBalloon","ProfileEditButton","MyPageIcon","hosts","mainLogo","mainOragne","descript","descript2","cookie1","cookie2","button","buttonIcon","fontColor","buttonText","align","fontWeight","swiperLeft","swiperLeftHidden","swiperRight","swiperRightHidden","logOut","SessionCardContainer","userDetail","setFlag","sessions","allUsersData","allUsers","mySession","clear","replace","status","candidate","hole_open_auth","cnt","swiperCnt","setSwiperCnt","IconButton","aria-label","borderColor","toString","where","swipping","prev","direction","Divider","profile","ProfileGate","CardActionArea","profile_image","CardHeader","fontFamily","borderbox","text","MypageNav","goBack","my","myBottomCard","Logout","MyPage","postSessionToReserve","font","font2","font3","SessionConfirm","goListUp","goDark","handleClick","animation","layerfordark","minHeight","LinearProgressWithLabel","Box","mr","LinearProgress","round","MypageLiveSession","listup","setListUp","dark","setDark","demand","setDemand","handleDemandClose","onDelete","delete","subheader","parseInt","current_demand","CardActions","MypageConfirmedSession","Emoji","role","aria-hidden","symbol","nested","itemText","MyPageContainer","render","setRender","wishSessions","useEffect","myDoneSessions","myWishSessions","myConfirmSessions","my_hole","reservation_status","wish_hole","openDone","setOpenDone","openWish","setOpenWish","openConfirm","setOpenConfirm","Mypage","ListItem","Collapse","in","timeout","unmountOnExit","List","disablePadding","NumAlert","form","submit","SessionCreateContainer","urlSearchParams","URLSearchParams","routerInfo","slice","defaultDate","toISOString","titleValid","setTitleValid","setDescription","descriptionValid","setDescriptionValid","reserveDateValid","setReserveDateValid","earlyDateValid","setEarlyDateValid","count","setCount","skipValid","setSkipValid","split","open2","setOpen2","disable","setDisable","onIncrease","onDecrease","handleClick2","handleClose2","Container","butterBottom","required","fullWidth","name","autoFocus","InputLabelProps","shrink","checked","disabled","justifyContents","xs","inputProps","min","cur_date","getTime","multiline","rows","root2","work_company","bio","editWrapper","editBtn","ProfileDetail","host_bio","editFlag","blank","special","buttonGroup","file","button2","MypageEdit","usernameValue","setUsername","profileImage","workField","setWorkField","workCompany","setWorkCompany","setBio","image","setImage","useCallback","files","preventDefault","formData","FormData","append","resPatch","resGet","autoComplete","defaultValue","string","test","ReplaceSpaceNSpecial","card","cardText","labelBMJUA","fontStyle","submitbtn","insert","borderTop","borderLeft","borderRight","MyQuestionCards","myQuestions","questionlist","userId","questionsList","question","questionAuthor","light","MyQuestionSend","ask","setAsk","postApi","isVoice","askValue","is_answered","is_voice","maxLength","iconButton","QuestionCard","user_username","TabPanel","children","index","other","hidden","aria-labelledby","p","a11yProps","PreQuestionNav","setValue","AppBar","Tabs","newValue","Tab","time","desc","SessionDetail","undefined","ListPreQuestions","PreQuestions","targetSession","href","getEnteredSession","channelNum","participant","tmp","follow","Participant","nickName","participantlist","ParticipantList","participants","enteredSession","arrived","profile_image_url","audience1","audience2","StringQuestion","questionStr","userQuestion","finish","setFinish","btnDisable","setBtnDisable","imageLink","userNickName","isHost","onAnswered","currentQuestionId","circle","UserAvatar","VoiceQuestion","click","setClick","clickStyle","setClickStyle","exitClick","setExitClick","setHidden","sendP2PMessage","recipientUID","peerMsg","remoteUID","String","rtmClient","sendMessageToPeer","sendResult","hasPeerReceived","userUid","wait","CurrentQuestion","questionPatchApi","questionId","forQuestionidx","questionList","findIndex","questionResponse","questionIdx","liveVoice","setLiveVoice","currentQuestion","user_uid","user_profile_image_url","client","localAudioTrack","remoteUsers","myPaper","otherPaper","SimplePaper","isFirst","myQuestion","userName","nav","QuestionList","click1","setClick1","click2","setClick2","questionAry","myName","questionInfo","questionbutton","Questioning","voice","setVoice","queStyle","setQueStyle","myInfo","onKeyPress","key","openQuestionAlert","goQueUp","Width","input","flex","divider","questioningBtn","questionListBtn","participantBtn","CustomizedInputBase","InputBase","message","goSetMessage","goMessageSend","pressEnter","goUserUp","iconButton2","Message","memo","sender","sent_timestamp","wordBreak","EmptyScreen","containerStyle","Empty","PRESENTED_IMAGE_SIMPLE","InsertfieldWrapper","justifyContainer","Insertfield","connect","messages","onRoomMessagesRead","socket","ReconnectingWebSocket","protocol","WS_ENDPOINT","debug","onopen","onerror","onmessage","JSON","parse","onclose","currentUrl","roomId","scrollToBottom","element","document","querySelector","scrollTop","scrollHeight","loading","hasMore","setMessage","roomSocket","setRoomSocket","loadingChat","room","windowHeight","onBack","close","Fragment","CircularProgress","itemLayout","dataSource","renderItem","borderWidth","send","stringify","command","MediaPlayer","audioTrack","Authorize","setEnabled","volumeInter","setInterval","uid","getVolumeLevel","clearInterval","play","stop","withRouter","StyledBadge","withStyles","badge","Badge","livewrapper","livesession","session_top","session_mid","session_bottom","table","td1","td2","lavel","font_size","checkIcon","tablecell","verticalAlign","listbutton","closeBtn","linkBtnWrap","linkBtn","AgoraRTC","createClient","codec","mode","AgoraRTM","createInstance","LiveSession","hostPostApi","hostUid","channel_num","host_uid","audiencePutApi","audienceUid","put","leavePatchApi","queUp","setQueUp","userUp","setUserUp","setRoom","questionAlert","setOuestionAlert","copiedAlert","setCopiedAlert","hostExit","setHostExit","closeQuestionAlert","closeCopiedAlert","partiNum","holeInfo","livehole","host_profile_image_url","rtmChannel","appid","setLocalAudioTrack","joinState","setJoinState","setRemoteUsers","authority","createLocalTracks","createMicrophoneAudioTrack","AEC","ANS","microphoneTrack","channel","join","on","newState","msg","peerId","publish","unpublish","leave","handleUserPublished","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","off","useAgora","liveInter","getQuestionList","refreshOut","logout","addEventListener","onpageshow","persisted","createChannel","memberId","unblock","block","removeEventListener","sendMessage","colspan","holeTitle","rowspan","onCopy","badgeContent","details","cover","controls","playIcon","mikeBtn","liveBtn","useTheme","setMike","getMike","navigator","mediaDevices","getUserMedia","audio","stream","handleOpen","joinPass","setJoin","LiveSessionContainer","ReserveToLive","channelNumAry","floor","random","SessionMatchContainer","match","setMatch","sessionKind","params","currUser","SpecialComponent","option","AuthenticateCheck","isLoggedIn","getItem","App","d","l","userAgent","body","getAttribute","$0","u","q","qs","i","kv","k","v","j","shift","charCodeAt","encodeURIComponent","exact","path","Auth","MypageContainer","initialState","pending","userInfo","sessionInfo","isLive","livestate","INITIAL_STATE","authorize","allUserInfo","rootReducer","combineReducers","counter","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbdf1f1c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// actions 액션 타입\r\nconst INCREMENT = 'counterReducer/INCREMENT';\r\nconst DECREMENT = 'counterReducer/DECREMENT';\r\n// 이 패턴에서 따를 규칙은, 액션 타입을 만들때 reducer/ACTION_TYPE 의 형식으로 만들어야 합니다.\r\n\r\n// action creator 액션 생성자\r\nexport const increment = () => ({ type : INCREMENT }); \r\nexport const decrement = () => ({ type : DECREMENT });\r\n\r\nconst initialState = 0;\r\n\r\n//리듀서\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return state + 1;\r\n        case DECREMENT:\r\n            if (state > 0){\r\n                return state - 1;\r\n            } else {\r\n                return state;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport ExitButton from '@material-ui/icons/PowerSettingsNew';\r\nimport LoginButton from '@material-ui/icons/MeetingRoom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Alert from '@material-ui/icons/Notifications';\r\nimport { Person, Home } from '@material-ui/icons';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Apps';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst [MyPageIcon, HomeIcon] = [Person, Home];\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"up\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: \"2%\",\r\n        left : \"0\",\r\n        right: \"0\",\r\n        margin : \"auto\",\r\n        backgroundColor: \"#eb4e27\",\r\n        borderRadius: \"15px\", \r\n        width: \"90%\",\r\n        maxWidth: \"44em\",\r\n        zIndex: \"1\"\r\n      },\r\n  }));\r\n  \r\n\r\nconst NavOfGuest = (props) => { // 지금은 쓰지 않는다\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n                <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n                    <HomeIcon/>\r\n                </IconButton>\r\n                <IconButton  color=\"inherit\" aria-label=\"login\" onClick={()=>{\r\n                        history.push('/login');\r\n                    }}>\r\n                    <LoginButton/>\r\n                </IconButton>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n\r\n// const Logout = async() => {\r\n//   const headers = {\r\n//     'Authorization': 'Token ' + localStorage.token\r\n//   }\r\n//   const data = {}\r\n//   const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n//   // window.location.replace('/')\r\n// }\r\n\r\nconst NavOfUser = (props) => {\r\n    \r\n    const user = props.user.data.detail;\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n            <table style={{borderSpacing : \"1.5em 0px\"}}>\r\n                <tr>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"menu\">\r\n                            <HomeIcon onClick={() => {\r\n                            history.push('/');}} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"mypage\">\r\n                            <MyPageIcon onClick={ () => {\r\n                            history.push(\"/mypage\");\r\n                            } }/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    {/* <td >\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"logout\">\r\n                        <ExitButton onClick={()=> {\r\n                          Logout()\r\n                          localStorage.clear()\r\n                          window.location.replace('/')\r\n                          }}/>\r\n                         </IconButton>\r\n                    </Grid>\r\n                    </td> */}\r\n                </tr>                \r\n                <tr>\r\n                    <td style={{fontSize : \"0.5em\"}}>Home</td>\r\n                    <td style={{fontSize : \"0.5em\"}}>Mypage</td>\r\n                    {/* <td style={{fontSize : \"0.5em\"}}>Logout</td> */}\r\n                </tr>                \r\n            </table>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      {/* <Toolbar /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport {\r\n    NavOfGuest,\r\n    NavOfUser,\r\n}","// MESSAGES ACTIONS TYPES\r\nexport const ON_MESSAGES_VALUE_CHANGE = 'ON_MESSAGES_VALUE_CHANGE';\r\nexport const ON_MESSAGES_READING = 'ON_MESSAGES_READING';\r\nexport const ON_MESSAGES_READ = 'ON_MESSAGES_READ';\r\n\r\n// USER ACTIONS TYPES\r\nexport const USER_GET_PENDING = 'USER_GET_PENDING';\r\nexport const USER_GET_SUCCESS = 'USER_GET_SUCCESS';\r\nexport const USER_GET_FAILURE = 'USER_GET_FAILURE';\r\nexport const GIVEUSER = 'user/GIVEUSER';\r\n\r\n// ALL USERS ACTIONS TYPES\r\nexport const ALL_USERS_GET_PENDING = 'ALL_USERS_GET_PENDING';\r\nexport const ALL_USERS_GET_SUCCESS = 'ALL_USERS_GET_SUCCESS';\r\nexport const ALL_USERS_GET_FAILURE = 'ALL_USERS_GET_FAILURE';\r\n\r\n// Question List Types\r\nexport const QUESTIONLIST_GET_PENDING = 'questionlist/QUESTIONLIST_GET_PENDING';\r\nexport const QUESTIONLIST_GET_SUCCESS = 'questionlist/QUESTIONLIST_GET_SUCCESS';\r\nexport const QUESTIONLIST_GET_ERROR = 'questionlist/QUESTIONLIST_GET_ERROR';\r\nexport const QUESTIONLIST_DELETE = 'questionlist/QUESTIONLIST_DELETE'\r\n\r\n// SESSION ACTIONS TYPES\r\nexport const SETLIVE = 'session/setlive';\r\nexport const SESSION_GET_PENDING = 'SESSION_GET_PENDING';\r\nexport const SESSION_GET_SUCCESS = 'SESSION_GET_SUCCESS';\r\nexport const SESSION_GET_FAILURE = 'SESSION_GET_FAILURE';\r\n// MY_SESSION ACTIONS TYPES\r\nexport const MY_SETLIVE = 'mySession/setlive';\r\nexport const MY_SESSION_GET_PENDING = 'MY_SESSION_GET_PENDING';\r\nexport const MY_SESSION_GET_SUCCESS = 'MY_SESSION_GET_SUCCESS';\r\nexport const MY_SESSION_GET_FAILURE = 'MY_SESSION_GET_FAILURE';\r\n\r\n// Entered Session Types\r\nexport const ENTEREDSESSION_GET_PENDING = 'enteredSession/ENTEREDSESSION_GET_PENDING';\r\nexport const ENTEREDSESSION_GET_SUCCESS = 'enteredSession/ENTEREDSESSION_GET_SUCCESS';\r\nexport const ENTEREDSESSION_GET_ERROR = 'enteredSession/ENTEREDSESSION_GET_ERROR';\r\nexport const ENTEREDSESSION_DELETE = 'enteredSession/ENTEREDSESSION_DELETE'","import {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction userGetApi(token){\r\n    const config = {\r\n                headers: { Authorization: 'Token ' + token }\r\n            }\r\n    return axios.get('https://www.ask2live.me/api/user/read', config)\r\n}\r\n\r\nexport const giveUser = (given) => ({ type : GIVEUSER, user : given });\r\n\r\nexport const getUserInfo = token => dispatch => {\r\n    console.log('-----getUserInfo start-----')\r\n    // dispatch({type: USER_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: USER_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: USER_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, {useState, memo} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoginButton from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport \"../../styles/style.css\";\r\nimport {getUserInfo} from \"../../actions/UserActions\";\r\nimport { SignalCellularNoSimOutlined } from '@material-ui/icons';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .MuiTextField-root': {\r\n      width: '25ch',\r\n    },\r\n    '& > *': {\r\n    },\r\n  },\r\n  list: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst style = {\r\n    login : {\r\n        position : \"absolute\",\r\n        display:\"flex\",\r\n        width:\"100%\",\r\n        justifyContent:\"center\",\r\n        flexDirection: \"column\",\r\n        top : \"43%\",\r\n    },\r\n    loginWrapper : {\r\n        position : \"fixed\",\r\n        backgroundColor : \"white\",\r\n        width : \"100%\",\r\n        height : \"100%\",\r\n    },\r\n    loginCard : {\r\n        top : \"18%\",\r\n        // backgroundColor: \"skyblue\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"15px\",\r\n        boxShadow: \"1px 1px 2px 2px black\",\r\n        paddingTop: \"1em\",\r\n        maxWidth : \"23em\",\r\n        width : \"16em\",\r\n        height : \"21em\",\r\n        position : \"fixed\",\r\n    },\r\n    loginBtnWrapper : {\r\n        position: \"absolute\",\r\n        top : \"88%\",\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    loginBtn : {\r\n\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    infoIcon : {\r\n        color :\"grey\",\r\n        position: \"absolute\",\r\n        top: \"88%\",\r\n        right: \"4%\",\r\n        cursor: \"pointer\",\r\n    },\r\n    logo : {\r\n        height: \"2.3em\",\r\n        width : \"2.3em\", \r\n        backgroundImage:\"url('/static/logo.png')\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"contain\",\r\n    }\r\n}\r\n\r\nconst LoginPage = (props) => { \r\n    const history = useHistory();\r\n    if (localStorage.token) {\r\n      history.push('/main')\r\n    }\r\n\r\n    const [loginId, setLoginId] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [openTwo, setOpenTwo] = useState(false);\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleClickTwo = () => {       \r\n        setOpenTwo(true);\r\n    };\r\n    \r\n    const handleCloseTwo = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpenTwo(false);\r\n    };\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    /*\r\n    axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n    */\r\n\r\n    const [id, setId] = useState(\"\") \r\n\r\n    const Login = async({loginId, loginPassword}) => {\r\n      let dataToSubmit = {\r\n        username : loginId,\r\n        password : loginPassword\r\n      }\r\n      axios.post('https://www.ask2live.me/api/user/login', \r\n      dataToSubmit,\r\n      ).then((res) => {\r\n        console.log(\"res\", res)\r\n        window.localStorage.setItem('token', res.data.detail.token)\r\n        dispatch(getUserInfo(res.data.detail.token));\r\n        console.log(res);\r\n        if (props.location.before)\r\n            history.push(props.location.before)\r\n        else\r\n            history.push('/main')\r\n      }).catch(\r\n        (err) => handleClick())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={style.loginWrapper}>\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.loginCard}>\r\n                        <Grid container justify=\"center\">\r\n                             <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">ASK</p>\r\n                             {/* <div style={{display:\"flex\", paddingBottom: \"4px\", alignItems: \"center\"}}>\r\n                                 <ContactSupportIcon style={{fontSize:40}}/>\r\n                            </div> */}\r\n                            <div style={style.logo}>\r\n                            </div>\r\n\r\n                            <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">LIVE</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginBottom:\"0\",fontSize : \"0.8em\"}}>궁금한 점을 자유롭게 물어보고</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginTop: \"8px\", fontSize : \"0.8em\"}}>라이브로 생생한 답변을 들어보세요!</p>   \r\n                        </Grid>\r\n                        <div style={style.login}>\r\n                            <Grid style={{height: \"5em\"}} container justify=\"center\">\r\n                                <TextField \r\n                                errer={loginId.length > 5}\r\n                                helperText={loginId.length > 5 ? \"닉네임은 6자까지만 가능합니다\" : \"\"}\r\n                                value={loginId}\r\n                                placeholder=\"닉네임\"\r\n                                size=\"1em\"\r\n                                style= {{marginBottom : \"1em\"}}\r\n                                id=\"outlined-search\" type=\"search\" variant=\"outlined\"\r\n                                onChange={(event) => \r\n                                    setLoginId(event.target.value.substring(0, 6))\r\n                                }\r\n                                />\r\n                            </Grid>\r\n                            <Grid container justify=\"center\">\r\n                                <TextField\r\n                                style={{position:\"absolute\"}}\r\n                                id=\"outlined-search\" placeholder=\"패스워드\" type=\"password\" variant=\"outlined\"\r\n                                onChange={(event) => setLoginPassword(event.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </div>\r\n                \r\n                        <Grid container justify=\"center\">\r\n                            <div style={style.loginBtnWrapper}>\r\n                                <button style={style.loginBtn} onClick={() => Login({loginId, loginPassword})}>\r\n                                    <span style={{fontSize: \"1.2em\"}} className=\"BMJUA\">로그인</span>\r\n                                </button>\r\n                                {/* <button type=\"button\" onClick={() => loginMatch(loginId)}/> */}\r\n                            </div>\r\n                        </Grid>\r\n                        <InfoIcon \r\n                        onClick={handleClickTwo}\r\n                        style={style.infoIcon}/>\r\n                    </div>      \r\n                </Grid>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                    유효하지 않은 정보입니다.\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar \r\n                style={{position:\"fixed\", top: \"80%\"}}\r\n                open={openTwo} autoHideDuration={6000} onClose={handleCloseTwo}>\r\n                    <Alert \r\n                    style={{backgroundColor:\"black\"}}\r\n                    onClose={handleCloseTwo} severity=\"error\">\r\n                    중복되지 않은 닉네임으로<br/>\r\n                    회원가입과 동시에 로그인이<br/>\r\n                    가능합니다!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default LoginPage","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(holeId){\r\n    return axios.get('https://www.ask2live.me/api/hole/' + holeId + '/questions');\r\n}\r\n\r\nconst getQuestionlist = holeId => dispatch => {\r\n    console.log('-----getQuestionlist-----')\r\n    dispatch({type: QUESTIONLIST_GET_PENDING}); // ��û�� ���۵Ǿ��ٴ� ���� �˸�\r\n\r\n    // ��û ����\r\n    return getApi(holeId).then(\r\n        (response) => {\r\n            console.log(response);\r\n            dispatch({ type: QUESTIONLIST_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: QUESTIONLIST_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getQuestionlist;\r\n","import {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n    MY_SESSION_GET_PENDING,\r\n    MY_SESSION_GET_SUCCESS,\r\n    MY_SESSION_GET_FAILURE,\r\n  } from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nexport const setLive = (given_holeId, given_livestate) => ({ type : SETLIVE, holeId: given_holeId,  livestate: given_livestate});  //\r\n\r\nfunction sessionGetApi(){\r\n    return axios.get('https://www.ask2live.me/api/hole')\r\n}\r\n\r\nfunction userSessionGetApi(token){\r\n    const config = {\r\n        headers: {Authorization: 'Token ' + token}\r\n    }\r\n    return axios.get('https://www.ask2live.me/api/user/read/hole',\r\n        config\r\n    )\r\n}\r\n\r\nexport const getSessionInfo = () => dispatch => {\r\n    console.log('-----getSessionInfo start-----')\r\n    dispatch({type: SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return sessionGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\nexport const getUserSessionInfo = token => dispatch => {\r\n    console.log('-----getUserSessionInfo start-----')\r\n    dispatch({type: MY_SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userSessionGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: MY_SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: MY_SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import getQuestionlist from \"../../actions/QuestionListActions\";\r\nimport { getSessionInfo } from '../../actions/SessionActions';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport { Progress } from 'antd';\r\nimport React, {useState} from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport axios from \"axios\";\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../styles/style.css\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { CardActions, Divider } from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      flexGrow: 1,\r\n      justifyContent : \"center\",\r\n      maxWidth:\"40em\",\r\n      \r\n      \"& > *\": {\r\n        margin: \"0 1em 1em 1em\",\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(40)\r\n      }\r\n    },\r\n    paper: {\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      paddingTop: \"0.5em\",\r\n      // paddingBottom: \"1em\",\r\n      maxWidth: \"20em\",\r\n      minWidth: \"17em\",\r\n      cursor:\"pointer\",\r\n\r\n    },\r\n    title: {\r\n      width: \"100%\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      fontSize: \"14\",\r\n      // paddingBottom: \"1em\"\r\n    },\r\n    successContent: {\r\n      width: \"80%\",\r\n      position: \"relative\",\r\n      // top: \"5px\",\r\n      transform: \"translate(0,-2em)\",\r\n      // display: \"inline-Block\",\r\n    },\r\n    content: {\r\n      width: \"80%\",\r\n      position: \"relative\",\r\n      // top: \"5px\",\r\n      transform: \"translate(0,-2em)\",\r\n      // display: \"inline-Block\",\r\n    },\r\n    date: {\r\n      position: \"relative\",\r\n      top: \"10px\",\r\n      display: \"inline-Block\",\r\n    },\r\n    work_field: {\r\n      fontSize:\"xx-small\",\r\n      marginLeft: \"1em\",\r\n    },\r\n    wish: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questions: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questionIcon : {\r\n      marginLeft: \"2.5em\"\r\n    },\r\n    avatarWrapper : {\r\n      display: \"table\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      transform: \"translate(0,-4.9em)\",\r\n    },\r\n    avatar : {\r\n      width: theme.spacing(14),\r\n      height: theme.spacing(14),\r\n      // opacity: 0.7,\r\n      \r\n    },\r\n    check : {\r\n      position: \"absolute\",\r\n      paddingTop: \"80px\",\r\n    },\r\n\r\n    chipGrid : {\r\n      width: \"15%\",\r\n      position: \"absolute\",\r\n      paddingTop: \"110px\"\r\n    },\r\n\r\n    wishButton : {\r\n      width:\"250px\",\r\n      height: \"35px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: '#F24822',\r\n      marginTop: '7px',\r\n      zIndex: \"1\",\r\n      transform : \"translate(0,-5.5em)\",\r\n    },\r\n    hostProfile : {\r\n      width:\"110px\",\r\n      height: \"110px\",\r\n      textAlign: \"center\",\r\n      borderRadius: \"50%\",\r\n      marginTop: '7px',\r\n      zIndex: \"1\",\r\n      transform : \"translate(0,-21.5em)\",\r\n      opacity: \"0\",\r\n      cursor:\"pointer\",\r\n    },\r\n\r\n  }));\r\n\r\nconst onClickWish = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n}\r\n\r\nconst onClickWishCancel = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wishcancel\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log('onClickWishCacel 응답 받음', response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  });;\r\n}\r\n\r\nconst CurrentReserveSessionsCards = ({currentReserveSessions}) => {\r\n  console.log(\"컴포넌트 시작 Enter : CurrentReserveSessionsCards\")\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = () => {       \r\n         setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.user)\r\n    let i = 0;\r\n    return (\r\n        <>\r\n        {console.log(\"렌더링 시작\")}\r\n        <div className={classes.root}>\r\n            {currentReserveSessions.map((session) => (\r\n                <>\r\n                {console.log(session)}\r\n                <Paper elevation={3} className={classes.paper} onClick={() => {\r\n                  history.push('/preQuestions/'+session.id)\r\n                  dispatch(getQuestionlist(session.id))\r\n                }}>\r\n                <Grid container justify=\"center\">\r\n                  <Progress \r\n                    className={classes.progress}\r\n                    strokeWidth=\"5\"\r\n                    type=\"dashboard\"\r\n                    strokeColor=\"#F24822\"\r\n                    gapDegree = \"85\"\r\n                    width={140}\r\n                    format={percent => {\r\n                      if(percent == 100){\r\n                        return(\r\n                          <>\r\n                          <div className={classes.avatarWrapper}>\r\n                            <Avatar className={classes.avatar} src={session.host_profile_image?\r\n                            `https://www.ask2live.me${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                            \r\n                            {/* <CheckIcon size=\"large\" style={{fontSize: \"55\", opacity: 0.6, position:\"absolute\", top:\"25\", left:\"30\"}} color='error'/> */}\r\n                          </div>\r\n                          </>\r\n                        )\r\n                      }else{\r\n                        return(\r\n                          <>\r\n                          {/* {percent} Days */}\r\n                          <div className={classes.avatarWrapper}>\r\n                          <Avatar className={classes.avatar} src={session.host_profile_image?\r\n                            `https://www.ask2live.me${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                          </div>\r\n                          {/* <div className=\"NotoSans3\" style={{fontSize:\"large\", position:\"absolute\", transform:\"translate(1em, -3em)\"}}>안녕안녕</div> */}\r\n                          </>\r\n                        )}\r\n                      \r\n                      }}\r\n                    percent={(session.hole_reservations) ? \r\n                      Math.ceil(\r\n                        session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                        session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0}/>\r\n                          \r\n                        {session.hole_reservations.target_demand === 0 || session.hole_reservations.guests.length / session.hole_reservations.target_demand >= 1 ?\r\n                          <>\r\n                          <div className={classes.commingSoon}></div>\r\n                          </>\r\n                          :\r\n                          <>\r\n                          </>\r\n                        }\r\n                        <Grid container className={classes.chipGrid} justify=\"center\" alignItems=\"center\">\r\n                          <Chip \r\n                            size=\"small\"  \r\n                            color=\"default\" \r\n                            label={<>\r\n                          <span className=\"NanumGothic3\">{session.hole_reservations.target_demand == 0? \r\n                            100 : Math.ceil(session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100)}%달성</span></>} \r\n                          />\r\n                        </Grid>\r\n                        \r\n                        <Grid justify=\"flex-start\" className={classes.content}>\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {session.title}\r\n                            </span>\r\n                          <Typography variant='caption' component=\"div\" color=\"textSecondary\">\r\n                            {session.host_username? session.host_username : \"익명\"} \r\n                            <span className={classes.work_field}>\r\n                            {session.host_work_company? session.host_work_company : \" \"}\r\n                            {session.host_work_field? \" | \"+session.host_work_field : \" \"}\r\n                            </span>\r\n                          </Typography>\r\n                          <Grid item className={classes.date}>\r\n                          <Typography variant='caption' component=\"p\" >\r\n                            <span className=\"fontGradi NanumGothic3\" style={{fontSize: \"1.2em\", color: \"#D95032\"}}>\r\n                              <span >{`예정일자 `}</span>\r\n                            <Moment format=\"MM.DD hh:mm\">\r\n                              {session.reserve_date}\r\n                            </Moment></span>\r\n                          </Typography>\r\n\r\n                          <Grid container alignItems=\"stretch\" >\r\n                            <div style={{color:\"#F24822\", paddingTop:\"0.4em\"}}><FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon></div>\r\n                            <p className={classes.wish} >\r\n                            <span className=\"NanumGothic3\">찜 {session.hole_reservations.guests.length}/{session.hole_reservations.target_demand}</span>\r\n                            </p>\r\n                            <div className={classes.questionIcon} style={{color:\"#F24822\", paddingTop:\"0.5em\"}}><CommentIcon fontSize=\"small\"></CommentIcon></div>\r\n                            <p className={classes.questions}>\r\n                            <span className=\"NanumGothic3\">질문 {session.count_questions}개</span>\r\n                            </p>\r\n                          </Grid>\r\n                        </Grid> \r\n                        </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n\r\n                <Grid style={{width:\"100%\", margin: \"auto\", height: \"1em\", display: \"flex\", justifyContent: \"center\",}}>       \r\n                <Button \r\n                className={classes.wishButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                clickable='true' \r\n                startIcon={<FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon>}\r\n                onClick={() => {\r\n                  if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                  }else{\r\n                    session.hole_reservations.guests.indexOf(user.data.detail.id) === -1 ?\r\n                  <>\r\n                  {onClickWish(session.id)}\r\n                  {handleClick()}\r\n                  {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                  </>\r\n                  : \r\n                  <>\r\n                  {onClickWishCancel(session.id)}\r\n                  {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                  </>}\r\n                  }\r\n                  }\r\n                  >{Object.keys(user.data).length != 0 && session.hole_reservations.guests.indexOf(user.data.detail.id) != -1 ? \"취소하기\" : \"찜하기\"}</Button>\r\n                  </Grid> \r\n                  <Grid style={{width:\"100%\", margin: \"auto\", height: \"1em\", display: \"flex\", justifyContent: \"center\",}}>  \r\n                  <div className={classes.hostProfile} onClick={() => {\r\n                    history.push({\r\n                      pathname: '/mypage/' + session.host_username,\r\n                      state:{host : session}})\r\n                  }}>\r\n                  \r\n                  </div>\r\n                  </Grid>\r\n                  \r\n            </>\r\n            ))\r\n            }\r\n        </div>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">라이브가 열리면 알려줄게요! </span>\r\n                    </Alert>\r\n        </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrentReserveSessionsCards;","import { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport EnterIcon from '@material-ui/icons/MeetingRoom';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { useSelector } from \"react-redux\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    padding :\"0px\",\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"0 3px 5px 1px #3B568C\",\r\n    backgroundColor : \"rgba(255,255,255,1)\",\r\n    cursor : \"pointer\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n        paddingRight: \"5px\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        marginTop: \"8px\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 6px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        marginBottom : \"3px\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"5em\",\r\n        height : \"5em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -1.6em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -0.5em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst OtherLiveSessionsCards = ({otherLiveSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>?</span>;\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {otherLiveSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card \r\n            key={session.livehole_id} \r\n            className={classes.root}\r\n            >\r\n                <CardContent \r\n                onClick={()=>{\r\n                    if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                    }else{\r\n                    history.push({\r\n                        pathname: \"/session/live\",\r\n                        search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                        state : {\r\n                            hostName : session.host_username,\r\n                            hostImage : session.host_profile_image,\r\n                        }\r\n                })\r\n                }}}\r\n                style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                    <div style={style.profileimage}>\r\n                        <div className={classes.avatarRoot}>\r\n                        <Avatar alt=\"Remy Sharp\" style={{transform:\"translate(5px, 8px)\"}} className={classes.large} src={session.host_profile_image?\r\n                            `https://www.ask2live.me${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                            \r\n                        </div>\r\n                        <div style={style.livelogo1_back}/>\r\n                        <div style={style.livelogo1}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTime}>\r\n                        <PeopleIcon style={{marginRight : \"3px\", padding:\"0px\"}} fontSize=\"small\"/>\r\n                        <span\r\n                        className=\"NanumGothic3\"\r\n                        style={{marginRight: \"2px\", fontSize: \"13px\", color: \"black\"}}>\r\n                            {session.count_participant}명\r\n                        </span>\r\n                        <span \r\n                        className=\"fontGradi NanumGothic3\"\r\n                        style={{fontSize: \"0.7em\", color: \"#D95032\"}}>\r\n                        <Moment format=\" · mm분 전 시작\">\r\n                            {toDate(session.reserve_date) - now}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {/* {session.title.indexOf(\" \") > 7 ? \r\n                                session.title.splice(7, 0, \" \")\r\n                                :\r\n                                null                            \r\n                                } */}\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n               \r\n                \r\n                </CardContent>\r\n                    <div \r\n                    style={{position: \"absolute\", transform:\"translate(2.8em, -3.5em)\"}}>\r\n             \r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n\r\n                \r\n                    </div>\r\n            </Card>\r\n  \r\n   \r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OtherLiveSessionsCards;\r\n","import { useHistory } from 'react-router';\r\nimport React from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../styles/style.css\";\r\nimport \"../../App.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 250,\r\n      height: 250,\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n      float :\"left\",\r\n      margin:\"10px 10px\",\r\n    },\r\n    media: {\r\n        cursor: \"pointer\",\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    cardContent: {\r\n        height: \"30px\"\r\n    },\r\n    cookieWrapper: {\r\n        backgroundColor:\"#EEAC4B\",\r\n        backgroundPosition:\"center center\",\r\n        display : \"block\",\r\n        width: \"6.3em\",\r\n        height: \"6.3em\",\r\n        marginLeft: \"1em\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        overflow: \"hidden\",\r\n\r\n        \r\n    },\r\n    useCookie: {\r\n        margin: \"auto\",\r\n        backgroundImage: \"url('/static/cookieMould.png')\",\r\n        backgroundPosition : \"center center\",\r\n        backgroundSize: \"100%\",\r\n        width: \"6.3em\",\r\n        height : \"6.3em\",\r\n        overflow: \"hidden\",\r\n    },\r\n    living : {\r\n        background: \"url('/static/living.gif') no-repeat\",\r\n        width : \"17px\",\r\n        height: \"17px\",\r\n        backgroundSize: \"contain\",\r\n        position:\"absolute\",\r\n        transform : \"translate(13.2em, -13.7em)\",\r\n    }\r\n  }));\r\n  \r\n\r\nconst style = {\r\n    contentWrapper : {\r\n        // backgroundColor : \"skyblue\",\r\n        width : \"13.5em\",\r\n        height : \"6em\",\r\n        margin : \"0.7em 1.05em 1.05em 1.05em\",\r\n    },\r\n    contentTime : {\r\n        // backgroundColor : \"pink\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n    },\r\n    contentTitle : {\r\n        // backgroundColor : \"coral\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n        whiteSpace : \"\"\r\n    },\r\n    contentName : {\r\n        // backgroundColor : \"yellow\",\r\n        width : \"13.5em\",\r\n        height : \"1em\",\r\n        marginBottom : \"3px\"\r\n    },\r\n    contentWork : {\r\n        // backgroundColor : \"green\",\r\n        width : \"13.5em\",\r\n        height : \"1.2em\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    live2 : {\r\n        display: \"inline-block\",\r\n        backgroundImage : \"url('/static/Live_2.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        width : \"40px\",\r\n        height : \"28px\",\r\n    },\r\n\r\n}\r\n\r\nconst MyLiveSessionsCard = ({session}) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    \r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n  return (\r\n    <>\r\n    {/* <div className=\"padding\" onClick={() => {history.push({\r\n        pathname: \"/session?state=mylive&i_r_d=\"+ session.roomId + \"&channelNum=\" + session.channelNum\" \r\n    })}}> */}\r\n    <div \r\n    onClick={()=>{\r\n                history.push({\r\n                    pathname: \"/session/live\",\r\n                    search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                    state : {\r\n                        hostName : session.host_username,\r\n                        hostImage : session.host_profile_image,\r\n                    }\r\n            })}}\r\n    style={{cursor:\"pointer\"}}>\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n            <br/>\r\n            <div\r\n            style={{backgroundImage: session.host_profile_image? \"url('https://www.ask2live.me\"+session.host_profile_image + \"')\" : \"url('/static/reigns/1.jpg')\"}}\r\n            className={classes.cookieWrapper}\r\n\r\n            ><div className={classes.useCookie}></div> </div>\r\n            <div style={style.contentWrapper}>\r\n                <div style={style.contentTime}>\r\n                    <Grid container alignItems=\"center\">\r\n\r\n                    <div\r\n                    style={style.live2}\r\n                    />\r\n                    <span\r\n                    style={{fontSize:\"0.8em\"}}\r\n                    className=\"NanumGothic3\"\r\n                    >\r\n                        {session.count_participant}명\r\n                    </span>\r\n                    <span \r\n                    className=\"NanumGothic3\"\r\n                    style={{fontSize: \"0.8em\", color:\"rgba(0, 0, 0, 0.4)\", margin : \"0px 3px\"}}>\r\n                        ·\r\n                    </span>\r\n                    <span className=\"fontGradi BMJUA\" style={{fontSize:\"0.9em\"}}>\r\n                        <Moment format=\"mm분 전 시작\">\r\n                             {toDate(session.reserve_date) - now}\r\n                        </Moment>\r\n                    </span>\r\n                    </Grid>\r\n                </div>\r\n                <div style={style.contentTitle}>\r\n                    <span className=\"BMDOHYEON\" style={{fontSize:\"1em\"}}>\r\n                        {session.title}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentName}>\r\n                    <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                        {session.host_username}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentWork}>\r\n                    <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {/* <CardMedia\r\n            className={classes.media}\r\n            image={\"/static/live_IU.png\"}\r\n            title={session.title}\r\n            onClick={()=>{\r\n                history.push(\"/session/live?roomId=\" + session.livehole_id + \"&channelNum=\" + session.livehole_id)\r\n            }}\r\n            /> */}\r\n            {/* <div \r\n             <CardHeader\r\n            avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {session.host_username}\r\n                </Avatar>\r\n            }\r\n            action={\r\n                <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n                </IconButton>\r\n            }\r\n            title={session.title}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"mm분 전 시작\">\r\n                {toDate(session.reserve_date) - now}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <div className=\"centered\">\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {session.description}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent> \r\n             <CardActions disableSpacing>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n            </IconButton>\r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon/>\r\n            </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography paragraph>\r\n                    라이브 중\r\n                </Typography>\r\n            </CardContent>\r\n            </Collapse> */}\r\n        <div className={classes.living}/>\r\n        </Card>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MyLiveSessionsCards = ({myLiveSessions}) => {\r\n    return (\r\n        <>\r\n            {myLiveSessions.map((session) => (\r\n                <>\r\n                <MyLiveSessionsCard session={session} />\r\n                </>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyLiveSessionsCards;","import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport \"../../App.css\"\r\nimport \"../../styles/style.css\"\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    height: \"11.5em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    borderRadius: \"0px\",\r\n    boxShadow: \"0 0 0 0\",\r\n    backgroundColor : \"rgba(255,255,255,0)\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(11),\r\n    height: theme.spacing(11),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 0px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"6em\",\r\n        height : \"6em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -2.1em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -1em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst HostConfirmedSessionsCards = ({hostConfirmedSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n    const [reserveDate, setReserveDate] = useState(\"시작\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {hostConfirmedSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card key={session.livehole_id} className={classes.root}>\r\n                <CardContent style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                <div style={style.profileimage}>\r\n                    <div className={classes.avatarRoot}>\r\n                        <Avatar alt=\"Remy Sharp\" className={classes.large} src={session.host_profile_image?\r\n                        `https://www.ask2live.me${session.host_profile_image}`\r\n                        : \"/static/reigns/1.jpg\"} />\r\n                    </div>\r\n                </div>\r\n                <div style={style.buttonWrapper}>\r\n                    <div \r\n                    style={{posision: \"absolute\",width:\"5em\", paddingLeft:\"0.9em\",marginTop:\"1.2em\"}}>\r\n                    <Grid container justify=\"center\">\r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            setReserveDate(<>\r\n                                <Moment format=\"MM월 DD일 A h:mm\">\r\n                                     {toDate(session.reserve_date)}\r\n                                </Moment>\r\n                                </>);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n                    </Grid>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentTime}>\r\n                        <span \r\n                        className=\"NanumGothic3 fontGradi\"\r\n                        style={{fontSize: \"0.9em\", color: \"black\"}}>\r\n                        <Moment format=\"MM.DD A h:mm\">\r\n                            {toDate(session.reserve_date)}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle} <br/>\r\n                    <span className=\"BMJUA\">시작 :</span> {reserveDate}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nexport default HostConfirmedSessionsCards;","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    balloonWhite : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/Balloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    balloonColor : {\r\n        backgroundImage: \"url('/static/BalloonColor.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    mike : {\r\n        position : \"absolute\",\r\n        width :\"2em\", \r\n        height: \"2em\", \r\n        margin:\"0.7em 0em 0.5em 0.6em\",\r\n        backgroundImage: \"url('/static/mike.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize : \"contain\",\r\n        transform :\"translate(1.5em, 0.3em)\",\r\n    }\r\n}\r\n\r\n\r\nconst SessioinCreateButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={props.noMyLive? \r\n                {backgroundColor: \"white\"}\r\n                :\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push(\"/createSession\");\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>Live Q&A을 개설해서</p>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>경험을 나누어 보세요</p>\r\n                        <p\r\n                        className=\"NanumGothic4\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(개설하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        props.noMyLive?\r\n                        style.balloonColor\r\n                        :\r\n                        style.balloonWhite\r\n                        }>\r\n                        <div\r\n                        style={style.mike}/>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       flexGrow: 1,\r\n//       padding: theme.spacing(2),\r\n//     },\r\n//   }));\r\n\r\n\r\n// const style = {\r\n//     button : {\r\n//         position: 'relative',\r\n//         width: '60%',\r\n//         minWidth : \"19em\",\r\n//         marginBottom: '20px',\r\n//         backgroundColor: \"rgb(255,255,255)\",\r\n//         border : \"3px solid #F24822\"\r\n//     },\r\n//     buttonIcon: {\r\n//         fontSize: 30,\r\n//         color: 'white',\r\n//         backgroundColor: '#F24822',\r\n//         borderRadius: '50%',\r\n//     },\r\n//     buttonText: {\r\n//         align: 'left',\r\n//         fontSize: '1em',\r\n//         margin: '8px',\r\n//     },\r\n// }\r\n\r\n\r\n\r\n\r\n{/* <>\r\n<div className={classes.root}>\r\n    <Grid container justify=\"center\">\r\n      <Button\r\n        style={style.button}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        endIcon={<AddIcon style={style.buttonIcon} />}\r\n        onClick={() => {\r\n          history.push(\"/createSession\");\r\n        }}\r\n      >\r\n        <div style={style.buttonText} align=\"left\" className=\"NanumGothic3\">\r\n          Live Q&A를 개설해서\r\n          <br></br>\r\n          경험을 함께 나누어보세요\r\n        </div>\r\n      </Button>\r\n    </Grid>\r\n  </div>\r\n  </> */}\r\n\r\n\r\nexport {SessioinCreateButton}\r\n","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    profileBalloon : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/profileBalloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n}\r\n\r\n\r\nconst ProfileEditButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push({\r\n                    pathname :\"/mypage/\" + props.user.data.detail.username,\r\n                    state : props.user.data.detail\r\n                    });\r\n\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={\r\n                            {color: \"white\", margin : \"-3px 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>프로필 완성하셨나요?</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>프로필을 완성하면</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"2px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>많은 관심을 끌 수 있어요!</p>\r\n                        <p\r\n                        className=\"NanumGothic3\"\r\n                        style={\r\n                            {color: \"white\", margin : \"4px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(프로필 편집하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        style.profileBalloon\r\n                        }>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEditButton","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useSelector } from 'react-redux';\r\nimport {MyLiveSessionsCards, OtherLiveSessionsCards, CurrentReserveSessionsCards, HostConfirmedSessionsCards} from '../components/sessionCard' \r\nimport {SessioinCreateButton} from '../components/SessionCreateButton';\r\nimport  ProfileEditButton from \"../components/ProfileEditButton\";\r\n// material-ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Person } from '@material-ui/icons';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../App.css\"\r\nimport { Opacity } from '@material-ui/icons';\r\n\r\nconst [MyPageIcon] = [Person];\r\n\r\nlet myLiveSessions = []\r\nlet otherLiveSessions = []\r\nlet currentReserveSessions = []\r\nlet hosts = []\r\nlet hostConfirmedSessions = []\r\n\r\nconst style = {\r\n    mainLogo : {\r\n        backgroundImage : \"url('/static/LogoWhite.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        width : \"8em\",\r\n        height : \"3em\",\r\n        margin : \"0.5em 0 0 1.5em\"\r\n    },\r\n    mainOragne: {\r\n        position : \"absolute\",\r\n        backgroundColor: \"#eb4e27\",\r\n        height : \"15em\",\r\n        width: \"100%\",\r\n        zIndex : \"-1\",\r\n        overflow: \"hidden\",\r\n    },\r\n    descript: {\r\n        fontSize: \"1.2em\",\r\n        color: \"white\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    descript2: {\r\n        fontSize: \"1.2em\",\r\n        color: \"#1C418C\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    cookie1: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"3em\",\r\n        right : \"-2.5em\",\r\n    },\r\n    cookie2: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"-1.5em\",\r\n        width: \"2em\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        left : \"60%\",\r\n    },\r\n    button : {\r\n        position: 'relative',\r\n        width: '80%',\r\n        marginBottom: '20px',\r\n    },\r\n    buttonIcon: {\r\n        fontSize: 30,\r\n        fontColor: 'black',\r\n        backgroundColor: '#C0C0C0',\r\n        borderRadius: '50%',\r\n        marginLeft: '150%',\r\n    },\r\n    buttonText: {\r\n        align: 'left',\r\n        fontSize: '80%',\r\n        margin: '8px',\r\n        marginLeft: '-20%',\r\n        fontWeight: 900,\r\n    },\r\n    swiperLeft : {\r\n        backgroundImage: \"url('/static/toLeft.png')\",\r\n    },\r\n    swiperLeftHidden : {\r\n        display : \"none\"\r\n    },\r\n    swiperRight: {\r\n        backgroundImage: \"url('/static/toRight.png')\"\r\n    },\r\n    swiperRightHidden : {\r\n        display : \"none\"\r\n    },\r\n    logOut : {\r\n        position :\"absolute\",\r\n        transform:\"translate(-0.5em, -3em)\",\r\n        right: \"0%\",\r\n        color: \"white\",\r\n        cursor:\"pointer\",\r\n    }\r\n}\r\n\r\n    \r\nconst SessionCardContainer = (props) => {\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    const user = useSelector(state => state.user);\r\n    const sessions = useSelector(state => state.session.data);\r\n    const history = useHistory();\r\n    const allUsersData = useSelector(state => state.allUsers);\r\n    const mySession = useSelector(state => state.mySession.data);\r\n    // console.log('allUsers.data.data.detail', allUsersData.data.data.detail);\r\n\r\n    const wrapperCnt = (cnt) => {\r\n        let defaultSize = 270;\r\n        const rst = cnt * defaultSize;\r\n        return rst.toString() + \"px\";\r\n    }\r\n\r\n    if(user.error){\r\n        localStorage.clear()\r\n        window.location.replace('/')\r\n    }\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        let userDetail;\r\n        if(user.data.detail){\r\n            userDetail = user.data.detail\r\n        }else{\r\n            userDetail = {id:-1} // 반찬고 >_<\r\n        }\r\n        myLiveSessions = []\r\n        otherLiveSessions = []\r\n        currentReserveSessions = []\r\n        hostConfirmedSessions = []\r\n        hosts = []\r\n\r\n        sessions.map((session) => {\r\n            console.log(session)\r\n            if (session.status == \"DOING\" && session.hole_reservations && (session.hole_reservations).guests.indexOf(userDetail.id) != -1) {\r\n                myLiveSessions = [...myLiveSessions, session];\r\n                console.log(\"myLiveSEssion:\",myLiveSessions)\r\n            }\r\n            else if (session.status == \"DOING\") {\r\n                otherLiveSessions = [...otherLiveSessions, session];\r\n                console.log(\"otherLiveSessions\",otherLiveSessions)\r\n            }\r\n            else if (session.hole_reservations && session.hole_reservations.status==\"HOST_CONFIRMED\"){\r\n                hostConfirmedSessions = [...hostConfirmedSessions, session];\r\n                console.log(\"hostConfirmedSessions\",hostConfirmedSessions)\r\n            }else{\r\n                currentReserveSessions = [...currentReserveSessions, session];\r\n                console.log(\"currentReserveSessions\",currentReserveSessions)\r\n            }\r\n        })\r\n    }\r\n\r\n    if(Object.keys(allUsersData.data).length != 0){\r\n        const allUsers = allUsersData.data.data.detail;\r\n        allUsers.map((candidate) => {\r\n            if(candidate.hole_open_auth === true){\r\n                hosts = [...hosts, candidate]\r\n            }\r\n        })\r\n    }\r\n\r\n    const [swiperCnt, setSwiperCnt] = useState(1);\r\n\r\n    const leftBtnTrigger = () => {\r\n        if (swiperCnt == 1){\r\n            return style.swiperLeftHidden\r\n        }\r\n        else \r\n            return style.swiperLeft\r\n    }\r\n    const rightBtnTrigger = () => {\r\n        if (myLiveSessions.length == 1 || swiperCnt == myLiveSessions.length)\r\n            return style.swiperRightHidden\r\n        else\r\n            return style.swiperRight\r\n    }\r\n\r\n    const swipping = () => {\r\n        const where = swiperCnt == 1 ? \"0\" : ((swiperCnt - 1) * -270).toString() \r\n        return \"translate(\" + where.toString(where) + \"px, 0)\"\r\n    } \r\n\r\n    const Logout = async() => {\r\n        const headers = {\r\n          'Authorization': 'Token ' + localStorage.token\r\n        }\r\n        const data = {}\r\n        const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n        // window.location.replace('/')\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={style.mainOragne}>\r\n            <div style={style.cookie1} className=\"helloCookie\"/>\r\n        </div>\r\n        <div style={{float: \"right\", transform: \"translate(-1em, 0.6em)\", textAlign: \"center\", color: \"white\"}}>\r\n\r\n\r\n                <IconButton color=\"inherit\" aria-label=\"mypage\" style={{}}>\r\n                    <MyPageIcon style={{border: \"2px solid\", borderColor: \"white\", borderRadius: \"100%\"}} onClick={ () => {\r\n                    history.push(\"/mypage\");\r\n                    } }/>\r\n                </IconButton>\r\n\r\n\r\n        </div>\r\n        <br></br>\r\n        \r\n        <div style={style.mainLogo}/>\r\n        {/* <span \r\n        className=\"BMJUA\" \r\n        style={style.logOut}\r\n        onClick={()=> {\r\n            Logout()\r\n            localStorage.clear()\r\n            window.location.replace('/')\r\n            }}\r\n        >로그아웃</span> */}\r\n\r\n            {\r\n                myLiveSessions.length == 0 ?\r\n                <>\r\n                <br/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                어서오세요!<br/>\r\n                ASK2LIVE를 즐겨보세요!\r\n                </div>\r\n                </>\r\n                :\r\n                <>\r\n                <div\r\n                style={{\r\n                    backgroundImage: \"url('/static/mainLive.png')\",\r\n                    backgroundSize : \"contain\",\r\n                    backgroundRepeat : \"no-repeat\",\r\n                    width: \"25px\",\r\n                    height :\"25px\",\r\n                    marginLeft : \"1.5em\",\r\n                }}/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                찜했던<br/>\r\n                Live Q&A가 시작했어요!\r\n                </div>\r\n                </>\r\n            } \r\n        \r\n        <br/>\r\n\r\n \r\n\r\n            { myLiveSessions.length != 0 ?\r\n            <> \r\n                <Grid container justify=\"center\">\r\n                    <div className=\"myLiveWrapper\">\r\n                        <div className=\"myLive\" style={{display:\"block\", height: \"300px\", width: wrapperCnt(myLiveSessions.length), transform: swipping()}}>\r\n                            <MyLiveSessionsCards myLiveSessions={myLiveSessions} />\r\n                        </div>\r\n                        <div\r\n                        style={leftBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev - 1)\r\n                        }}\r\n                        className=\"swiperLeft\"/>\r\n                        <div\r\n                        style={rightBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev + 1)\r\n                        }}\r\n                        className=\"swiperRight\"/>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : <></>\r\n            }\r\n\r\n        <br></br>\r\n        <SessioinCreateButton noMyLive={myLiveSessions.length == 0}/>\r\n\r\n\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">LIVE 중인 Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { otherLiveSessions.length != 0 ? <OtherLiveSessionsCards otherLiveSessions={otherLiveSessions}/> : <p>라이브 중인 다른 세션이 없어요</p> }\r\n        </Grid>\r\n    \r\n        <br/>\r\n        <ProfileEditButton user={user}/>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">다가오는 LIVE Q&A</p>\r\n\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hostConfirmedSessions.length != 0 ? <HostConfirmedSessionsCards hostConfirmedSessions={hostConfirmedSessions}/> : <p>예정된 다른 세션이 없어요</p> }\r\n        </Grid>\r\n\r\n        <div className=\"center divider\">\r\n            <Divider variant=\"middle\"/>\r\n        </div>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">오픈 신청중인 LIVE Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { currentReserveSessions.length != 0 ? <CurrentReserveSessionsCards currentReserveSessions={currentReserveSessions} setFlag={setFlag}/> : <p>요청 받고있는 다른 세션이 없어요</p>}\r\n        </Grid>\r\n\r\n        {/* <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hosts.length != 0 ? <HostCards hosts={hosts}/> : <p>등록된 호스트가 없어요</p>}\r\n        </Grid> */}\r\n\r\n        \r\n        </>\r\n\r\n    \r\n    )\r\n};\r\n\r\nexport default SessionCardContainer\r\n","import { useHistory } from \"react-router\";\r\nimport React from \"react\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    maxWidth: \"70em\",\r\n  },\r\n  profile: {\r\n    flexGrow: 1,\r\n    maxWidth: \"43em\",\r\n    display: \"flex\",\r\n    height: 80,\r\n    alignItems: \"center\",\r\n    elevation: 3,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\n\r\nconst ProfileGate = (props) => {\r\n  // if(!props.location.state) history.push('/mypge');\r\n    console.log(\"profileGate\", props.user.detail);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const goToDetail = () => {\r\n        console.log('onClick');\r\n        history.push({\r\n          pathname: '/mypage/' + props.user.detail.username,\r\n          state: props.user.detail});\r\n\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <div style={{margin: \"auto\", maxWidth: \"43em\"}}>\r\n        <h2 className=\"CookieRun\" style={{color: \"#FFFFFF\"}}>My Page</h2>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        <Card className={classes.profile}>\r\n          <CardActionArea onClick={goToDetail}>\r\n            {props.user.detail.profile_image?\r\n              <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src={`https://www.ask2live.me${props.user.detail.profile_image}`}\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<p className=\"BMDOHYEON\" style={{ fontSize: \"1.2em\", transform: \"translate(0, 1.5px)\"}}>{props.user.detail.username}</p>}\r\n              // subheader=\"September 14, 2016\"\r\n              />\r\n            :\r\n              <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src=\"static/reigns/1.jpg\"\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<p className=\"BMDOHYEON\" style={{ fontSize: \"1.2em\", transform: \"translate(0, 1.5px)\"}}>{props.user.detail.username}</p>}\r\n              // subheader=\"September 14, 2016\"\r\n              />\r\n            }\r\n            \r\n\r\n              <ExitToAppIcon style={{ position: \"absolute\", right: 0, top: \"36%\", marginRight: \"4%\", color: \"rgba(0, 0, 0, 0.6)\"}}/>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileGate;\r\n","import { useHistory } from \"react-router\";\r\n\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst style = {\r\n  root: {\r\n    height: \"7%\",\r\n    left: 0,\r\n    right: 0,\r\n    position: \"fixed\",\r\n    margin: \"auto\",\r\n    // maxWidth: \"73em\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    backgroundColor: \"#fff8ef\",\r\n    borderBottom: \"2px solid\",\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n  borderbox: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  text: {\r\n    transform: \"translate(0, 1px)\",\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nconst MypageNav = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div style={style.root}>\r\n        <IconButton\r\n          style={{ position: \"absolute\", left: 0, height: \"100%\" }}\r\n          aria-label=\"back\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n        <div style={style.borderbox}>\r\n          <span style={style.text}>{props.text}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageNav;\r\n","import React, { useCallback } from \"react\";\r\nimport ProfileGate from \"./ProfileGate\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { SessioinCreateButton } from \"../SessionCreateButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    top: \"9%\",\r\n    backgroundColor: \"#EF5941\",\r\n  },\r\n  my: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(0),\r\n    textAlign: \"left\",\r\n    // color: theme.palette.text.secondary,\r\n    // position: \"absolute\",\r\n    backgroundColor: \"#EF5941\",\r\n    width: \"100%\",\r\n    height: \"90%\",\r\n    // maxWidth: \"43em\",\r\n    // borderRadius: \"15px\",\r\n  },\r\n  myBottomCard: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  logOut : {\r\n\r\n    transform:\"translate(-0.5em,  1em)\",\r\n    float:\"right\",\r\n    color: \"white\",\r\n    cursor:\"pointer\",\r\n  }\r\n}\r\n\r\nconst Logout = async() => {\r\n  const headers = {\r\n    'Authorization': 'Token ' + localStorage.token\r\n  }\r\n  const data = {}\r\n  const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n  // window.location.replace('/')\r\n}\r\n\r\nconst MyPage = (props) => {\r\n  const classes = useStyles();\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필\"} />\r\n    <div style={{position: \"relative\", height: \"7vh\", width:\"100%\", backgroundColor: \"#EF5941\",}}/>\r\n      {/* <div className={classes.root}>{}</div> */}\r\n      <Grid container justify=\"center\" >\r\n        <div className={classes.my}>\r\n          <div style={{width: \"100%\", maxWidth: \"43em\", margin: \"auto\"}}>\r\n\r\n            <span \r\n              className=\"BMJUA\" \r\n              style={style.logOut}\r\n              onClick={()=> {\r\n                  Logout()\r\n                  localStorage.clear()\r\n                  window.location.replace('/')\r\n                  }}\r\n              >로그아웃</span>\r\n              <ProfileGate user={props.user} />\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Grid>\r\n      <div style={{ position: \"relative\", top: \"50%\" }}>\r\n        <SessioinCreateButton />\r\n      </div>\r\n      <div style={{ padding: \"0 16px\", margin: \"auto\", maxWidth: \"43em\" }}>\r\n        <h3 className=\"CookieRun\">Live QnA</h3>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import axios from \"axios\";\r\n\r\nexport const postSessionToReserve = async(session) => {\r\n  console.log(\"-----postSessionToReserve start-----\");\r\n\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  const res = await axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + session.id + \"/hostconfirm\",\r\n    data,\r\n    config,\r\n  );\r\n  console.log(\"hole reserved: \", res);\r\n};\r\n","import { postSessionToReserve } from '../../actions/SessionToReserveActions';\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { getUserSessionInfo } from '../../actions/SessionActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  paper: {\r\n    position: \"absolute\",\r\n    bottom: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"20px 20px 0 0 \",\r\n    zIndex : \"3\",\r\n  },\r\n  title: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font2: {\r\n    color: \"#030916\",\r\n    fontSize: \"1em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font3: {\r\n    fontSize: \"1em%\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    margin: \"3% 5% 0 0\",\r\n  },\r\n};\r\n\r\nconst SessionConfirm = (props) => {\r\n  console.log(\"SessionConfirm\");\r\n  const { session, goListUp, goDark, handleClick } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <>\r\n    <Paper style={style.paper} elevation={1}>\r\n      <div className=\"BMDOHYEON\" style={style.title}>\r\n        {/* <Typography variant=\"h3\"  gutterBottom> */}\r\n        오픈 확정하기\r\n        {/* </Typography> */}\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font}>\r\n        {Date(session.reserve_date).substring(0, 21)}에 예정된 <br></br>\"\r\n        {session.title}\"의 스케쥴을 확정하시겠어요?\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font2}>\r\n        스케줄을 확정하면 '찜하기' 버튼을 누른 유저에게\r\n        <br></br>\r\n        알림이 전송됩니다!\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <Button\r\n            style={style.button}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              goListUp({ transform: \"translate(0, 100%)\" });\r\n              goDark({ animation: \"golight 0.7s\" });\r\n              setTimeout(() => {\r\n                goDark({ display: \"none\" });\r\n              }, 700);\r\n            }}\r\n          >\r\n            <div style={style.font3} color=\"030916\">\r\n              취소하기\r\n            </div>\r\n          </Button>\r\n\r\n          <Button\r\n            style={style.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => \r\n              {\r\n                postSessionToReserve(session);\r\n                handleClick();\r\n              }}\r\n              >\r\n            <div style={style.font3} color=\"030916\">\r\n              확정하기\r\n            </div>\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SessionConfirm };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport Moment from \"react-moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"7.5em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    backgroundColor:\"#EEAC4B\",\r\n    float: \"left\",\r\n    width: \"4em\",\r\n    height: \"4em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"4em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n      boxShadow: \"2px 2px 2px 2px #D95032\",    // 섀도우 색\r\n      border: \"solid 1px white\",    // 테두리 색\r\n      backgroundColor:\"black\"      // 배경색\r\n  }\r\n}\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" >\r\n      <Box width=\"100%\" mr={1} style={{marginLeft:\"0.8em\"}}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst MypageLiveSession = (props) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const { session, setFlag } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [demand, setDemand] = useState(false);\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {       \r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = async(event, reason) => {\r\n    await dispatch(getUserSessionInfo(localStorage.token))\r\n    setListUp({ transform: \"translate(0, 100%)\" });\r\n    setDark({ animation: \"golight 0.7s\" });\r\n    setTimeout(() => {\r\n    setDark({ display: \"none\" });\r\n    }, 700);\r\n    history.replace(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDemand = () => {\r\n    setDemand(true);\r\n  }\r\n\r\n  const handleDemandClose = (event, reason) => {\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setDemand(false);\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    const res = await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n    console.log(\"hole deleted: \", res);\r\n    history.push(\"/mypage\");\r\n  };\r\n  console.log('session!',session)\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"21em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root} >\r\n          <br></br>\r\n\r\n          {session.host_profile_image? \r\n          <>\r\n          <div\r\n            style={{ backgroundImage: `url('https://ask2live.me${session.host_profile_image}')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          </>\r\n            :\r\n            <div\r\n            style={{ backgroundImage: `url('/static/reigns/1.jpg')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          }\r\n          \r\n\r\n          <CardHeader\r\n            style={{ padding: \"0 8px 0 8px\", transform: \"translate(0, -5px)\" }}\r\n            title={<Typography style={{whiteSpace:\"nowrap\",width:\"13em\", overflow:\"hidden\", textOverflow:\"ellipsis\"}} variant=\"body2\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM.DD hh시 mm분\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>\r\n                }\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon fontSize=\"small\"/>\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          {/* 게이지바 추가 */}\r\n          <div style={{width: \"18em\"}}>\r\n            <LinearProgressWithLabel \r\n            value={(session) ?\r\n              Math.ceil(\r\n                session.current_demand / session.target_demand <= 1 ?\r\n                session.current_demand / session.target_demand * 100 : 100) : 0}/>\r\n           </div>\r\n\r\n          <CardContent style={{padding: 0, }}>\r\n            <CardActions style={{paddingLeft: 4, paddingTop: 0}}>\r\n              {session.status != \"DONE\" && user.id === parseInt(session.host) && (\r\n                <Button\r\n                  style={{ backgroundColor: \"#3f51b5\", paddingTop: 0, paddingBottom: 0 }}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    console.log(session)\r\n                    if(session.current_demand === session.target_demand){\r\n                      setListUp({ transform: \"translate(0, 50%)\" });\r\n                      setDark({ animation: \"godark 0.7s\" });\r\n                    } else {\r\n                      handleDemand();\r\n                    }\r\n                  }}\r\n                >\r\n                  {/* <Typography variant=\"body2\" style={{ fontWeight: 600 }}> */}\r\n                  <span className=\"BMJUA\" style={{color: \"#FFFFFF\"}}>\r\n                    예약 확정하기\r\n                  </span>\r\n                  {/* </Typography> */}\r\n                </Button>\r\n              )}\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  style={{borderColor: \"#3f51b5\", marginLeft: \"1.5em\",}}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {onDelete()}\r\n                      {setTimeout(\r\n                        () => dispatch(getUserSessionInfo(localStorage.token)),\r\n                        200\r\n                      )}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  {/* <Typography variant=\"body2\" style={{ fontWeight: 600 }}> */}\r\n                  <span className=\"BMJUA\" color=\"#3f51b5\">\r\n                    삭제하기\r\n                  </span>\r\n                  {/* </Typography> */}\r\n                </Button>\r\n                \r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      <div style={listup} className=\"hiddenlist\" maxWidth=\"\">\r\n        <SessionConfirm\r\n          session={session}\r\n          goListUp={setListUp}\r\n          goDark={setDark}\r\n          handleClick={handleClick}\r\n        />\r\n      </div>\r\n      <div style={dark} className=\"mypagelayerfordark\"></div>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", bottom: \"50%\" }}\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          <span style={{ color: \"white\" }}>Live Q&A 생성 완료!</span>\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n    <Snackbar open={demand} autoHideDuration={1500} onClose={handleDemandClose}>\r\n      <Alert style={{width: \"100%\", backgroundColor: \"black\", color: \"white\"}} onClose={handleDemandClose} severity=\"info\">\r\n        아직 목표 인원 수에<br/>\r\n        도달하지 않았습니다.<br/><br/>\r\n        다른 유저가 찜하는 것을<br/>\r\n        기다려 주세요!\r\n      </Alert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageLiveSession;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Moment from \"react-moment\";\r\n\r\n\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"6.8em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    border: 'solid',\r\n    borderColor: '#D95032',\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    backgroundColor:\"#EEAC4B\",\r\n    float: \"left\",\r\n    width: \"4em\",\r\n    height: \"4em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"4em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst MypageConfirmedSession = ({ session }) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n\r\n  const onChangeDoing = async(session, user) => {\r\n    console.log(\"ChangeDoing\")\r\n    console.log(session.id)\r\n    console.log(user)\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    const data = {\r\n      \r\n      channel_num : String(session.id) + '123',\r\n      host_uid : user.id,\r\n      \r\n    }\r\n    const res = await axios.post(\r\n      \"https://www.ask2live.me/api/hole/\" + session.id + \"/live/create\",\r\n      data,\r\n      config,\r\n    );\r\n\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    // await postSessionDelete(session);\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    const res = await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n    console.log(\"hole deleted: \", res);\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"21em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n          <br></br>\r\n\r\n          {session.host_profile_image? \r\n          <>\r\n          <div\r\n            style={{ backgroundImage: `url('https://ask2live.me${session.host_profile_image}')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          </>\r\n            :\r\n            <div\r\n            style={{ backgroundImage: `url('/static/reigns/1.jpg')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          }\r\n\r\n          <CardHeader\r\n            style={{ padding: \"0 8px 0 8px\", transform: \"translate(0, -5px)\" }}\r\n            title={<Typography style={{whiteSpace:\"nowrap\",width:\"13em\", overflow:\"hidden\", textOverflow:\"ellipsis\"}}variant=\"body2\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM.DD hh시 mm분\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon fontSize=\"small\"/>\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          <CardContent style={{padding:0}}>\r\n            <CardActions style={{paddingLeft: 4, paddingTop: 0}}>\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  style={{ backgroundColor: \"#3f51b5\", paddingTop: 0, paddingBottom: 0 }}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    history.push({\r\n                        pathname: \"/session/reserve\",\r\n                        search: \"?holeId=\" + session.id,\r\n                    })\r\n                  }}\r\n                >\r\n                  <span className=\"BMJUA\" style={{color: \"#FFFFFF\"}}>\r\n                    라이브하기\r\n                  </span>\r\n                </Button>\r\n                <Button\r\n                 style={{borderColor: \"#3f51b5\", marginLeft: \"1.5em\",}}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {onDelete()}\r\n                      {setTimeout(\r\n                        () => dispatch(getUserSessionInfo(localStorage.token)),\r\n                        200\r\n                      )}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <span className=\"BMJUA\" color=\"#3f51b5\">\r\n                    삭제하기\r\n                  </span>\r\n                </Button>\r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageConfirmedSession;","export const Emoji = props => (\r\n    <span\r\n      className=\"emoji\"\r\n      role=\"img\"\r\n      aria-label={props.label ? props.label : \"\"}\r\n      aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n      {props.symbol}\r\n    </span>\r\n  )","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Mypage from \"../components/mypage/Mypage\";\r\n// import Profile from '../components/mypage/Profile';\r\nimport SessionCardContainer from \"./SessionCardContainer\";\r\nimport MypageLiveSession from \"../components/mypage/MypageLiveSession\";\r\nimport MypageConfirmedSession from \"../components/mypage/MypageConfirmedSession\";\r\nimport { getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport { getUserInfo } from \"../actions/UserActions\";\r\nimport { Emoji } from \"../components/Emoji\";\r\nimport { SessioinCreateButton } from \"../components/SessionCreateButton\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// material-ui\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { SpeakerNotesOffOutlined } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   width: \"100%\",\r\n  //   maxWidth: \"70em\",\r\n  //   backgroundColor: theme.palette.background.paper,\r\n  // },\r\n  nested: {\r\n    width: \"100%\",\r\n    maxWidth: \"70em\",\r\n    paddingLeft: theme.spacing(4),\r\n    borderBottom: \"solid thin\",\r\n    margin: \"auto\"\r\n    // marginBottom: \"2%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n\r\n  alert: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    zIndex: 2,\r\n    maxWidth: \"25em\",\r\n    size: \"large\",\r\n  },\r\n  itemText: {\r\n    width: \"100%\",\r\n    paddingLeft: \"5%\",\r\n    transform: \"translate(0, 1.5px)\",\r\n    // marginTop: \"1%\",\r\n  },\r\n};\r\n\r\n\r\n\r\nconst MyPageContainer = (props) => {\r\n  console.log(\"컴포넌트 실행!\");\r\n\r\n  const [flag, setFlag] = useState({ display: \"none\" });\r\n  const [render, setRender] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector((state) => state.user.data);\r\n  const sessions = useSelector((state) => state.mySession.data);\r\n  const wishSessions = useSelector((state) => state.mySession.data);\r\n\r\n  console.log(\"세션 :\", sessions);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.token\r\n    console.log(\"useEffect\");\r\n    dispatch(getUserInfo(token));\r\n    dispatch(getUserSessionInfo(token));\r\n    setRender(true);\r\n  }, [render]);\r\n\r\n  let myLiveSessions = [];\r\n  let myDoneSessions = [];\r\n  let myWishSessions = [];\r\n  let myConfirmSessions = [];\r\n  if (Object.keys(sessions).length != 0) {\r\n    sessions.detail.my_hole.map((session) => {\r\n      if (\r\n        session.status === \"NOT_START\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        if (session.reservation_status === \"HOST_CONFIRMED\") {\r\n          myConfirmSessions = [...myConfirmSessions, session];\r\n        } else {\r\n          myLiveSessions = [...myLiveSessions, session];\r\n        }\r\n      } else if (\r\n        session.status === \"DONE\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        myDoneSessions = [...myDoneSessions, session];\r\n      }\r\n    });\r\n  }\r\n\r\n  if (Object.keys(wishSessions).length != 0) {\r\n    wishSessions.detail.wish_hole.map((session) => {\r\n      myWishSessions = [...myWishSessions, session];\r\n    });\r\n  }\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const [openDone, setOpenDone] = useState(true);\r\n  const [openWish, setOpenWish] = useState(true);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const handleConfirmClick = () => {\r\n    setOpenConfirm(!openConfirm);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickDone = () => {\r\n    setOpenDone(!openDone);\r\n  };\r\n\r\n  const handleClickWish = () => {\r\n    setOpenWish(!openWish);\r\n  };\r\n\r\n\r\n  if (!user.detail || !sessions.detail) return <p>로딩중...</p>;\r\n\r\n  return (\r\n    <>\r\n      <Mypage user={user} />\r\n      {/* <SessioinCreateButton /> */}\r\n\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <div\r\n          style={{ display: \"inline-block\", width: \"100%\", maxWidth: \"43em\" }}\r\n        >\r\n          <ListItem\r\n            button\r\n            onClick={handleConfirmClick}\r\n            className={classes.nested}\r\n          >\r\n            {/* <ListItemIcon> */}\r\n              <Emoji symbol=\"🔊\" />\r\n            {/* </ListItemIcon> */}\r\n            <p className=\"BMJUA\" style={style.itemText} >진행 확정된 Q&A</p>\r\n            {openConfirm ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openConfirm} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myConfirmSessions.length != 0 ?\r\n                myConfirmSessions.map((session) => (\r\n                  <>\r\n                    <MypageConfirmedSession\r\n                      session={session}\r\n                    />\r\n                  </>\r\n                )) :\r\n                  <>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                      <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 진행 확정된 Q&A가 없습니다</p>\r\n                    </div>\r\n                  </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClick}\r\n            className={classes.nested}\r\n          >\r\n            <Emoji symbol=\"💬\" />\r\n            <p className=\"BMJUA\" style={style.itemText} >모집 중인 Q&A</p>\r\n            {open ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myLiveSessions.length != 0 ?\r\n                myLiveSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                  <>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                      <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 모집 중인 Q&A가 없습니다</p>\r\n                    </div>\r\n                  </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClickWish}\r\n            className={classes.nested}\r\n          >\r\n            <Emoji symbol=\"❤️\" />\r\n\r\n            <p className=\"BMJUA\" style={style.itemText} >찜한 Q&A</p>\r\n            {openWish ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openWish} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myWishSessions.length != 0 ?\r\n                myWishSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                <>\r\n                  <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 찜한 Q&A가 없습니다</p>\r\n                  </div>\r\n                </>\r\n              }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClickDone}\r\n            className={classes.nested}\r\n          >\r\n\r\n              <Emoji symbol=\"🔇\" />\r\n\r\n            <p className=\"BMJUA\" style={style.itemText} >진행 완료 Q&A</p>\r\n            {openDone ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openDone} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myDoneSessions.length != 0 ?\r\n                myDoneSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                <>\r\n                  <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 진행 완료한 Q&A가 없습니다</p>\r\n                  </div>\r\n                </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n        </div>\r\n      </Grid>\r\n\r\n      <div\r\n        style={{\r\n          height: \"4em\",\r\n          width: \"100%\",\r\n          marginBottom: \"4%\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPageContainer;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { postSessionToReserve } from '../actions/SessionToReserveActions';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport { Checkbox } from 'antd';\r\n\r\nimport axios from \"axios\";\r\nimport { getSessionInfo, getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport MypageNav from \"../components/mypage/MypageNav\";\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction NumAlert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    // fontFamily: \"BMJUA\"\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#EF4D57\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    fontSize: '0.8em'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#EF4D57\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert: {\r\n    boxShadow: \"2px 2px 2px 2px #D95032\", // 섀도우 색\r\n    border: \"solid 1px white\", // 테두리 색\r\n    backgroundColor: \"black\", // 배경색\r\n  },\r\n};\r\n\r\nconst SessionCreateContainer = (props) => {\r\n\r\n  let urlSearchParams = new URLSearchParams(\r\n    props.routerInfo.location.search.slice(1)\r\n  );\r\n\r\n  let defaultDate = new Date().toISOString()\r\n  console.log(\"defaultDate\", defaultDate)\r\n\r\n  const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleValid, setTitleValid] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionValid, setDescriptionValid] = useState(false);\r\n  \r\n  const [reserveDate, setReserveDate] = useState(defaultDate);\r\n  const [reserveDateValid, setReserveDateValid] = useState(false);\r\n  const [earlyDateValid, setEarlyDateValid] = useState(false);\r\n  const [count, setCount] = useState(0)\r\n\r\n  const [skipValid, setSkipValid] = useState(false);\r\n\r\n  const toDate = (reserve_date) => {\r\n    let date = new Date(reserve_date);\r\n    return date;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (holeId) {\r\n      axios\r\n        .get(\"https://www.ask2live.me/api/hole/read/\" + holeId)\r\n        .then((res) => {\r\n          const session = res.data.detail;\r\n          console.log(session)\r\n          setTitle(session.title);\r\n          setDescription(session.description);\r\n          let date = session.reserve_date.split(\":\");\r\n          setReserveDate(date[0] + \":\" + date[1]);\r\n          setCount(session.hole_reservations.target_demand);\r\n        });\r\n    }\r\n  }, [holeId]);\r\n\r\n  const [open, setOpen] = useState(0);\r\n  const [open2, setOpen2] = useState(0);\r\n  const [disable, setDisable] = useState(false)\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onIncrease = () => setCount(count + 1);\r\n  const onDecrease = () => count > 0 ? setCount(count - 1) : null;\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = (event, reason) => {\r\n    history.push(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick2 = () => {\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose2 = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen2(false);\r\n  };\r\n\r\n  const onClick = async () => {\r\n    if (earlyDateValid)\r\n        return;\r\n    setDisable(true)\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    console.log(localStorage.token);\r\n    \r\n    let session = {}\r\n    \r\n    const data = {\r\n      title: title,\r\n      description: description,\r\n      reserve_date: reserveDate,\r\n      target_demand: count,\r\n    };\r\n    console.log(data);\r\n    if (holeId) {\r\n      await axios\r\n        .patch(\r\n          \"https://www.ask2live.me/api/hole/update/\" + holeId,\r\n          data,\r\n          config\r\n        )\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    } else if(skipValid){\r\n      // sessionCreate\r\n      await axios\r\n      .post(\"https://www.ask2live.me/api/hole/create\", data, config)\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          session = res.data.detail\r\n        })\r\n      // sessionToReserve\r\n      postSessionToReserve(session);\r\n      console.log(\"postSessionToReserve success\")\r\n      // 라이브 하기\r\n      history.push({\r\n        pathname: \"/session/reserve\",\r\n        search: \"?holeId=\" + session.id,\r\n    })\r\n      \r\n    }else {\r\n      await axios\r\n        .post(\"https://www.ask2live.me/api/hole/create\", data, config)\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {holeId ? (\r\n        <MypageNav text={\"Live Q&A 수정하기\"} />\r\n      ) : (\r\n        <MypageNav text={\"Live Q&A 만들기\"} />\r\n      )}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        {/* <CssBaseline /> */}\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <AssignmentIcon />\r\n          </Avatar>\r\n\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"body1\"\r\n            butterBottom\r\n            style={{ fontFamily: \"BMJUA\" }}\r\n          >\r\n            세션 정보를 입력하세요\r\n          </Typography>\r\n          {/* <Typography variant=\"subtitle1\" gutterBottom>\r\n                    세션 정보를 입력하세요\r\n                </Typography> */}\r\n          <div className={classes.form}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"title\"\r\n              label=\"session title\"\r\n              name=\"title\"\r\n              error={titleValid}\r\n              helperText={titleValid ? \"제목을 입력해 주세요\" : \"\"}\r\n              // autoComplete=\"title\"\r\n              placeholder=\"세션 제목을 입력해주세요\"\r\n              autoFocus\r\n              value={title}\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 20)\r\n                  alert(\"제목은 20자 이내로 입력이 가능합니다!\");\r\n                setTitle(e.target.value.substring(0, 20));\r\n                setTitleValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            \r\n            <Checkbox onChange={(e) => {\r\n              console.log(\"e.target.checked\", e.target.checked)\r\n              if(e.target.checked){\r\n                setSkipValid(true)\r\n                console.log(\"skipValid-true\", skipValid)\r\n              }else{\r\n                setSkipValid(false)\r\n                console.log(\"skipValid-false\", skipValid)\r\n              }\r\n            }}><span style={{fontSize:\"small\"}} className=\"BMDOHYEON\">지금 당장 라이브 세션 열기</span></Checkbox>\r\n            \r\n            {skipValid ? \r\n            \r\n            <>\r\n                <TextField\r\n                margin=\"normal\"\r\n                disabled=\"true\"\r\n                fullWidth\r\n                id=\"reserveDate\"\r\n                label=\"Live Q&A 진행 예정일\"\r\n                name=\"reserveDate\"\r\n                type=\"datetime-local\"\r\n                autoFocus\r\n                value={reserveDate}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <Grid\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <HelpIcon\r\n                    color=\"disabled\"\r\n                    onClick={()=>\r\n                        handleClick2()\r\n                    }\r\n                  /><span style={{color:\"gray\"}}> &nbsp; 목표 인원 수</span>\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton disabled=\"true\" size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                disabled=\"true\"\r\n                  // margin=\"normal\"\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={count}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton disabled=\"true\" size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n              </>\r\n              \r\n            :\r\n            <>\r\n              <TextField\r\n                // variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                error={reserveDateValid || earlyDateValid}\r\n                helperText={reserveDateValid ? \"예약 일자를 입력해 주세요\" : \r\n                              earlyDateValid ? \"이전 날짜로는 입력할 수 없어요\" : \"\"}\r\n                id=\"reserveDate\"\r\n                label=\"Live Q&A 진행 예정일\"\r\n                name=\"reserveDate\"\r\n                type=\"datetime-local\"\r\n                // autoComplete=\"title\"\r\n                autoFocus\r\n                value={reserveDate}\r\n                // defaultValue={reserveDate}\r\n                onChange={(e) => {\r\n                  setReserveDate(e.target.value);\r\n                  let cur_date = new Date();\r\n                  console.log(reserveDate);\r\n                  console.log(\"설정한시간\", toDate(e.target.value).getTime());\r\n                  console.log(\"현재시간\", cur_date.getTime());\r\n                  console.log(\r\n                    (toDate(e.target.value).getTime() - cur_date.getTime()) / 1000\r\n                  );\r\n                  if (toDate(e.target.value).getTime() - cur_date.getTime() < 0)\r\n                      setEarlyDateValid(true)\r\n                  else\r\n                      setEarlyDateValid(false)\r\n                  setReserveDateValid(false);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <Grid\r\n              disabled=\"true\"\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <HelpIcon\r\n                    onClick={()=>\r\n                        handleClick2()\r\n                    }\r\n                  /> &nbsp; 목표 인원 수\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                  // margin=\"normal\"\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={count}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n              </>\r\n            }\r\n            \r\n            \r\n            \r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              name=\"description\"\r\n              placeholder=\"소개글을 입력해주세요\"\r\n              error={descriptionValid}\r\n              helperText={\r\n                descriptionValid ? \"어떤 내용의 Q&A인지 설명해 주세요\" : \"\"\r\n              }\r\n              value={description}\r\n              label=\"Live Q&A 짧은 소개\"\r\n              type=\"password\"\r\n              id=\"description\"\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 200)\r\n                  alert(\"소개는 200자 이내로 입력이 가능합니다!\");\r\n                setDescription(e.target.value.substring(0, 200));\r\n                setDescriptionValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            {holeId ? \r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                onClick={onClick}\r\n                disabled={disable}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            </>\r\n             : \r\n            <>\r\n            {skipValid?\r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={onClick}\r\n            disabled={disable}\r\n          >\r\n            Live Q&A 세션 바로 만들기\r\n            </Button>\r\n            :\r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={onClick}\r\n            disabled={disable}\r\n          >\r\n            Live Q&A 만들기\r\n            </Button>\r\n            }\r\n              \r\n            </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", bottom: \"50%\" }}\r\n        open={open}\r\n        autoHideDuration={1500}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          {holeId ? (\r\n            <span style={{ color: \"white\" }}>Live Q&A 수정 완료!</span>\r\n          ) : (\r\n            <span style={{ color: \"white\" }}>Live Q&A 생성 완료!</span>\r\n          )}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open2} autoHideDuration={6000} onClose={handleClose2}>\r\n                    <NumAlert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose2} severity=\"error\">\r\n                    <span style={{fontSize:\"1.1em\"}} className=\"BMJUA\">목표인원</span> \r\n                    을 달성하면 <br/>\r\n                    <span style={{fontSize:\"1.1em\"}} className=\"BMJUA\">예약 확정하기</span>\r\n                    를 할 수 있어요.<br/>\r\n                    예약을 확정하면\r\n                    <span style={{fontSize:\"0.9em\"}} className=\"Gmarket3\"> Live Q&A</span>\r\n                    를 열 수 있어요.\r\n                    </NumAlert>\r\n        </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SessionCreateContainer;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport \"../../styles/style.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { getUserInfo } from \"../../actions/UserActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontSize: \"1.3em\",\r\n    top: \"9%\",\r\n    left: \"5%\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform:\"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  editWrapper: {\r\n    height: \"7%\",\r\n    // left: 0,\r\n    right: 0,\r\n    position: \"absolute\",\r\n    margin: \"auto\",\r\n    // width: \"100%\",\r\n    // maxWidth: \"73em\",\r\n    bottom: 0,\r\n    // zIndex: 1,\r\n    // pointerEvents: \"none\",\r\n  },\r\n  editBtn: {\r\n    // pointerEvents:\"auto\",\r\n    // position: \"absolute\",\r\n    // right:0,\r\n    height: \"100%\",\r\n    // fontFamily: \"BMJUA\",\r\n    fontSize: \"1em\",\r\n    // transform: \"translate(0, 1px)\",\r\n  },\r\n};\r\n\r\nconst ProfileDetail = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  console.log(\"PROPS\", props);\r\n  const user = props.routerInfo.location.state;\r\n\r\n  let profile = {};\r\n  useEffect(() => {\r\n    dispatch(getUserInfo(localStorage.token));\r\n  });\r\n\r\n  if (props.routerInfo.location.state.host) {\r\n    const host = props.routerInfo.location.state.host;\r\n    console.log(\"host : \", host);\r\n    if (!host.host_work_company.length)\r\n      host.host_work_company = \"\";\r\n    if (!host.host_work_field.length) host.host_work_field = \"\";\r\n\r\n    profile = {\r\n      username: host.host_username,\r\n      profile_image: host.host_profile_image,\r\n      work_company: host.host_work_company,\r\n      work_field: host.host_work_field,\r\n      bio: host.host_bio,\r\n    };\r\n  } else {\r\n    if (!user.work_company.length)\r\n      user.work_company = \"\";\r\n    if (!user.work_field.length) user.work_field = \"\";\r\n    profile = {\r\n      username: user.username,\r\n      profile_image: user.profile_image,\r\n      work_company: user.work_company,\r\n      work_field: user.work_field,\r\n      bio: user.bio,\r\n    };\r\n  }\r\n\r\n  let editFlag = false;\r\n  if(user.username === profile.username) editFlag = true\r\n\r\n  const goToEdit = () => {\r\n    console.log(\"click\");\r\n    history.replace({\r\n      pathname: `${profile.username}/edit`,\r\n      state: user});\r\n  }\r\n  if (!user || !profile) return<p> 로딩중 </p>\r\n\r\n  return (\r\n    <>\r\n        <MypageNav text={\"프로필\"} editFlag={editFlag} />\r\n        \r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n        {user.username === profile.username && (\r\n          <>\r\n          <div style={style.editWrapper}>\r\n            <Button onClick={goToEdit} style={style.editBtn}>\r\n              <span className=\"CookieRun\">편집</span>\r\n            </Button>\r\n          </div>\r\n          </>\r\n        )}\r\n          <div>\r\n            <p className={classes.username}>{profile.username}</p>\r\n            {profile.profile_image?\r\n            <Avatar\r\n            className={classes.avatar}\r\n            aria-label=\"recipe\"\r\n            src={`https://www.ask2live.me${profile.profile_image}`}\r\n          ></Avatar>\r\n          :\r\n          <Avatar\r\n            className={classes.avatar}\r\n            aria-label=\"recipe\"\r\n            src=\"/static/reigns/1.jpg\"\r\n          ></Avatar>\r\n          }\r\n\r\n            \r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            [근무 회사] {profile.work_company}\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            [일하는 분야] {profile.work_field}\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n                \r\n              <p style={{fontFamily: \"BMJUA\", marginTop: 0, whiteSpace: \"pre-wrap\"}}>\r\n                {profile.bio}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDetail;\r\n","var blank = /\\s+/g;\r\nvar special = /[\\[\\]\\{\\}\\(\\),.`~!@#$%^&*|\\\\\\'\\\";:\\/?]/gi;\r\n\r\nexport const CheckSpaceNSpecial = (string) => {\r\n\r\n    return blank.test(string) || special.test(string);\r\n}\r\n\r\n// export const CheckSpecial = (string) => {\r\n\r\n//     return special.test(string);\r\n// }\r\n\r\nexport const ReplaceSpaceNSpecial = (string) => {\r\n\r\n    return string.replace(blank, \"\").replace(special, \"\");\r\n}\r\n\r\n// export const ReplaceSpecial = (string) => {\r\n\r\n//     return string.replace(special, \"\");\r\n// }","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport \"../../styles/style.css\";\r\n\r\nimport axios from \"axios\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { getUserInfo, updateUserInfo } from \"../../actions/UserActions\";\r\nimport { CheckSpaceNSpecial, ReplaceSpaceNSpecial } from \"../CheckString\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    // fontFamily: \"BMDOHYEON\",\r\n    // fontSize: \"1.3em\",\r\n    top: \"9%\",\r\n    left: \"5%\",\r\n    // top: \"12%\",\r\n    // left: \"6.6%\",\r\n    // maxWidth: \"6em\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  buttonGroup: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    left: 0,\r\n    right: 0,\r\n    bottom: \"5.5%\",\r\n    margin: \"auto\",\r\n    justifyContent: \"center\",\r\n  },\r\n  file: {\r\n    fontFamily: \"BMJUA\",\r\n    // fontWeight: \"bold\",\r\n    position: \"absolute\",\r\n    top: \"24%\",\r\n    left: \"5%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontWeight: \"lighter\",\r\n    padding: \"1px\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n    color: \"#EF5941\",\r\n    borderColor: \"#EF5941\",\r\n  },\r\n  button2: {\r\n    position: \"relative\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    padding: \"1px\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n    backgroundColor: \"#EF5941\",\r\n    opacity: \"0.9\",\r\n  },\r\n};\r\n\r\nconst MypageEdit = (props) => {\r\n  console.log(\"MypageEdit\");\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = props.routerInfo.location.state;\r\n\r\n  console.log(user);\r\n  \r\n  let usernameValue;\r\n  const [username, setUsername] = useState(user.username);\r\n  console.log(username);\r\n  const [profileImage, setProfileImage] = useState(\"https://www.ask2live.me\" + user.profile_image)\r\n  const [workField, setWorkField] = useState(user.work_field);\r\n  const [workCompany, setWorkCompany] = useState(user.work_company);\r\n  const [bio, setBio] = useState(user.bio);\r\n  // const [usernameValid, setUsernameValid] = useState(false);\r\n  // const [uniqueUserValid, setUniqueUserValid] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   setUsername(user.username);\r\n  // }, [])\r\n  const [image, setImage] = useState({});\r\n  // const [inputs, setInputs] = useState({\r\n    // username: user.username,\r\n  //   profile_image: \"https://www.ask2live.me\" + user.profile_image,\r\n  //   work_field: user.work_field,\r\n  //   work_company: user.work_company,\r\n  //   bio: user.bio,\r\n  // });\r\n\r\n  // const {  profile_image, work_field, work_company, bio } = inputs;\r\n\r\n  const dispatch = useDispatch();\r\n  const onChange = useCallback((e) => {\r\n    console.log(\"e.target.name\",e.target.name)\r\n    if(e.target.name === \"image\"){\r\n      if(e.target.files[0].size > 6000000){\r\n        alert(\"6MB 이상의 파일은 업로드되지 않습니다.\")\r\n      }else{\r\n        setImage({\r\n          profile_image: e.target.files,\r\n        });\r\n        console.log(\"e.target.files\",e.target.files);\r\n      }  \r\n    }\r\n    // else{\r\n    //   const { name, value } = e.target;\r\n    //   setInputs({\r\n    //     ...inputs,\r\n    //     [name]: value,\r\n    //   });\r\n    // }\r\n  });\r\n\r\n  const onClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + localStorage.token,\r\n      },\r\n    };\r\n    const data = {\r\n      work_field: workField,\r\n      username: username,\r\n      work_company: workCompany,\r\n      bio: bio.replace(\"\\r\\n\", \"<br/>\"),\r\n    };\r\n    console.log(\"data\", data);\r\n    const formData = new FormData();\r\n    formData.append(\"work_field\", data.work_field);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"work_company\", data.work_company);\r\n    formData.append(\"bio\", data.bio);\r\n\r\n    console.log(image);\r\n    if (Object.keys(image).length != 0) {\r\n      formData.append(\"profile_image\", image.profile_image[0]);\r\n    }\r\n\r\n    console.log(\"====DATA====\", formData);\r\n\r\n    try {\r\n      const resPatch = await axios.patch(\r\n        \"https://www.ask2live.me/api/user/update\",\r\n        formData,\r\n        config\r\n      )\r\n        console.log(\"업데이트 성공~\", resPatch.data);\r\n        dispatch(getUserInfo(localStorage.token));\r\n        const resGet = await axios.get(\r\n          \"https://www.ask2live.me/api/user/read\",\r\n          config\r\n        );\r\n        console.log(\"업데이트 유저 불러오기\", resGet);\r\n        console.log(\"====DATA====\", formData);\r\n        \r\n        history.replace({\r\n          pathname: \"/mypage/\" + username,\r\n          state: resGet.data.detail,\r\n        });\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n      alert(\"이미 존재하는 닉네임입니다\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필 편집\"} />\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n          <div>\r\n            <p className={classes.username}>\r\n              <input\r\n                // className={classes.username}\r\n                className=\"BMDOHYEON\"\r\n                style={{\r\n                  fontSize: \"1.3em\",\r\n                  maxWidth: \"8em\",\r\n                  border: \"none\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                required\r\n                autoComplete=\"off\"\r\n                // oninvalid={usernameValid ? \"이름은 6글자 이내로 입력이 가능합니다\" : \"\"}\r\n                defaultValue={username}\r\n                value={username}\r\n                placeholder=\"이름을 입력하세요\"\r\n                name=\"username\"\r\n                onChange={(e) => {\r\n                  usernameValue = e.target.value\r\n\r\n                  if (usernameValue.length > 6){\r\n                    alert(\"이름은 6글자 이내로 입력이 가능합니다\");\r\n                    usernameValue = usernameValue.substring(0, 6)\r\n                  }\r\n\r\n                  if (CheckSpaceNSpecial(usernameValue)){\r\n                    alert(\"공백/특수문자는 입력이 불가합니다\");\r\n                    usernameValue = ReplaceSpaceNSpecial(usernameValue)\r\n                  }\r\n\r\n                  console.log(usernameValue)\r\n                  setUsername(usernameValue);\r\n                  // setUsernameValid(false)\r\n                }}\r\n                />\r\n                <br/>\r\n                <small className=\"Gmarket2\" style={{fontSize: \"0.7em\"}}>* 공백/특수문자 제외 6글자 이내</small>\r\n            </p>\r\n\r\n            <Avatar\r\n              className={classes.avatar}\r\n              aria-label=\"recipe\"\r\n              src={profileImage}\r\n            ></Avatar>\r\n            <input\r\n              style={style.file}\r\n              type=\"file\"\r\n              name=\"image\"\r\n              // accept=\"image/*\"\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            <input\r\n              // className={classes.work_company}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                // borderBottom: \"1px solid\",\r\n                // backgroundColor: \"#FFEBE8\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              defaultValue={workCompany}\r\n              value={workCompany}\r\n              placeholder=\"회사 이름을 입력해주세요\"\r\n              name=\"work_company\"\r\n              onChange={(e) => setWorkCompany(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            <input\r\n              // className={classes.work_field}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                color: \"grey\",\r\n                // backgroundColor: \"#FFEBE8\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              defaultValue={workField}\r\n              value={workField}\r\n              placeholder=\"일하는 분야를 입력해주세요\"\r\n              name=\"work_field\"\r\n              onChange={(e) => setWorkField(e.target.value)}\r\n            />\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n              {/* <p style={{marginTop: 0}}> */}\r\n              <textarea\r\n                className=\"bioWrapper\"\r\n                style={{\r\n                  border: \"1px solid\",\r\n                  borderColor: \"rgba(0, 0, 0, 0.3)\",\r\n                  width: \"89%\",\r\n                  height: \"80%\",\r\n                  // backgroundColor: \"#F2AC57\",\r\n                  fontFamily: \"BMJUA\",\r\n                  // backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                defaultValue={bio}\r\n                value={bio}\r\n                placeholder=\"소개를 입력해주세요\"\r\n                name=\"bio\"\r\n                onChange={(e)=> setBio(e.target.value)}\r\n                // onKeyPress={pressEnter}\r\n              />\r\n              {/* </p> */}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={style.buttonGroup}>\r\n            <Button\r\n              style={style.button}\r\n              variant=\"outlined\"\r\n              // color=\"#EF5941\"\r\n              size=\"normal\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <span style={{transform: \"translate(0, 1px)\", color: \"#EF5941\"}}>\r\n                취소하기\r\n              </span>\r\n            </Button>\r\n\r\n            <Button\r\n              style={style.button2}\r\n              variant=\"contained\"\r\n              // color=\"primary\"\r\n              // backgroundColor=\"#EF5941\"\r\n              // backgroundColor='#0063cc'\r\n              size=\"large\"\r\n              onClick={onClick}\r\n            >\r\n              <span style={{transform: \"translate(0, 1px)\", color: \"#FFFFFF\"}}>\r\n                확정하기\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport {QUESTIONLIST_DELETE} from \"../../actions/types\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport getQuestionlist from '../../actions/QuestionListActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: \"1000\",\r\n    backgroundColor: \"#E2D8CF\",\r\n    paddingBottom: \"3em\",\r\n    fontFamily: \"NanumGothic\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  card : {\r\n    border: \"1px solid #F24822\", \r\n    marginBottom:\"0.5em\",\r\n  },\r\n  cardText : {\r\n    position: \"relative\",\r\n    top: \"6.5px\",\r\n  },\r\n  labelBMJUA : {\r\n  fontFamily: \"BMJUA\",\r\n  fontStyle: \"normal\",\r\n  fontWeight: \"normal\",\r\n  fontSize: \"1.3em\"\r\n  }\r\n}));\r\n\r\nconst style = {\r\n\r\n  submitbtn : {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      float: \"right\",\r\n      right: \"3px\",\r\n      width: \"10%\",\r\n      top: \"2.4em\",\r\n      height: \"2.4em\",\r\n      zIndex: \"2\",\r\n  },\r\n  insert : {\r\n      top: \"3.2em\",\r\n      left : \"9px\",\r\n      height: \"2.5em\",\r\n      width:\"86%\",\r\n      borderBottom : \"1px solid\",\r\n      borderTop: \"0px\",\r\n      borderLeft : \"0\",\r\n      borderRight: \"0\",\r\n    '::placeholder' : {\r\n      color : \"red\",\r\n    }\r\n  },\r\n  \r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst MyQuestionCards = () => {\r\n  let [myQuestions, setMyQuestions] = useState([])\r\n\r\n  const user = useSelector(state => state.user)\r\n  const questions = useSelector(state => state.questionlist)\r\n  console.log('user', user.data.detail)\r\n  console.log('questionsList', questions.data.detail)\r\n  \r\n  const userId = user.data.detail.id\r\n  const questionsList = questions.data.detail\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  if(Object.keys(questionsList).length != 0){\r\n    questionsList.map((question) => {\r\n      const questionAuthor = parseInt(question.user)\r\n      console.log(questionAuthor)\r\n        if(userId === questionAuthor){\r\n          myQuestions = [...myQuestions, question]\r\n        }\r\n    })\r\n  }\r\n  console.log(myQuestions)\r\n\r\n  return (\r\n    <>\r\n      {myQuestions.length === 0 ? \r\n        <div className=\"NanumGothic3\">질문을 등록해주세요</div> :\r\n        \r\n        myQuestions.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst MyQuestionSend = ({session}) => {\r\n  const [ask, setAsk] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const postApi = async(isVoice, askValue) =>  {\r\n    const headers = {\r\n        'Authorization': 'Token ' + localStorage.token\r\n      }\r\n      const data = {\r\n          is_answered: false,\r\n          is_voice: isVoice,\r\n          question: askValue,\r\n      };\r\n      console.log(data);\r\n      const res = await axios.post(\r\n        \"https://www.ask2live.me/api/hole/\"+session.id + \"/question/create\",\r\n        data,\r\n        {headers:headers}\r\n      );\r\n      dispatch(getQuestionlist(session.id))\r\n}\r\n  return (\r\n    <>\r\n    <div style={{paddingBottom:\"1em\"}}>\r\n    <input\r\n    className=\"BMDOHYEON\"\r\n    type=\"text\"\r\n    maxLength=\"60\"\r\n    value={ask}\r\n    style={style.insert}\r\n    placeholder=\"최대 글자수는 60자입니다.\"\r\n    onChange={(e) => setAsk(e.target.value)}\r\n    />\r\n    <div style={style.submitbtn}>\r\n    <IconButton \r\n        onClick={()=>{\r\n          postApi(false, ask); setAsk(\"\")\r\n          \r\n          }} \r\n        className={classes.iconButton} \r\n        aria-label=\"send\">\r\n        <SendIcon/>\r\n    </IconButton>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst QuestionCard = ({question}) => {\r\n    const classes = useStyles();\r\n    console.log(question)\r\n    return(\r\n        <>\r\n        <Card key={question.id} className={classes.card}>\r\n          <CardContent>\r\n        <div className=\"NanumGothic3\">\r\n          <span className={classes.cardText}>{question.user_username} : {question.question}</span>\r\n        </div>\r\n        </CardContent>\r\n        </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//Tab 관련 로직\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n  return (\r\n    <Tab\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst PreQuestionNav = ({session}) => {\r\n  const classes = useStyles();\r\n  const questions = useSelector(state => state.questionlist)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor:\"gray\"}}>\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n        <Tab\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          }}\r\n          {...a11yProps(0)}\r\n          label={<span className={classes.labelBMJUA}>등록된 질문</span>}/>\r\n          <Tab\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          }}\r\n          {...a11yProps(1)}\r\n          label={<span className={classes.labelBMJUA}>질문하기</span>}/>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      {questions.data.detail.length === 0 ? \r\n        <div className=\"NanumGothic3\">질문을 등록해주세요</div> :\r\n        \r\n        questions.data.detail.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <MyQuestionSend session={session} />\r\n        <MyQuestionCards questions={questions} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreQuestionNav","import React, {useEffect, useState} from \"react\";\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PreQuestionNav from './PreQuestionNav'\r\nimport MypageNav from '../mypage/MypageNav'\r\nimport getQuestionlist from \"../../actions/QuestionListActions\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport { Progress, Badge, Divider } from 'antd';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Moment from \"react-moment\";\r\nimport \"../../styles/style.css\";\r\nimport \"../../App.css\";\r\nimport { QUESTIONLIST_DELETE } from \"../../actions/types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      display: 'flex',\r\n      maxWidth: \"70em\",\r\n      minWidth: \"18em\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    avatar : {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n      transform: \"translate(0.35em,-3.35em)\"\r\n      // opacity: 0.7,\r\n    },\r\n    title : {\r\n      paddingLeft: \"1em\",\r\n      fontFamily: \"NanumGothic\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1.1em\",\r\n      paddingTop: \"0.8em\",\r\n      paddingBottom: \"1em\",\r\n    },\r\n    time : {\r\n      paddingLeft: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      fontFamily: \"NanumGothic\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1em\",\r\n    },\r\n    desc : {\r\n      display: \"flex\",\r\n      flexDirection: 'column',\r\n      paddingLeft: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      fontFamily: \"NanumGothic\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1em\",\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst SessionDetail = ({session}) => {\r\n  const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    if(session === undefined){\r\n      return(\r\n        <>\r\n        로딩중\r\n        </>\r\n      )\r\n    }\r\n    return(\r\n        <>\r\n        <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n        <p className={classes.title}>{session.title}</p>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        <Progress \r\n          className={classes.progress}\r\n          strokeWidth=\"5\"\r\n          type=\"dashboard\"\r\n          strokeColor=\"#F24822\"\r\n          gapDegree = \"85\"\r\n          width={70}\r\n          format={percent => {\r\n            // 여기 수정 필요\r\n            if(percent == 100){\r\n              return(\r\n                <>\r\n                {session.host_profile_image?\r\n                <Avatar className={classes.avatar} src={`https://www.ask2live.me${session.host_profile_image}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"/static/reigns/1.jpg\" />\r\n              }\r\n                  \r\n                </>\r\n              )\r\n            }else{\r\n              return(\r\n                <>\r\n                  {session.host_profile_image?\r\n                <Avatar className={classes.avatar} src={`https://www.ask2live.me${session.host_profile_image}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"static/reigns/1.jpg\" />\r\n              }\r\n                </>\r\n              )}\r\n            \r\n            }}\r\n          percent={(session.hole_reservations) ? \r\n                  Math.ceil(\r\n                    session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                    session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0}/>\r\n        </Grid>\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n          <div className={classes.time}>라이브 예정 일자 : {``}\r\n            <Moment format=\"MM.DD hh시 mm분\">\r\n                  {session.reserve_date}\r\n            </Moment></div>\r\n\r\n\r\n          <div className={classes.desc}>라이브 주제 : {``} {session.description}</div>\r\n\r\n        </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ListPreQuestions = ({questions, session}) => {\r\n    console.log('qestions', questions)\r\n    return(\r\n        <>\r\n        <PreQuestionNav session={session}/>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst PreQuestions = () => {\r\n    const dispatch = useDispatch()\r\n    const questions = useSelector(state => state.questionlist)\r\n    const sessions = useSelector(state => state.session.data)\r\n    let targetSession = {};\r\n\r\n    const href = window.location.href\r\n    const sessionId = parseInt(href.split('/')[4])\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        sessions.map((session) => {\r\n          console.log('DEBUG22',session)\r\n            if(sessionId === session.id){\r\n                targetSession = {...targetSession, session}\r\n            }\r\n        })\r\n      }\r\n    useEffect(() => {\r\n      if(Object.keys(questions.data).length === 0){\r\n        dispatch(getQuestionlist(sessionId))\r\n      }\r\n    })\r\n    \r\n    return (\r\n            <>\r\n        <MypageNav text={'Live Q&A 상세'} />\r\n        {/* <div style={{position : \"absolute\", height:\"12em\", width: \"100%\", backgroundColor:\"skyblue\"}}>{\"\"}</div> */}\r\n        <div style={{display:\"flex\", justifyContent:\"center\", position:\"absolute\", top:\"9%\" , width:\"100%\"}}>\r\n          <div style={{width:\"100%\", maxWidth:\"50em\"}}>\r\n          <SessionDetail session={targetSession.session}/>\r\n          {Object.keys(questions.data).length > 0 ? <ListPreQuestions questions={questions} session={targetSession.session}/> : null}\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n  \r\n}\r\nexport default PreQuestions;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(channelNum){\r\n    return axios.get('https://www.ask2live.me/api/hole/live/read/' + channelNum);\r\n}\r\n\r\nconst getEnteredSession = channelNum => dispatch => {\r\n    console.log('-----getEnteredSession-----')\r\n    dispatch({type: ENTEREDSESSION_GET_PENDING}); \r\n\r\n\r\n    return getApi(channelNum).then(\r\n        (response) => {\r\n            console.log(response);\r\n            dispatch({ type: ENTEREDSESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ENTEREDSESSION_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getEnteredSession;","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      margin: \"3%\",\r\n      maxWidth: \"50em\",\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    },\r\n    cardContent: {\r\n      height: \"30px\",\r\n    },\r\n    cookieWrapper: {\r\n      backgroundColor:\"#EEAC4B\",\r\n      float: \"left\",\r\n      marginLeft: \"2%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      overflow: \"hidden\",\r\n    },\r\n    useCookie: {\r\n      float: \"left\",\r\n      margin: \"auto\",\r\n      backgroundImage: \"url('/static/cookieMould.png')\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      overflow: \"hidden\",\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    participant : {\r\n        width: \"100%\",\r\n        maxWidth: \"30em\",\r\n        padding: \"10px\",\r\n    },\r\n    tmp: {\r\n        float: \"left\",\r\n        marginLeft : \"2%\",\r\n    },\r\n    follow: {\r\n        float : \"right\",\r\n        width: \"5em\",\r\n        height:\"5em\",\r\n        backgroundColor:\"pink\",\r\n    }\r\n}\r\n\r\nconst Participant = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\">\r\n                <Card style={style.participant} className={classes.root}>\r\n                    <div\r\n                        style={{backgroundImage: props.profileImage ? \"url('https://www.ask2live.me\" + props.profileImage +\"')\" : \"url('/static/reigns/1.jpg')\" }}\r\n                        className={classes.cookieWrapper}\r\n                    >\r\n                        <div className={classes.useCookie}></div>\r\n                    </div>\r\n                    <div style={style.tmp}>\r\n                        <p style={{marginBottom:\"5px\"}}>{props.nickName}</p>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {props.workCompany ? \r\n                            <>\r\n                             {props.workCompany} |\r\n                            </>\r\n                             : null}\r\n                            {props.workField ? \r\n                            <>\r\n                             {\" \" + props.workField}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !props.workCompany && !props.workField ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                    {/* <div style={style.follow}>follow</div> */}\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Participant;","import React, {useState, useEffect} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Participant from \"./Participant\"\r\nimport axios from \"axios\"\r\n\r\nconst style = {\r\n    participantlist : {\r\n        width: \"100%\",\r\n        borderRadius : \"15px\",\r\n        padding: \"0\",\r\n    }\r\n}\r\n\r\nconst ParticipantList = (props) => {\r\n\r\n    const participants = useSelector(state => state.enteredSession);\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={{display:\"flex\", position:\"absolute\", height:\"9%\", alignItems:\"flex-end\", justifyContent:\"center\" }}>\r\n\r\n            <p className=\"NanumGothic3\" style={{borderBottom:\"1px solid black\", margin:\"0\"}}>\r\n                {participants.arrived?\r\n                    participants.data.detail.participant.length+\"명이 듣고 있어요\"\r\n                    :\r\n                    <></>\r\n                }\r\n            </p>\r\n        </div>\r\n            <Paper style={style.participantlist} elevation={0}>\r\n                <div style={{position:\"absolute\", top: \"10%\", height:\"90%\", width:\"100%\", overflow:\"auto\"}}>\r\n                    {participants.arrived ? \r\n                        participants.data.detail.participant.map((participant) => \r\n                        <Participant \r\n                        nickName={participant.username}\r\n                        workField={participant.work_field}\r\n                        workCompany={participant.work_company}\r\n                        profileImage={participant.profile_image_url}/>)\r\n                        : \r\n                        <p>로딩중</p>}\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ParticipantList;","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst style = {\r\n    audience1 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,1)\"\r\n    },\r\n    audience2 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,0.6)\"\r\n    },\r\n    paper : {\r\n        position: \"absolute\",\r\n        width: \"90%\",\r\n        height : \"100%\",\r\n        maxWidth:\"30em\",\r\n        backgroundColor: \"red\",\r\n        borderRadius: \"30px 30px 30px 30px \"\r\n    },\r\n    card : {\r\n        transform:\"translate(-1px, -1px)\",\r\n        position: \"absolute\",\r\n        width: \"90%\",\r\n        maxWidth:\"30em\",\r\n        borderRadius : \"30px 30px 0 0\",\r\n        backgroundColor: \"#EF5941\",\r\n        height: \"20%\",\r\n        // height: \"20px\",\r\n        zIndex:\"3\",\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n        // padding: \"3px\",\r\n    },\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n    root2: {\r\n    maxWidth: \"30em\",\r\n    height:\"inherit\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"90%\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: \"inherit\",\r\n        // height: \"70px\",\r\n        borderRadius : \"30px\",\r\n        border: \"1px solid #EF5941\",\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst StringQuestion = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let questionStr = props.userQuestion;\r\n    const [finish, setFinish] = useState(false);\r\n    const [btnDisable, setBtnDisable] = useState(false);\r\n\r\n\r\n    return (\r\n      \r\n        <>\r\n        <div style={{\r\n            zIndex:\"2\", \r\n            alignItems: \"center\", \r\n            justifyContent:\"center\",\r\n            display:\"flex\", \r\n            position:\"absolute\", \r\n            // backgroundColor:\"skyblue\",\r\n            height:\"95%\", \r\n            width:\"100%\"}}>\r\n\r\n \r\n\r\n            <div className={classes.root2}>\r\n                <Paper>\r\n                    <div style={style.card}>\r\n                            <div \r\n                            style={{\r\n                            position:\"absolute\", \r\n                            display:\"flex\", \r\n                            alignItems:\"center\", \r\n                            height:\"100%\", \r\n                            marginLeft: \"1.5em\"}}>\r\n                                <div style={{display:\"inline-block\"}}>\r\n                                    <Avatar src={props.imageLink? \"https://www.ask2live.me\" + props.imageLink : \"/static/reigns/1.jpg\"} className={classes.small}/>\r\n                                </div>\r\n                                <span\r\n                                style={{marginLeft:\"6px\", marginTop:\"3px\", color:\"white\"}}\r\n                                className=\"BMJUA\"\r\n                                >{props.userNickName}\r\n                                </span>\r\n                                <span\r\n                                style={{marginLeft: \"5px\", fontSize: \"0.8em\", color:\"white\"}}\r\n                                >님의 질문\r\n                                </span>\r\n                            </div>\r\n                    </div>\r\n                    <div \r\n                    className=\"currQuestion\">\r\n                        <span className=\"Gmarket2\">{questionStr}</span> \r\n                    </div>\r\n\r\n                 \r\n                </Paper>\r\n            </div>\r\n            <div style={{position:\"absolute\", bottom:\"-3%\", height:\"20%\", width:\"100%\", display:\"flex\", alignItems:\"center\",justifyContent:\"center\"}}>\r\n                {props.isHost?\r\n                <button\r\n                className=\"NanumGothic3\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent:\"center\",\r\n                    position:\"absolute\", \r\n                    transform:\"translate(0, 0px)\",\r\n                    zIndex: \"3\",\r\n                    height:\"100%\", \r\n                    width: \"6em\", \r\n                    backgroundColor: \"#3B3B3B\",\r\n                    fontSize:\"0.7em\",\r\n                    borderRadius:\"16px\",\r\n                    color:\"#EF5941\",\r\n                    border:\"1px solid #EF5941\",\r\n                    zIndex:\"3\",\r\n                }}\r\n                disabled={btnDisable}\r\n                onClick={()=>{\r\n                    setBtnDisable(true)\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setFinish(true)\r\n                    setTimeout(()=>{setFinish(false); setBtnDisable(false)}, 4000)             \r\n                }}\r\n            >{finish ? \r\n            <div className=\"loadingCircle\"></div> \r\n            :  \r\n            \"답변완료\"\r\n            }</button>\r\n                :\r\n                <></>\r\n                }\r\n            </div>\r\n                \r\n        </div>\r\n        </>\r\n        \r\n\r\n\r\n\r\n\r\n//---------------------------------------------------\r\n\r\n\r\n        // <>\r\n        // <div style={{margin: \"0em 0em 0.5em 1em\", display:\"flex\"}}>\r\n        //     <Avatar src={props.hostImage} className={classes.small}/>\r\n        //     <span style={style.audience1} className=\"NanumGothic\">{props.userNickName}</span>\r\n        //     <span style={style.audience2} className=\"NanumGothic\">님의 질문</span>\r\n        //     {props.isHost?\r\n        //     <button\r\n        //     onClick={()=>{props.onAnswered(props.currentQuestionId)}}\r\n        //     >완료</button>\r\n        //     :\r\n        //     <></>\r\n        //     }\r\n        // </div>\r\n        // {console.log(questionStrAry)}\r\n        // {\r\n        //     questionStrAry.map((questionUnit) => \r\n        //     <>\r\n        //         <p style={style.cloud} className=\"BMJUA\">{questionUnit}</p><br/>\r\n        //     </>\r\n        //     )\r\n        // }\r\n\r\n        // </>\r\n    )\r\n    \r\n}\r\n\r\nexport default StringQuestion;","import React from \"react\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9),\r\n        zIndex:\"1\",\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst style = {\r\n    circle : {\r\n        border : \"solid 1px rgba(255, 255, 255, .3)\",\r\n        borderRadius : \"100%\",\r\n    }\r\n}\r\n\r\nconst UserAvatar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <div style={style.circle}>\r\n            <div className={classes.root}>\r\n                <Avatar alt={props.hostName} src={props.imageLink ? \"https://www.ask2live.me\"+props.imageLink : \"/static/reigns/1.jpg\"} className={classes.large}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserAvatar\r\n\r\n\r\n\r\n","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport Avatar from \"../Avatar\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport \"../../styles/style.css\"\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent:\"center\",\r\n        '& > *': {\r\n          margin: theme.spacing(0),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst VoiceQuestion = (props) => {\r\n    console.log(\"무야호\", props)\r\n    const classes = useStyles();\r\n    const [click, setClick] = useState(false)\r\n    const [clickStyle, setClickStyle] = useState({color: \"#EF5941\"})\r\n    const [finish, setFinish] = useState(false);\r\n    const [exitClick, setExitClick] = useState(false);\r\n\r\n    const [hidden, setHidden] = useState(\"0\")\r\n\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setHidden(\"1\")}, 1000);\r\n    })\r\n\r\n    const sendP2PMessage = useCallback((recipientUID, peerMsg) => {\r\n        console.log(\"sendP2PMessage\");\r\n    \r\n        // An RtmMessage object.\r\n        const remoteUID = String(recipientUID);\r\n    \r\n\r\n        // p2p message\r\n        console.log(\"리모트 UID: \", remoteUID);\r\n        console.log(\"리모트 msg: \", peerMsg);\r\n    \r\n        if (peerMsg) {\r\n          (props.rtmClient)\r\n            .sendMessageToPeer({ text: peerMsg }, remoteUID)\r\n            .then((sendResult) => {\r\n              if (sendResult.hasPeerReceived) {\r\n                console.log(\"peer recieved \" + peerMsg + \" successfully\");\r\n\r\n              } else {\r\n                console.log(\"peer did not recieved \" + peerMsg + \" unlog\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"RTM message recieved err\");\r\n            });\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n        <div style={{\r\n            zIndex: \"1\",\r\n            position:\"fixed\",\r\n            top:\"5%\",\r\n            display:\"flex\",\r\n            maxWidth:\"45em\",\r\n            width:\"100%\",\r\n            height:\"25%\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"center\",\r\n            transform:\"translate(25%,71%)\",\r\n            transition : \"opacity 1s\",\r\n            opacity:hidden}}>\r\n\r\n            <div style={{\r\n                zIndex: \"1\",\r\n                marginTop:\"13px\",\r\n                width:\"6em\"}}>\r\n                <div style={{zIndex: \"1\",width:\"5.6em\"}}>\r\n                <Avatar style={{zIndex: \"1\"}} alt={props.userNickName} imageLink={props.imageLink} className={classes.large}/>\r\n                </div>\r\n                <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                    <p className=\"BMDOHYEON\" style={{marginTop:\"5px\", marginLeft:\"-8px\", color:\"rgba(255,255,255,0.8)\"}}>{props.userNickName}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style={{\r\n            transition : \"opacity 1s\",\r\n            opacity:hidden, \r\n            zIndex: \"0\",\r\n            top:\"22.5%\",\r\n            position:\"fixed\", \r\n            height: \"25%\",\r\n            display:\"flex\", \r\n            alignItems:\"center\", \r\n            justifyContent:\"center\", \r\n            width:\"100%\", \r\n            maxWidth:\"45em\"}}>\r\n\r\n            <div style={{}} className=\"voicePlane\">\r\n                <div style={{\r\n                    border: \"1px solid #EF5941\",\r\n                    position:\"absolute\",\r\n                    width:\"100%\",\r\n                    height:\"4em\",\r\n\r\n                }}>\r\n                <div className=\"voicePlaneC1\">\r\n                    <div style={{\r\n                        width :\"1.5em\",\r\n                        height:\"1.5em\",\r\n                        backgroundImage: \"url('/static/wave2.jpg')\",\r\n                        backgroundSize:\"contain\",\r\n                    }}/>\r\n                    {/* <SendIcon/>     */}\r\n                </div> \r\n                <div className=\"voicePlaneC2\">\r\n                    <div style={{\r\n                        width :\"1.5em\",\r\n                        height:\"1.5em\",\r\n                        backgroundImage: \"url('/static/wave2.jpg')\",\r\n                        backgroundSize:\"contain\",\r\n                    }}/>\r\n                    {/* <SendIcon/> */}\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div style={{\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"flex-end\",\r\n            width:\"12em\", \r\n            height:\"145%\"}}>\r\n                {props.isHost?\r\n                <>\r\n                <button\r\n                className=\"audienceLink\"\r\n                disabled={click}\r\n                onClick={()=>{setClickStyle({color:\"grey\"});setClick(true); sendP2PMessage(props.userUid, \"host\")}}\r\n                >\r\n                    <span style={clickStyle} className=\"NanumGothic3\">연결하기</span>\r\n                </button>\r\n                <button\r\n                className=\"linkExit\"\r\n                disabled={exitClick}\r\n                style={{zIndex:\"1\",backgroundColor:\"#3B3B3B\"}}\r\n                onClick={()=>{\r\n                    setClick(true);\r\n                    setFinish(true);\r\n                    setExitClick(true);\r\n                    sendP2PMessage(props.userUid, \"audience\")\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setTimeout(() => {\r\n                        setFinish(false);\r\n                        setExitClick(false);\r\n                        setClick(false);\r\n                        setClickStyle({color:\"#EF5941\"});\r\n                    }, 4000);\r\n                }}\r\n                >\r\n                {   finish?\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <div className=\"loadingCircle\"></div> \r\n\r\n                    </div>\r\n                    :\r\n                    <span style={{color: \"white\"}} className=\"NanumGothic3\">답변완료</span>\r\n\r\n                }\r\n                </button>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VoiceQuestion;","import React, {useState, useCallback} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport StringQuestion from \"./StringQuestion\";\r\nimport VoiceQuestion from \"./VoiceQuestion\";\r\n\r\nconst style = {\r\n    wait : {\r\n        top: \"40%\",\r\n        position: \"absolute\",\r\n        color : \"rgba(255,255,255,0.7)\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        width:\"100%\",\r\n    }\r\n}\r\n\r\nconst CurrentQuestion = (props) => {\r\n    \r\n    const questionPatchApi = async(questionId) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: true,\r\n          };\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/question/update/\"+questionId,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n    const forQuestionidx = useCallback((questionList) => {\r\n        return questionList.findIndex((question => question.is_answered == false))\r\n    })\r\n\r\n\r\n    const questionResponse = useSelector(state => state.questionlist)\r\n\r\n    if (questionResponse.arrived)\r\n    {\r\n        let questionList = questionResponse.data.detail\r\n        if (questionList.length == 0) \r\n            return (\r\n                <>\r\n                <div style={style.wait}>\r\n                 <p>질문이 없습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        let questionIdx = forQuestionidx(questionList);\r\n        //이걸 매번 돌리기엔 비효율적.. useEffect를 쓰면 될까??\r\n        if (questionIdx == -1)\r\n        {\r\n            if (props.liveVoice)\r\n                props.setLiveVoice(false);\r\n            return (\r\n                <>\r\n                <div style={style.wait} className=\"BMJUA\">\r\n                <p>모든 질문이 답변되었습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        }   \r\n        else \r\n        {\r\n            const onAnswered = (questionId) => {\r\n                questionPatchApi(questionId);\r\n            } \r\n\r\n            let currentQuestion = questionList[questionIdx];\r\n            let userNickName = currentQuestion.user_username;\r\n            let isVoice = currentQuestion.is_voice;\r\n            let userUid = currentQuestion.user_uid;\r\n            let imageLink = currentQuestion.user_profile_image_url\r\n\r\n            if (isVoice)\r\n            {\r\n                if (!props.liveVoice)\r\n                    props.setLiveVoice(true)\r\n                return (\r\n                <>\r\n                <VoiceQuestion \r\n                userUid={userUid} \r\n                userNickName={userNickName} \r\n                imageLink={imageLink}\r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered} \r\n                currentQuestionId={currentQuestion.id}\r\n                client={props.client}\r\n                rtmClient={props.rtmClient}\r\n                host={props.host}\r\n                localAudioTrack={props.localAudioTrack}\r\n                remoteUsers={props.remoteUsers}\r\n                channelNum={props.channelNum}\r\n                />\r\n                </>\r\n                )\r\n            }\r\n\r\n            else {\r\n                if (props.liveVoice)\r\n                    props.setLiveVoice(false);\r\n                let userQuestion = currentQuestion.question;\r\n          \r\n                return (\r\n                <StringQuestion \r\n                userNickName={userNickName} \r\n                userQuestion={userQuestion} \r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered}\r\n                currentQuestionId={currentQuestion.id}\r\n                imageLink={imageLink}\r\n                />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    else return (\r\n        <>\r\n        <div style={style.wait}>\r\n            <p> 로딩중 </p>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n\r\n    // if (questionResponse.arrived)\r\n    // {\r\n    //     let questionList = questionResponse.data.detail\r\n    //     if (questionList.length == questionNum) \r\n    //         return <p>질문이 없습니다.</p>\r\n    //     else if (questionList.length != questionNum)\r\n    //     {\r\n    //         let currentQuestion = questionList[questionNum];\r\n    //         let userNickName = currentQuestion.user_nickname;\r\n    //         let isVoice = currentQuestion.is_voice;\r\n    //         if (isVoice)\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userNickName} 음성 질문입니다</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         else {\r\n    //             let userQuestion = currentQuestion.question;\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userQuestion}</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         }\r\n    //     }\r\n    // }\r\n   \r\n}\r\n\r\n\r\nexport default CurrentQuestion","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"100%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n        display: \"\",\r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        float: \"left\",\r\n        height: theme.spacing(10),\r\n        // height: \"70px\",\r\n        borderRadius : \"15px\",\r\n      },\r\n    },\r\n    myPaper : {\r\n        border : \"3px solid white\",\r\n        boxShadow: \"0px 0px 2px 3px black\"\r\n    },\r\n    otherPaper: {\r\n        border : \"2px solid black\",\r\n    }\r\n  }));\r\n\r\nconst style = {\r\n    card : {\r\n        borderRadius : \"15px 15px 0 0\",\r\n        backgroundColor: \"#D95032\",\r\n        height: \"1.5rem\",\r\n        // height: \"20px\",\r\n        padding: \"0.3rem\",\r\n        // padding: \"3px\",\r\n    },\r\n\r\n}\r\n\r\nexport default function SimplePaper(props) {\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n    <>\r\n    {props.isFirst?\r\n    <div style={{marginLeft: \"10px\", marginBottom:\"10px\"}}>\r\n     <div style={{borderRadius:\"100%\", display:\"inline-block\", backgroundColor:\"#d95032\", width:\"10px\", height:\"10px\"}}></div>\r\n    <span className=\"CookieRun\" style={{marginLeft: \"8px\",marginBottom:\"10px\"}}>\r\n       지금 답변중!</span>\r\n    </div>\r\n    :\r\n    null\r\n    }\r\n    <div className={classes.root}>\r\n    <Paper className={props.myQuestion? classes.myPaper : classes.otherPaper} style={props.isVoice? {backgroundColor:\"#D95032\"} : null} elevation={2} >\r\n        <div style={style.card}>\r\n            <p style={{margin:\"4px 0 0 4px\", padding :\"0\"}}className=\"BMDOHYEON\">{props.userName}</p>\r\n        </div>\r\n        <div className=\"questionWrap\">\r\n            <p style={{margin:\"4px 0 0 8px\", padding :\"0\"}}className=\"NanumGothic2\">{props.value}</p>\r\n        </div>\r\n    </Paper>\r\n    </div>\r\n    {props.isFirst? \r\n    <>\r\n    <div style={{width:\"100%\", borderBottom:\"1px solid rgba(0, 0, 0, 0.5)\"}}/>\r\n    <br/>\r\n    </>\r\n    :\r\n    null\r\n    }\r\n    </>\r\n);\r\n}","import React, { useState }from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BorderColor } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Question from \"./Question\"\r\nimport \"../../styles/style.css\" \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: \"95%\",\r\n      '& > *': {\r\n        overflow: \"hidden\",\r\n        margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: theme.spacing(10),\r\n        // height: \"75px\",\r\n        backgroundColor: \"rgba(192, 0, 0, 0)\",\r\n      },\r\n      zIndex: \"3\",\r\n    },\r\n    border: {\r\n        borderRadius: \"15px\",\r\n        padding : \"0.5em\",\r\n        // padding : \"3px\",\r\n    }\r\n  }));\r\n\r\nexport default function QuestionSwiper(props) {\r\n\r\n    const classes = useStyles();\r\n    const [transStyle, setTransStyle] = useState({\r\n        transform : \"translate(0, 0)\",\r\n    })\r\n\r\n    // const handleTrans = () => {\r\n    //     setTransStyle\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.root}>\r\n        <Paper className={classes.border} elevation={0}>\r\n            <Grid style={transStyle} className=\"trans\" container justify=\"center\">\r\n                <Question isHost={props.isHost} userName=\"미\" value=\"무\" nextmove={()=>{setTransStyle({transform : \"translate(0, -6em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"어\" value=\"야\" nextmove={()=>{setTransStyle({transform : \"translate(0, -12em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"캣\" value=\"호\" nextmove={()=>{setTransStyle({transform : \"translate(0, -18em)\"})}}/>\r\n            </Grid>\r\n    \r\n        </Paper>\r\n        </div>\r\n        </>\r\n    );\r\n}","import { useSelector } from \"react-redux\" \r\nimport React, { useState }from 'react';\r\nimport Question from \"./Question\";\r\nimport axios from \"axios\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst style ={\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        bottom: \"90%\",\r\n        width: \"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\n\r\nconst QuestionList = (props) => {\r\n\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid black\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    const questionAry = useSelector(state => state.questionlist)\r\n    const myName = useSelector(state => state.user.data.detail.username)\r\n    console.log(myName);\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{setClick2(); setClick1({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">등록된 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{setClick1(); setClick2({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">답변된 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        \r\n        {click1 ?\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ? \r\n            questionAry.data.detail.findIndex((questionInfo) => !(questionInfo.is_answered)) === -1 ?\r\n            <div style={{display:\"flex\", justifyContent:\"center\", width:\"100%\", maxWidth:\"45em\"}}>\r\n                <p className=\"CookieRun\">등록된 질문이 없습니다</p>\r\n            </div>\r\n            :\r\n                questionAry.data.detail.map((questionInfo) =>\r\n                    questionInfo.is_answered ?\r\n                        null\r\n                    :\r\n                        questionInfo.user_username === myName?\r\n                        <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}\r\n                        isFirst={questionInfo === questionAry.data.detail[questionAry.data.detail.findIndex((value) => value.is_answered === false)]}/>\r\n                        :\r\n                        <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}\r\n                        isFirst={questionInfo === questionAry.data.detail[questionAry.data.detail.findIndex((value) => value.is_answered === false)]}/>\r\n                )\r\n\r\n                : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        :\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ?\r\n            questionAry.data.detail.findIndex((questionInfo) => questionInfo.is_answered) === -1 ?\r\n            <div style={{display:\"flex\", justifyContent:\"center\", width:\"100%\", maxWidth:\"45em\"}}>\r\n                <p className=\"CookieRun\">아직 답변된 질문이 없습니다.</p>\r\n            </div>\r\n            :\r\n                questionAry.data.detail.map((questionInfo) =>\r\n                    questionInfo.is_answered ?\r\n                        questionInfo.user_username === myName?\r\n                        <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}/>\r\n                        :       \r\n                        <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}/>\r\n                    :\r\n                        null\r\n                )\r\n\r\n                : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionList","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport useSelection from \"antd/lib/table/hooks/useSelection\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        maxWidth: \"42em\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"95%\",\r\n      bottom: \"0%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: \"11em\",\r\n        // height: \"70px\",\r\n        borderRadius : \"30px\",\r\n        border: \"1px solid #EF5941\",\r\n      },\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    paper : {\r\n        position: \"absolute\",\r\n        bottom:\"0%\",\r\n        width: \"100%\",\r\n        height : \"100%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"30px 30px 0 0 \"\r\n    },\r\n    questionbutton : {\r\n        width : \"100%\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        position: \"absolute\",\r\n        top : \"-0.7em\",\r\n        zIndex:\"3\",\r\n        height:\"1px\",\r\n    },\r\n    card : {\r\n        transform:\"translate(-1px, -1px)\",\r\n        paddingTop:\"4px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        maxWidth:\"42em\",\r\n        borderRadius : \"30px 30px 0 0\",\r\n        backgroundColor: \"#EF5941\",\r\n        height: \"3em\",\r\n        // height: \"20px\",\r\n        zIndex:\"3\",\r\n        // padding: \"3px\",\r\n    },\r\n    submitbtn : {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        right: \"1em\",\r\n        width: \"10%\",\r\n        top: \"0.5em\",\r\n        height: \"2.4em\",\r\n        zIndex: \"3\",\r\n    },\r\n    insert : {\r\n        marginTop: \"10px\",\r\n        display : \"block\",\r\n\r\n        top: \"4em\",\r\n        left : \"10px\",\r\n        height: \"7em\",\r\n        width:\"90%\",\r\n        border : \"none\",\r\n    },\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        top:\"0%\",\r\n        zIndex:\"3\",\r\n        width:\"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\nconst Questioning = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ask, setAsk] = useState(\"\")\r\n    const [voice, setVoice] = useState(true)\r\n    const [queStyle, setQueStyle] = useState({opacity: \"1\"})\r\n\r\n    const myInfo = useSelector(state => state.user);\r\n\r\n\r\n\r\n    const pressEnter = (e) => {\r\n        if (e.key == 'Enter'){\r\n            postApi(false, ask);\r\n            setAsk(\"\")\r\n            props.openQuestionAlert();\r\n            props.goQueUp({transform : \"translate(0, 100%)\"});\r\n            props.goDark({opacity: \"0\", animation: \"golight 0.7s\"});\r\n            setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n        }\r\n    }\r\n\r\n    const voiceClick = () => {\r\n        if (voice)\r\n        {\r\n            setQueStyle({opacity: \"0\", display : \"none\"}) \r\n            // setTimeout((()=>setQueStyle({display: \"none\"})),1000)\r\n        }\r\n        else\r\n            setQueStyle({opacity: \"1\"})\r\n            // setTimeout((()=>setQueStyle({display:\"flex\"})),1000)\r\n        setVoice(prevVoice => !prevVoice)\r\n    }\r\n\r\n    const postApi = async(isVoice, askValue) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: false,\r\n              is_voice: isVoice,\r\n              question: askValue,\r\n          };\r\n          console.log(data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId + \"/question/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n    }\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid #EF5941\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td style={{width:\"50%\"}}>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{\r\n                    setVoice(true); \r\n                    setQueStyle({opacity: \"1\"});\r\n                    setClick2(); \r\n                    setClick1({borderBottom:\"2px solid #EF5941\"})}}\r\n                className=\"Gmarket3\">음성 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{\r\n                    setVoice(false); \r\n                    setQueStyle({opacity: \"0\", display : \"none\"}) ;\r\n                    setClick1(); \r\n                    setClick2({borderBottom:\"2px solid #EF5941\"})}}\r\n                className=\"Gmarket3\">텍스트 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        <Paper style={style.paper} elevation={0}>\r\n            <Grid container justify=\"center\">\r\n                <div className={classes.root}>\r\n                    <Paper elevation={0} >\r\n                        <div style={style.card}>\r\n                            {\r\n                                myInfo.arrived?\r\n        \r\n                                <div \r\n                                style={{position:\"absolute\", marginLeft: \"1.5em\", marginTop: \"0.7em\"}}>\r\n                                    <span\r\n                                    style={{color:\"white\"}}\r\n                                    className=\"BMJUA\"\r\n                                    >{myInfo.data.detail.username}</span>\r\n                                    <span\r\n                                    style={{marginLeft: \"5px\", fontSize: \"0.8em\", color:\"white\"}}\r\n                                    >님의 질문</span>\r\n                                </div>\r\n    \r\n                                :\r\n                                <span> 로딩중 </span>\r\n                            }\r\n                        </div>\r\n                        <div style={queStyle} className=\"QuestioningWrapper\">\r\n                            <p className=\"Gmarket1\" style={{margin:\"2em 0 0 0\", color: \"white\", fontSize:\"1em\"}}>\r\n                                음성으로 물어볼래요!\r\n                            </p>\r\n                            <p className=\"NanumGothic2\" style={{margin:\"1em 0 0 0\",color: \"white\", fontSize:\"0.7em\"}}>\r\n                                차례가 됐을 때 호스트가\r\n                            </p>\r\n                            <p className=\"NanumGothic2\" style={{margin:\"0\",color: \"white\", fontSize:\"0.7em\"}}>\r\n                                음성권한을 부여할 수 있습니다\r\n                            </p>\r\n                        </div>\r\n                        <div style={{\r\n                            display: \"flex\", justifyContent:\"center\",\r\n                            width:\"100%\", height:\"8em\", transform:\"translate(0, 3em)\"}}>\r\n                            <textarea\r\n                            value={ask}\r\n                            style={style.insert}\r\n                            className=\"Gmarket2\"\r\n                            placeholder=\"질문을 입력하세요!\"\r\n                            maxLength=\"99\"\r\n                            onChange={(e) => setAsk(e.target.value)}\r\n                            onKeyPress={pressEnter}\r\n                            />\r\n                        </div>\r\n                        <div style={style.submitbtn}>\r\n                        <IconButton\r\n                            style = {{color: \"white\", fontSize: \"1em\"}}\r\n                            onClick={()=>{\r\n                                if (voice)\r\n                                {\r\n                                    postApi(true, \"(음성 질문입니다)\"); \r\n                                    setAsk(\"\");\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }\r\n                                else if (!voice && ask.length >= 1)\r\n                                {\r\n                                    postApi(false, ask); setAsk(\"\")\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }}}\r\n                            className=\"BMJUA\" \r\n                            aria-label=\"send\">\r\n                            등록\r\n                        </IconButton>\r\n                        </div>\r\n                        <div style={{display:\"block\", zIndex: \"1\"}}>\r\n                        <span style={{\r\n                            fontSize: \"13px\", position:\"absolute\", zIndex:\"1\", right:\"0\", bottom:\"0\", transform:\"translate(-2.5em, -0.5em)\"\r\n                        }}>{ask.length}/100</span>\r\n\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </Grid>\r\n        <div style={style.questionbutton}>\r\n            <IconButton style={{transform:\"translate(0, 1em)\"}} onClick={()=>{props.goQueUp({transform : \"translate(0, 100%)\"}); props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{props.goDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseQuestioning fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n        </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questioning","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\";\r\n\r\nimport ParticipantsButton from '@material-ui/icons/Group';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport QuestionListButton from '@material-ui/icons/FormatListBulleted';\r\nimport QuestionButton from '@material-ui/icons/ContactSupport';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { SportsRugbySharp } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"#3B3B3B\",\r\n    boxShadow: \"none\",\r\n    width: \"100%\",\r\n    height: \"2.5em\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  root2: {\r\n    padding: '0 0 0 10px',\r\n    margin : \"0\",\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n    boxShadow: \"none\",\r\n    Width : \"6em\",\r\n    height: \"2.5em\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    // backgroundColor: \"#D95032\",\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n    backgroundColor: \"#3B3B3B\",\r\n    flex: 1,\r\n  },\r\n  divider: {\r\n    height: 35,\r\n    margin: 4,\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    questioningBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        marginRight:\"5px\", \r\n        backgroundImage:\"url('/static/questionPlus.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      },\r\n    questionListBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/questionList.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n    participantBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/participant.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n}\r\n\r\nexport default function CustomizedInputBase(props) {\r\n\r\n    const dispatch = useDispatch();\r\n   const classes = useStyles();\r\n\r\n  const pressEnter = (e, length) => {\r\n      if (e.key == 'Enter'){\r\n          if (length >= 1)\r\n          props.goMessageSend();\r\n      }\r\n  }\r\n  return (\r\n      <>\r\n    <Paper className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"내용 입력하기\"\r\n        value={props.message}\r\n        onChange={(e) =>\r\n          {\r\n            if(e.target.value.length > 100)\r\n              alert('100자 이내로 입력이 가능합니다')\r\n            props.goSetMessage(e.target.value.substring(0, 100))}\r\n          }\r\n        onKeyPress={(e) => {pressEnter(e, props.message.length)}}\r\n      />\r\n        <IconButton onClick={()=>{\r\n            if(props.message.length >= 1)\r\n                props.goMessageSend() \r\n        }} \r\n            aria-label=\"send\">\r\n        <SendIcon style={{color:\"white\"}}/>\r\n      </IconButton>\r\n    </Paper>\r\n    <Paper className={classes.root2}>\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      {props.isHost?\r\n        <IconButton\r\n        style={style.participantBtn}\r\n        aria-label=\"participants\" \r\n        onClick={()=>{dispatch(getEnteredSession(props.channelNum)); props.goUserUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}}>\r\n        </IconButton>\r\n      :\r\n      <IconButton \r\n      onClick={()=>{props.goQueUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton} aria-label=\"question\"\r\n      style={style.questioningBtn}\r\n      >\r\n        {/* <QuestionButton/> */}\r\n      </IconButton>\r\n      }\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      <IconButton \r\n      style={style.questionListBtn}\r\n      onClick={()=>{console.log(\"press button\"); props.goListUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton2} aria-label=\"question_list\">\r\n        {/* <QuestionListButton/> */}\r\n      </IconButton>\r\n    </Paper>\r\n    </>\r\n  );\r\n}","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Comment, Tooltip } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Message = memo(props => {\r\n  const { message: { sender, sent_timestamp, text } } = props;\r\n\r\n\r\n  return (\r\n    // <Comment\r\n    //   style={{ paddingBottom: 0 }}\r\n    //   content={<>\r\n    //   <span \r\n    //   style={{display:\"inline-block\", width: \"6em\"}}>{sender}\r\n    //   </span>\r\n    //   <span style={{wordBreak: \"break-all\" , textAlign: 'left' }}>{text}</span>\r\n    //   </>}\r\n    // />\r\n    <div style={{display:\"flex\", width: \"100%\"}}>\r\n        <div style={{color: \"rgba(255,255,255,0.5)\", display:\"flex\", width: \"9em\", margin: \"0 1em 15px 0\"}}>\r\n            {sender}\r\n        </div>\r\n        <div style={{position:\"relative\", width: \"100%\", maxWidth : \"37em\", display:\"flex\", wordBreak: \"break-all\" , textAlign: 'left' }}>\r\n         {text}\r\n        </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Empty, Card } from 'antd';\r\n\r\nconst EmptyScreen = props => {\r\n  return (\r\n    <Card className='empty-screen-container' style={props.containerStyle}>\r\n      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={props.description} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nEmptyScreen.propTypes = {\r\n  description: PropTypes.string,\r\n  containerStyle: PropTypes.object\r\n}\r\n\r\nexport default EmptyScreen;","import React, { useRef, useState, useEffect, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, PageHeader, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\nimport MessageInput from './MessageInput';\r\nimport EmptyScreen from './EmptyScreen';\r\nimport Spinner from './Spinner';\r\nimport { onRoomMessagesRead } from '../../../actions/MessagesActions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport InsertField from \"../InsertField\"\r\nimport \"../../../styles/style.css\"\r\nimport { useCacheErrors } from 'antd/lib/form/util';\r\n// import List from '@material-ui/core/List';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst windowPadding = 325;\r\n\r\nconst style = {\r\n    InsertfieldWrapper: {\r\n        position: \"fixed\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        justifyContainer : \"center\",\r\n        height : \"4.5em\",\r\n        bottom:\"0%\",\r\n        width: \"90%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"43em\",\r\n        zIndex:\"8\",\r\n    },\r\n    Insertfield:{\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        left : \"0%\",\r\n        width: \"100%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"44em\",\r\n        zIndex:\"8\",\r\n    },\r\n    top : {\r\n        zIndex:\"2\",\r\n        position : \"absolute\",\r\n        top : \"15%\",\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\",\r\n      flexDirection: \"column\",\r\n      color:\"rgba(239, 89, 65, 0.6)\",\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Chat = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let currentUrl = window.location.href;\r\n    console.log(\"Chat Url : \", currentUrl);\r\n    const params1 = currentUrl.split('?')\r\n    const params2 = params1[1].split('&')\r\n    const params3 = params2[1].split('=')\r\n    const roomId = params3[1]\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        let element = document.querySelector(\".chatting\");\r\n        if (element) {\r\n\r\n          element.scrollTop = element.scrollHeight ? element.scrollHeight : 0;\r\n        }\r\n        console.log(\"Here\");\r\n    }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [roomSocket, setRoomSocket] = useState(null);\r\n\r\n  // const roomId = \"c9c9dd9bb\";\r\n\r\n  // const { room, messages: { messages, loading: loadingChat }, username, windowHeight, onBack, onRoomMessagesRead } = props;\r\n  const { messages: { messages, loading: loadingChat }, username,  onRoomMessagesRead } = props;\r\n  const { room, windowHeight, onBack} = props;\r\n  \r\n\r\n  const user = useSelector(state => state.user.data.detail);\r\n\r\n  useEffect(() => {\r\n      roomSocket && roomSocket.close();\r\n      setRoomSocket(onRoomMessagesRead(roomId)); //세션에 관한 정보 중에서 session.id를 여기 바로 넣으면 채팅방이 구분됨\r\n      // 채팅 올라오는 속도 조절은 타임아웃으로.. \r\n      setTimeout(scrollToBottom,500);  \r\n    }, [room]);\r\n    \r\n    const onMessageSend = () => {\r\n      if (roomSocket) {\r\n        roomSocket.send(JSON.stringify({ command: 'new_message', data: { text: message, sender: user.username } }));\r\n        setMessage('');\r\n        setTimeout(scrollToBottom,300);\r\n      }\r\n    }\r\n\r\n    const handleInfiniteOnLoad = () => {\r\n        setLoading(true);\r\n        messages.length > 14 && setLoading(false) && setHasMore(false);\r\n    };\r\n    \r\n  const renderList = () => {\r\n    if (loadingChat) return  (\r\n        <>\r\n    <Grid style={style.top} container justify=\"center\">\r\n        <div  className={classes.root}>\r\n            <CircularProgress color=\"inherit\"/>\r\n            <p style={{color:\"black\", margin:\"5px 0 0 0\"}}>Loading Chat</p>\r\n        </div>\r\n    </Grid>\r\n        </>\r\n    )\r\n\r\n    if (!messages.length) return <EmptyScreen description='' containerStyle={{ borderWidth: 0 }} />;\r\n\r\n    return (\r\n        <>\r\n      <div className=\"chatting\">\r\n        <List\r\n          className=\"comment-list NanumGothic3\"\r\n          itemLayout=\"horizontal\"\r\n          dataSource={messages}\r\n          renderItem={message => <Message key={message.id.toString()} message={message} />}\r\n        >\r\n        {/* <List>\r\n            {messages.map((message => <Message key={message.id.toString()} message={message} />))} */}\r\n        </List>\r\n          {loading && hasMore && <div className=\"loading-container\"><Spin /></div>}\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nreturn (\r\n    <React.Fragment>\r\n      \r\n      <div style={{ height: windowHeight - windowPadding }}>\r\n        {renderList()}\r\n\r\n      </div >\r\n        <Grid container justify=\"center\">\r\n\r\n        <div style={style.InsertfieldWrapper}>\r\n            <div style={style.Insertfield}>\r\n                    <InsertField\r\n                    holeId={props.holeId}\r\n                    channelNum={props.channelNum} \r\n                    isHost={props.isHost} \r\n                    message={message} \r\n                    goSetMessage={setMessage} \r\n                    goMessageSend={onMessageSend} \r\n                    goListUp = {props.goListUp} \r\n                    goDark={props.goDark} \r\n                    goQueUp={props.goQueUp}\r\n                    goUserUp={props.goUserUp}/>\r\n            </div>\r\n        </div>\r\n        </Grid>\r\n      {/* <MessageInput message={message} onChange={e => setMessage(e.target.value)} onSendClick={onMessageSend} /> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nChat.propTypes = {\r\n  room: PropTypes.object.isRequired,\r\n  messages: PropTypes.object.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  windowHeight: PropTypes.number,\r\n  onBack: PropTypes.func,\r\n  onRoomMessagesRead: PropTypes.func.isRequired\r\n}\r\n\r\n//상태를 연결시키는 함수는 mapStateToTrops로 만들어서 connect에 전달해준다.\r\n//Store 안의 state 값을 props로 연결해준다.\r\nconst mapStateToProps = state => {\r\n  const { messages } = state;\r\n  const { username } = state.user;\r\n  return { username, messages };\r\n}\r\n\r\n// chat 컴포넌트를 어플리케이션의 데이터 레이어와 묶는 역할을 한다.\r\n// 함수가 여러개였다면 mapDispatchProps로 연결해줘야했을듯\r\nexport default connect(mapStateToProps, { onRoomMessagesRead })(Chat);","import ReconnectingWebSocket from 'reconnecting-websocket';\r\nimport { WS_ENDPOINT } from '../environment';\r\nimport { ON_MESSAGES_VALUE_CHANGE, ON_MESSAGES_READING, ON_MESSAGES_READ } from './types';\r\n\r\n//export const onMessagesValueChange = data => ( console.log('data',data));\r\nexport const onMessagesValueChange = data => ({ type: ON_MESSAGES_VALUE_CHANGE, payload: data });\r\n\r\nexport const onRoomMessagesRead = holeId => dispatch => {\r\n  dispatch({ type: ON_MESSAGES_READING });\r\n\r\n  const socket = new ReconnectingWebSocket(`${WS_ENDPOINT()}/hole/${holeId}/`);\r\n  // const socket = new WebSocket(`${WS_ENDPOINT()}/hole/${holeId}/`);\r\n  socket.debug = true;\r\n  // socket.timeoutInterval = 4400;\r\n\r\n  // const socket = new WebSocket(`${WS_ENDPOINT()}/hole/${holeId}`);\r\n  console.log(\"-----------socket--------------\",socket);\r\n\r\n  socket.onopen = event => console.log('WebSocket Connected');\r\n  socket.onerror = event => console.log('error event : ', event);\r\n  socket.onmessage = event => dispatch({ type: ON_MESSAGES_READ, payload: { messages: JSON.parse(event.data) } });\r\n\r\n  socket.onclose = event => console.log('WebSocket Disconnected');\r\n\r\n  return socket;\r\n}","export const WS_ENDPOINT = () => {\r\n  const location = window.location;\r\n\r\n  let protocol = 'ws://';\r\n\r\n  if (location.protocol === 'https:') {\r\n    protocol = 'wss://';\r\n  }\r\n\r\n  const endpoint = protocol + 'www.ask2live.me/ws';\r\n\r\n  return endpoint;\r\n}","import { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function MediaPlayer(props) {\r\n\r\n  const { audioTrack, client, user } = props;\r\n\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  useEffect(() => {\r\n\r\n    if (audioTrack && client.remoteUsers.length === 0) {\r\n      console.log(\"여기는 호스트\");\r\n\r\n      audioTrack.setEnabled(true);\r\n      const volumeInter = setInterval(()=>{\r\n        console.log(\"나의 오디오\", client.uid);\r\n        console.log(\"나의 오디오\", audioTrack.getVolumeLevel());\r\n      }, 500)\r\n\r\n      return () => {\r\n        audioTrack.setEnabled(false);\r\n        clearInterval(volumeInter);\r\n        // audioTrack.stop();\r\n      };\r\n    }\r\n\r\n    else if(audioTrack && client.remoteUsers.length != 0) {\r\n      console.log(\"여기는 게스트\");\r\n\r\n      audioTrack.play();\r\n      const volumeInter = setInterval(()=>{\r\n            console.log(\"상대방오디오\", user.uid);\r\n            console.log(\"상대방오디오\", audioTrack.getVolumeLevel());\r\n      }, 500)\r\n\r\n      return () => {\r\n        audioTrack.stop();\r\n        clearInterval(volumeInter)\r\n      };\r\n    }\r\n  }, [audioTrack]);\r\n  return (\r\n    <div className=\"video-player\">\r\n      {/* {JSON.stringify(videoTrack.play)} */}\r\n    </div>\r\n  );\r\n}\r\n","import { useLocation, withRouter } from \"react-router-dom\";\r\nimport React, { useCallback } from \"react\";\r\nimport MediaPlayer from \"./MediaPlayer\";\r\n\r\n// import \"../../Call.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst PlayerWrapper = ({\r\n  client,\r\n  // rtmClient,\r\n  // host,\r\n  // joinState,\r\n  localAudioTrack,\r\n  remoteUsers,\r\n  // channelNum,\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"player-container\">\r\n        {/* <div> {client.uid} </div> */}\r\n        <div className=\"local-player-wrapper\">\r\n\r\n          <MediaPlayer\r\n            audioTrack={localAudioTrack}\r\n            client={client}\r\n          />\r\n        </div>\r\n        <div className=\"remotePlayers\">\r\n          {remoteUsers.map((user) => (\r\n            <div className=\"remote-player-wrapper\" key={user.uid}>\r\n\r\n              <MediaPlayer audioTrack={user.audioTrack} client={client} user={user}/>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayerWrapper)","import React, {useState, useEffect, useRef, useCallback} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\"\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport {\r\n    QUESTIONLIST_DELETE,\r\n    ENTEREDSESSION_DELETE\r\n} from \"../../actions/types.js\";\r\n\r\n\r\n\r\nimport ParticipantList from \"./ParticipantList\";\r\nimport CurrentQuestion from \"./CurrentQuestion\";\r\n\r\n\r\nimport QuestionSwiper from \"./QuestionSwiper\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport Questioning from \"./Questioning\";\r\nimport InsertField from \"./InsertField\";\r\nimport Chat from \"./chatting/Chat\";\r\nimport Question from \"./Question\";\r\nimport Avatar from \"../Avatar\";\r\nimport \"../../index.css\"\r\nimport PlayerWrapper from \"./agora/PlayerWrapper\";\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseListButton from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nimport \"../../styles/style.css\"\r\n\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { CenterFocusStrong, FilterNone, NoEncryption } from '@material-ui/icons';\r\n\r\n//^ =============================================================\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\nimport useAgora from \"./agora/useAgora\";\r\n//^ =============================================================\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        marginRight: theme.spacing(3),\r\n        width: 30,\r\n        height: 30,\r\n      top: 13,\r\n      borderRadius: \"20px\",\r\n      border: `3px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n  }))(Badge);\r\n\r\nconst style = {\r\n    livewrapper: {\r\n        display: \"inline-block\",\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n        height: \"100%\",\r\n        // backgroundColor: \"rgb(255, 239, 196)\"\r\n    },\r\n\r\n    livesession: {\r\n        position:\"absolute\",\r\n        maxWidth: \"45em\",\r\n        minHeight: \"35em\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        backgroundColor: \"#252525\",\r\n    },\r\n\r\n    session_top: {\r\n        zIndex:\"4\",\r\n        position: \"relative\",\r\n        minHeight: \"3em\",\r\n        height: \"5%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    \r\n    session_mid: {\r\n        position: \"relative\",\r\n        height: \"55%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    session_bottom: {\r\n        position: \"relative\",\r\n        borderRadius: \"30px 30px 0px 0px\",\r\n        bottom: \"0%\",\r\n        height: \" 40%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#252525\",\r\n        zIndex:\"0\",\r\n        // backgroundColor: \"rgb(255, 248, 225)\"\r\n    },\r\n    table: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n\r\n    td1: {\r\n        width: \"60%\",\r\n        fontSize: \"1em\",\r\n        padding: \"10px 0 0 10px\",\r\n        color: \"rgba(255,255,255,0.8)\"\r\n    },\r\n\r\n    td2: {\r\n        width: \"9em\",\r\n        padding: \"0 0 0 10px\",\r\n    },\r\n    lavel : {\r\n        marginLeft: \"-12px\",\r\n        marginRight: \"-0.7em\",\r\n    },\r\n    font_size : {\r\n        fontSize : \"1rem\"\r\n    },\r\n    checkIcon : {\r\n        height: \"0.6em\"\r\n    },\r\n\r\n    tablecell: {\r\n        display: \"table-cell\",\r\n        verticalAlign: \"middle\",\r\n        height: \"100%\",\r\n    },\r\n    follow: {\r\n        marginRight: \"3px\",\r\n        float: \"right\",\r\n    },\r\n\r\n    question: {\r\n        width : \"90%\",\r\n    },\r\n\r\n    listbutton : {\r\n        position: \"absolute\",\r\n        top: \"-0.5em\",\r\n    },\r\n\r\n    alert : {\r\n        boxShadow: \"2px 2px 2px 2px #D95032\",    // 섀도우 색\r\n        border: \"solid 1px white\",    // 테두리 색\r\n        backgroundColor:\"black\"      // 배경색\r\n    },\r\n\r\n    closeBtn : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"1em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        background:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n    },\r\n    linkBtnWrap : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"3.5em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        backgroundColor:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    linkBtn : {\r\n        marginLeft: \"1px\",\r\n        width: \"1.8em\",\r\n        height: \"1.8em\",\r\n        backgroundImage: \"url('/static/linkBtn.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\"\r\n    }\r\n   \r\n}\r\n\r\n\r\n//^ =============================================================\r\nconst appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\nconst client = AgoraRTC.createClient({ codec: \"vp8\", mode: \"rtc\" });\r\nconst rtmClient = AgoraRTM.createInstance(appid);\r\n\r\n\r\n//^ =============================================================\r\n\r\nconst LiveSession = (props) => {\r\n    const history = useHistory();\r\n    console.log(\"!!!!!!!!!!!!!!!!!\", props);\r\n    // console.log(\"history state: \", history.state)\r\n    // history.pushState(null, null, '');\r\n    // console.log(\"history state: \", history.state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const hostPostApi = async(hostUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              channel_num : props.channelNum,\r\n              host_uid : hostUid,\r\n          };\r\n          console.log(\"LiveSession Host Post :\", data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n    \r\n    const audiencePutApi = async(audienceUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              uid : audienceUid,\r\n          };\r\n          console.log(\"LiveSession Audience Post :\", data);\r\n          const res = await axios.put(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/join/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n    const leavePatchApi = async() =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {};\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/leave/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n\r\n    const [listup, setListUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [queUp, setQueUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [userUp, setUserUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [dark, setDark] = useState({display:\"none\"})\r\n\r\n    const [room, setRoom] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [questionAlert, setOuestionAlert] = useState(false);\r\n    const [copiedAlert, setCopiedAlert] = useState(false);\r\n    const [refreshAlert, setRefreshAlert] = useState(false)\r\n\r\n    const [hostExit, setHostExit] = useState(false);\r\n\r\n    const openQuestionAlert = () => {\r\n        setOuestionAlert(true);\r\n      };\r\n    \r\n    const closeQuestionAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setOuestionAlert(false);\r\n    };\r\n\r\n    const openCopiedAlert = () => {\r\n        setCopiedAlert(true);\r\n      };\r\n    \r\n    const closeCopiedAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setCopiedAlert(false);\r\n    };\r\n    // const history = useHistory()\r\n    \r\n    let partiNum = \"로딩중\";\r\n    const holeInfo = useSelector(state => state.enteredSession, [partiNum])\r\n    const hostImage = holeInfo.arrived ? \r\n            holeInfo.data.detail.livehole.host_profile_image_url\r\n            : \"/static/live_png\";\r\n    partiNum = holeInfo.arrived ? \r\n         holeInfo.data.detail.participant.length + \"명\"\r\n        : \"로딩중\"\r\n\r\n    // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n    const handleClick = () => {\r\n        console.log(\"호스트 나감2\", hostExit)\r\n        setOpen(true);\r\n    };\r\n    \r\n    // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n    const handleClose = (event, reason) => { \r\n        setHostExit(true);\r\n\r\n        // history.replace('/main')\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        setTimeout(window.location.replace('/main'), 300);\r\n    };\r\n    \r\n    //^ =============================================================\r\n    let rtmChannel;\r\n    const [channel, setChannel] = useState();\r\n\r\n    const {\r\n        localAudioTrack,\r\n        leave,\r\n        join,\r\n        joinState,\r\n        remoteUsers,\r\n        authority,\r\n    } = useAgora(client);\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        dispatch({type: QUESTIONLIST_DELETE})\r\n        dispatch({type: ENTEREDSESSION_DELETE})\r\n        \r\n        const liveInter = setInterval(()=>{\r\n            dispatch(getEnteredSession(props.channelNum))\r\n            dispatch(getQuestionList(props.holeId))\r\n        }, 5000);\r\n\r\n        \r\n        \r\n        const refreshOut = () => {\r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            clearInterval(liveInter);\r\n            // clearInterval(volumeInter);\r\n        };\r\n        window.addEventListener(\"beforeunload\", refreshOut);\r\n        window.onpageshow =  function(event) { // BFCahe\r\n            if (event.persisted) {\r\n                refreshOut();\r\n                window.location.replace('/main')\r\n            }\r\n        }\r\n\r\n        rtmChannel = rtmClient.createChannel(props.channelNum);\r\n        join(props.channelNum, null, rtmClient, rtmChannel, props.isHost);\r\n        rtmChannel.on('ChannelMessage', (message, memberId) => {\r\n            console.log(`Message ${message}, from ${memberId}`);\r\n            \r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            clearInterval(liveInter);\r\n            // clearInterval(volumeInter);\r\n            handleClick();\r\n        });\r\n\r\n        if (props.isHost)\r\n            setTimeout(()=>{hostPostApi(client.uid)}, 4000);\r\n        else\r\n            setTimeout(()=>{audiencePutApi(client.uid)}, 4000);\r\n             \r\n        if (props.isHost)\r\n        {\r\n            const unblock = history.block('정말 떠나시겠습니까?');\r\n            return () => {\r\n                // dispatch({type: QUESTIONLIST_DELETE})\r\n                // dispatch({type: ENTEREDSESSION_DELETE})\r\n\r\n                console.log(\"호스트!!!: \", props.isHost)\r\n                window.removeEventListener(\"beforeunload\", refreshOut);\r\n\r\n                rtmChannel.sendMessage({ text: \"hostOut\" }).then(() => {\r\n                    // Your code for handling the event when the channel message is successfully sent.\r\n                        console.log('host is leaving')\r\n                    }).catch(error => {\r\n                    // Your code for handling the event when the channel message fails to be sent.\r\n                        console.log('host leaving error')\r\n                    });\r\n\r\n                rtmClient.logout();\r\n                leave();\r\n                leavePatchApi();\r\n                clearInterval(liveInter)\r\n                // clearInterval(volumeInter);\r\n                unblock();\r\n                \r\n                // history.replace('/main');\r\n                setTimeout(window.location.replace('/main'), 300);\r\n                \r\n            }\r\n\r\n        }\r\n        \r\n        else {\r\n            const unblock = history.block('정말 떠나시겠습니까?');\r\n            return () => {\r\n                // dispatch({type: QUESTIONLIST_DELETE})\r\n                // dispatch({type: ENTEREDSESSION_DELETE})\r\n\r\n                console.log(\"게스트가 스스로 나가는경우!!!!!!!!!!\", hostExit)\r\n                window.removeEventListener(\"beforeunload\", refreshOut);\r\n\r\n                // rtmChannel.leave();\r\n                rtmClient.logout();\r\n                leave();\r\n                leavePatchApi();\r\n                clearInterval(liveInter)\r\n                // clearInterval(volumeInter);\r\n                unblock();\r\n                \r\n                // history.replace('/main');\r\n                setTimeout(window.location.replace('/main'), 300);\r\n            }\r\n        }\r\n    }, [history])\r\n\r\n    // ^ =============================================================\r\n    \r\n    const [liveVoice,setLiveVoice] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <div style={style.livewrapper}>\r\n            <div style={style.livesession}>\r\n                <div style={style.session_top}>\r\n                    <table style={style.table}>\r\n                        <tr>\r\n                            <td  colspan=\"2\" className=\"NanumGothic4\" style={style.td1} >{props.holeTitle}</td>\r\n                            <td  rowspan=\"2\">\r\n                                <div style={style.follow}>\r\n                                <div\r\n                                    style={style.closeBtn}\r\n                                    onClick={()=>{history.push('/main')}}\r\n                                    >\r\n                                        <span \r\n                                        className=\"NanumGothic2\"\r\n                                        style={{fontSize: \"0.6em\"}}>종료</span>\r\n                                </div>\r\n                                <div\r\n                                style={style.linkBtnWrap}\r\n                                >\r\n                                    <CopyToClipboard\r\n                                        onCopy={openCopiedAlert}\r\n                                        text={window.location.href}\r\n                                    >\r\n                                    <div style={style.linkBtn}/>\r\n                                    </CopyToClipboard>\r\n                                </div>\r\n                                \r\n                                </div>\r\n                                \r\n                            </td>      \r\n                        </tr>\r\n                        <tr>\r\n                            <td style={style.td2}>\r\n                                <img className=\"live_img\" src=\"/static/live.png\"/>\r\n                                <span style={{marginLeft:\"9px\", color:\"rgba(255, 255, 255, 0.6)\"}} className=\"NotoSans3\">{partiNum}</span>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </table>  \r\n                </div>\r\n                <div style={style.session_mid}>\r\n                    <div style={{position:\"relative\", height:\"40%\"}}>\r\n                        <div className=\"forLiveWrapper\" \r\n                        style={liveVoice?\r\n                        {transform:\"translate(-25%, 70%)\"}\r\n                        :\r\n                        null\r\n                        }>\r\n                                <div className=\"forLiveVoice\">\r\n                                    <tr>\r\n                                    <StyledBadge badgeContent={<MicIcon/>} color=\"error\">\r\n                                        <Avatar hostName={props.hostName} imageLink={props.imageLink}/>\r\n                                    </StyledBadge>\r\n                                    </tr>\r\n                                    <tr className=\"centered\">\r\n                                        <span style={{color: \"rgba(255,255,255,0.8)\"}}className=\"BMDOHYEON\">{props.hostName}</span>\r\n                                    </tr>\r\n                                </div>\r\n\r\n                        </div>\r\n        \r\n                     \r\n                    </div>\r\n                    <div style={{position:\"relative\", height:\"50%\"}}>\r\n                        {/* <Grid container justify=\"center\"> */}\r\n                            <div>\r\n                                 <CurrentQuestion \r\n                                 setLiveVoice={setLiveVoice}\r\n                                 liveVoice={liveVoice}\r\n                                 holeId={props.holeId} \r\n                                 isHost={props.isHost}\r\n                                 client={client}\r\n                                 rtmClient={rtmClient}\r\n                                 host={authority}\r\n                                 localAudioTrack={localAudioTrack}\r\n                                 remoteUsers={remoteUsers}\r\n                                 channelNum={props.channelNum}\r\n                                 />\r\n                            </div>\r\n                        {/* </Grid>  */}\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.session_bottom}>\r\n                    <div className=\"chattingWrapper\"/>\r\n                    <Chat holeId={props.holeId} isHost={props.isHost} channelNum={props.channelNum} goQueUp={setQueUp} goListUp = {setListUp} goUserUp = {setUserUp} goDark={setDark} room={room} windowHeight=\"1000px\" onBack={()=>setRoom(null)}/>                   \r\n                </div>\r\n            \r\n           \r\n        </div>\r\n        {props.isHost?\r\n        <div style={userUp} className=\"hiddenlist\">\r\n            <ParticipantList holeId={props.holeId} channelNum={props.channelNum} goUserUp = {setUserUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setUserUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n        :   \r\n        <div style={queUp} className=\"hiddenQue\">\r\n            <Questioning openQuestionAlert={openQuestionAlert} holeId={props.holeId} goQueUp = {setQueUp} goDark={setDark}/>\r\n        </div>\r\n        }\r\n        <div style={listup} className=\"hiddenlist\">\r\n            <QuestionList holeId={props.channelNum} goListUp = {setListUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setListUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n\r\n        <div style={dark} className=\"layerfordark\"></div>\r\n\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n            <span style={{color:\"white\"}}>호스트 {props.hostName}가<br/>세션을 종료하였습니다</span>\r\n        </Alert>\r\n        </Snackbar>\r\n\r\n        <div className=\"host-player\">\r\n            <PlayerWrapper\r\n                client={client}\r\n                // rtmClient={rtmClient}\r\n                // host={authority}\r\n                localAudioTrack={localAudioTrack}\r\n                remoteUsers={remoteUsers}\r\n                // channelNum={props.channelNum}\r\n            />\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={questionAlert} autoHideDuration={1500} onClose={closeQuestionAlert}>\r\n            <Alert onClose={closeQuestionAlert} style={{ boxShadow: \"2px 2px 2px 2px #D95032\", border: \"solid 1px white\", backgroundColor:\"black\"}} severity=\"success\">\r\n                <span style={{ color:\"white\"}}>질문 등록 성공!</span>\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={copiedAlert} autoHideDuration={1500} onClose={closeCopiedAlert}>\r\n            <Alert onClose={closeCopiedAlert} style={{ boxShadow: \"2px 2px 2px 2px #D95032\", border: \"solid 1px white\", backgroundColor:\"black\"}} severity=\"success\">\r\n                <span style={{ color:\"white\"}}>링크 복사 완료</span>\r\n            </Alert>\r\n        </Snackbar>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default LiveSession","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport AgoraRTC, {\r\n  MicrophoneAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig,\r\n} from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\n\r\nimport { AirlineSeatReclineExtraOutlined } from \"@material-ui/icons\";\r\n\r\nexport default function useAgora(client) {\r\n  console.log(\"useAgora\");\r\n  const appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\n\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(\"\");\r\n  const [joinState, setJoinState] = useState(false);\r\n  const [remoteUsers, setRemoteUsers] = useState([]);\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  async function createLocalTracks() {\r\n    const microphoneTrack = await AgoraRTC.createMicrophoneAudioTrack(\r\n      // MicrophoneAudioTrackInitConfig\r\n      { AEC: true, ANS: true }\r\n    );\r\n    setLocalAudioTrack(microphoneTrack);\r\n    return microphoneTrack;\r\n  }\r\n  \r\n  async function join(channel, token, rtmClient, rtmChannel, isHost) {\r\n    console.log(\"join\");\r\n\r\n    if (!client) return;\r\n    \r\n    const microphoneTrack = await createLocalTracks();\r\n    await client.join(appid, channel, token);    \r\n    \r\n    // rtm 클라이언트 로그인\r\n    await rtmClient\r\n    .login({ token: null, uid: String(client.uid) })\r\n        .then(() => {\r\n          console.log(\"AgoraRTM client login success !!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"AgoraRTM client login failure !!\", err);\r\n        });\r\n        \r\n    // rtm 클라이언트 메시지 받기 모드\r\n    await rtmClient.on(\"ConnectionStateChanged\", (newState, reason) => {\r\n      console.log(\r\n        \"on connection state changed to \" + newState + \" reason: \" + reason\r\n        );\r\n      });\r\n    \r\n    //rtm 메시지채널 join\r\n    await rtmChannel.join();\r\n\r\n      // event listener for receiving a peer-to-peer message.\r\n    await rtmClient.on(\"MessageFromPeer\", (msg, peerId) => {\r\n        // text: text of the received message; peerId: User ID of the sender.\r\n        console.log(\r\n          \"AgoraRTM Peer Msg: from user \" + peerId + \" recieved: \\n\" + msg.text\r\n        );\r\n\r\n        // check if mute or leave command\r\n        if (msg.text === \"host\") {\r\n          console.log(\"make host\");\r\n\r\n          client.publish(microphoneTrack);\r\n          // localAudioTrack.stop();\r\n          // localAudioTrack.setEnabled(true);\r\n\r\n        } else if (msg.text === \"audience\") {\r\n          console.log(\"make audience\");\r\n          \r\n          client.unpublish();\r\n          // localAudioTrack.play();\r\n\r\n        } else {\r\n          console.log(\"[Warning] unknown message:\", msg);\r\n        }\r\n        \r\n        \r\n      });\r\n\r\n    if (isHost) {\r\n      console.log(\"client Role in JOIN \");\r\n      await dispatch({type: \"superHost\", payload: \"host\"});\r\n      await client.publish(microphoneTrack);\r\n\r\n    } else {\r\n      console.log(\"audience Role in JOIN\");\r\n      await dispatch({type: \"audience\"});\r\n    }\r\n\r\n    console.log(\"end useAgora\");\r\n    setJoinState(true);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n    // if (localVideoTrack) {\r\n    //   localVideoTrack.stop();\r\n    //   localVideoTrack.close();\r\n    // }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    //! leave하면 이상해지더라..\r\n    // await rtmChannel.leave();\r\n    await client.leave();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n    \r\n    const handleUserPublished = async (user, mediaType) => {\r\n      await client.subscribe(user, mediaType);\r\n\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserUnpublished = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserJoined = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserLeft = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    client.on(\"user-published\", handleUserPublished);\r\n    client.on(\"user-unpublished\", handleUserUnpublished);\r\n    client.on(\"user-joined\", handleUserJoined);\r\n    client.on(\"user-left\", handleUserLeft);\r\n\r\n    return () => {\r\n      client.off(\"user-published\", handleUserPublished);\r\n      client.off(\"user-unpublished\", handleUserUnpublished);\r\n      client.off(\"user-joined\", handleUserJoined);\r\n      client.off(\"user-left\", handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    joinState,\r\n    leave,\r\n    join,\r\n    remoteUsers,\r\n    authority,\r\n  };\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useHistory, withRouter} from \"react-router-dom\"\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width : \"94%\",\r\n    maxWidth: \"23em\",\r\n    height: \"11em\"\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    paddingTop: 0,\r\n},\r\ncover: {\r\n    width: \"20px\",\r\n    borderLeft: \"solid rgba(0, 0, 0, 0.3) 1px\"\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  top : {\r\n      position : \"fixed\",\r\n      top: \"30%\"\r\n  }\r\n}));\r\n\r\nconst style = {\r\n  loginCard : {\r\n      top : \"20%\",\r\n      // backgroundColor: \"skyblue\",\r\n      border: \"1px solid black\",\r\n      borderRadius: \"15px\",\r\n      boxShadow: \"1px 1px 2px 2px black\",\r\n      paddingTop: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      maxWidth : \"23em\",\r\n      width : \"16em\",\r\n      height : \"10.5em\",\r\n      position : \"fixed\",\r\n  },\r\n  loginBtnWrapper : {\r\n      position: \"absolute\",\r\n      top : \"88%\",\r\n      backgroundColor: \"black\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  mikeBtn : {\r\n    height: '2.5em',\r\n    width: '4em',\r\n    backgroundColor: \"black\",\r\n    boxShadow: \"1px 1px 1px 1px black\",\r\n    borderColor: \"white\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n  },\r\n  loginBtn : {\r\n      height: '2.5em',\r\n      width: '4em',\r\n      backgroundColor: \"#EF5941\",\r\n      boxShadow: \"1px 1px 1px 1px black\",\r\n      borderColor: \"#EF5941\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  liveBtn : {\r\n    height: '2.5em',\r\n    width: '7em',\r\n    backgroundColor: \"#EF5941\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    borderColor: \"#EF5941\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n},\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst JoinCard = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [mike, setMike] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getMike = () => {\r\n      navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(function(stream) {\r\n        console.log('You let me use your mic!')\r\n        setMike(1);\r\n      })\r\n      .catch(function(err) {\r\n        handleOpen();\r\n      });\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    \r\n<Grid className={classes.top} container justify=\"center\">\r\n    <Card style={style.loginCard}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            {props.hostName}\r\n          </Typography>\r\n          {props.isHost ?  \r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A를 시작합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>    \r\n            :\r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A에 입장합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>\r\n            }\r\n        <div>\r\n          {console.log(props.isHost)}\r\n            {props.isHost ?\r\n                mike?\r\n                    <button \r\n                    onClick={()=>{\r\n                        history.push({\r\n                            pathname : \"/session/live\",\r\n                            search: \"?holeId=\" + props.holeId + \"&channelNum=\" + props.channelNum,\r\n                            state : {\r\n                                joinPass : true,\r\n                                isHost : true,\r\n                                hostName : props.hostName,\r\n                                hostImage: props.hostImage,\r\n                            }\r\n                        })\r\n                    }}\r\n                    // style={{margin:\"0 0 1em 2em\"}}\r\n                    style={style.liveBtn}\r\n                    >라이브열기</button>\r\n                :\r\n                <></>\r\n            :   \r\n                mike?\r\n                <button \r\n                style={style.loginBtn}\r\n                onClick={()=>props.setJoin(1)} aria-label=\"play/pause\">\r\n                    입장\r\n                </button>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n\r\n</Grid>\r\n  <Snackbar style={{top: \"40%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert style={{width: \"90%\"}} onClose={handleClose} severity=\"warning\">\r\n        [마이크 권한]이 차단되었습니다<br/><br/>\r\n        브라우저 상단에서<br/>\r\n        [마이크 권한]을 허용해주세요!\r\n      </Alert>\r\n  </Snackbar>\r\n</>\r\n  );\r\n}\r\n\r\nexport default withRouter(JoinCard)","import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport LiveSession from \"../components/liveSession/LiveSession\"\r\nimport JoinCard from \"../components/JoinCard\"\r\nimport getEnteredSession from \"../actions/EnteredSessionActions\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../index.css\"\r\nimport { sessionDummy } from \"../dummydatas/sessionDummy\"\r\n\r\n\r\nconst LiveSessionContainer = (props) => {\r\n\r\n    console.log(\"LiveSessionContainer Props\", props.joinPass);\r\n\r\n    const [join, setJoin] = useState(props.joinPass); // ?���? ?��?��코딩\r\n\r\n    console.log(join);\r\n\r\n    // if (1) //props.isHost\r\n    //     return <LiveSession hostName={hostName} imageLink={imageLink} channelNum={channelNum} isHost={1}/>\r\n    if (!join){\r\n        console.log(\"!join\", join)\r\n        return <JoinCard holeId={props.holeId} channelNum={props.channelNum} hostName={props.hostName} hostImage={props.hostImage} setJoin={setJoin} isHost={props.isHost}/>\r\n    }else\r\n    {\r\n        console.log(\"join\",join)\r\n        return <LiveSession holeTitle={props.holeTitle} holeId={props.holeId} hostName={props.hostName} imageLink={props.hostImage} channelNum={props.channelNum} isHost={props.isHost}/>\r\n    }\r\n}\r\n\r\nexport default LiveSessionContainer","import React from \"react\";\r\nimport {useSelector} from \"react-redux\"\r\nimport JoinCard from \"./JoinCard\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\n\r\nconst ReserveToLive = (props) => {\r\n    console.log(\"Enter : ReserveToLive\")\r\n\r\n    const holeId = props.holeId\r\n    const sessions = useSelector(state => state.session.data)\r\n    let channelNumAry = []\r\n\r\n    sessions.map((session) => {\r\n        channelNumAry = [...channelNumAry, session.livehole_id];\r\n    })\r\n\r\n    let channelNum;\r\n\r\n    while (true)\r\n    {\r\n        channelNum = Math.floor(Math.random() * 10001)\r\n        if (channelNumAry.indexOf(channelNum) == -1)\r\n            break\r\n    }\r\n\r\n    console.log(\"MakeChannelNum\", channelNum);\r\n    console.log(\"ReserveToLive Props\", props);\r\n\r\n    return <LiveSessionContainer hostName={props.hostName} hostImage={props.hostImage} holeId={holeId} channelNum={channelNum} isHost={true}/>\r\n}\r\n\r\nexport default ReserveToLive","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\nimport ReserveToLive from \"../components/ReserveToLive\"\r\nimport axios from \"axios\"\r\n\r\nconst LIVE = \"live\"\r\nconst RESERVE = \"reserve\" \r\n\r\nconst SessionMatchContainer = (props) => {\r\n    const history = useHistory()\r\n    const [match, setMatch] = useState()\r\n\r\n    console.log(props);\r\n    const sessionKind = props.routerInfo.match.params.state;\r\n    let urlSearchParams = new URLSearchParams(props.routerInfo.location.search.slice(1));\r\n    console.log(props);\r\n    console.log(sessionKind);\r\n\r\n    const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n    const tmp =  useSelector(state => state.user.data)\r\n    const currUser = tmp.detail? tmp.detail.username : \"\";\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n            (res) => {\r\n                if (res.data.response === \"SUCCESS\")\r\n                    setMatch(res.data.detail);\r\n            }\r\n        )\r\n    },[holeId])\r\n    \r\n    switch (sessionKind) {\r\n        case LIVE:\r\n            const channelNum = urlSearchParams.get(\"channelNum\");\r\n            console.log(\"----Match----\", match)\r\n            if (match) \r\n            {\r\n                if (match.status === \"DONE\")\r\n                    return (\r\n                    <>\r\n                        <div style={{\r\n                            position:\"fixed\",\r\n                            display:\"flex\", \r\n                            width:\"100%\", \r\n                            height:\"100%\",\r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                        }}>\r\n                            <div>\r\n                                <div style={{\r\n                                    position:\"relative\",\r\n                                    zIndex:\"1\",\r\n                                    width:\"15em\",\r\n                                    height:\"15em\",\r\n                                    backgroundImage:\"url('/static/wallcat.png')\",\r\n                                    backgroundSize:\"contain\",\r\n                                    backgroundRepeat:\"no-repeat\",\r\n                                }}></div>\r\n                                <div style={{\r\n                                    zIndex:\"0\",\r\n                                    transform:\"translate(0, -9em) rotate(7deg)\",\r\n                                    display:\"flex\", \r\n                                    justifyContent:\"center\",\r\n                                    alignItems:\"center\",\r\n                                    backgroundColor:\"white\",\r\n                                    width: \"15em\",\r\n                                    height:\"4em\",\r\n                                    border:\"2px solid grey\"\r\n                                }}\r\n                                    >\r\n                                    <p style={{fontSize:\"1em\"}} className=\"CookieRun\">\r\n                                        이미 라이브가 종료된 방입니다.\r\n                                    </p>\r\n\r\n                                </div>\r\n                        \r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n\r\n                        </div>\r\n                        <div  style={{\r\n                            position:\"fixed\",\r\n                            display:\"flex\", \r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                            height:\"100%\",\r\n                            width:\"100%\",\r\n                            transform:\"translate(0, 3em)\"\r\n                            }}>\r\n                            <span\r\n                            style={{cursor:\"pointer\", borderBottom:\"1px solid black\"}} \r\n                            className=\"Gmarket2\"\r\n                            onClick={()=>{\r\n                                history.push(\"/main\")\r\n                            }}\r\n                            >메인으로 가기</span>\r\n                        </div>\r\n                    </>)\r\n\r\n                const isHost = (currUser === match.host_username);\r\n                return <LiveSessionContainer holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.routerInfo.location.state?.joinPass} isHost={isHost}/>\r\n            }\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n\r\n        case RESERVE:\r\n            if (match)\r\n                return <ReserveToLive holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId}/>\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n            \r\n        default:\r\n            return (\r\n                <p>SessionMatchContainer ERROR</p>     \r\n            )\r\n        }\r\n    // switch (sessionKind) {\r\n    //     case LIVE:\r\n    //         const holeId = urlSearchParams.get(\"holeId\");\r\n    //         const channelNum = urlSearchParams.get(\"channelNum\");\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     const isHost = (currUser === res.data.detail.host_username);\r\n    //                     return <LiveSessionContainer hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.location.state?.joinPass} isHost={isHost}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     case RESERVE: // 占쏙옙占쏙옙 호占쏙옙트占쏙옙 占쏙옙占식곤옙占쏙옙\r\n    //         const holeId_reserve = urlSearchParams.get(\"holeId\");\r\n    //         console.log(holeId_reserve)\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     return <ReserveToLive hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId_reserve}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     default:\r\n    //         return (\r\n    //             <p>SessionMatchContainer ERROR</p>     \r\n    //         )\r\n    //     }\r\n}\r\n\r\nexport default SessionMatchContainer","import { \r\n    ALL_USERS_GET_PENDING,\r\n    ALL_USERS_GET_SUCCESS,\r\n    ALL_USERS_GET_FAILURE \r\n} from \"./types\";\r\nimport axios from 'axios'\r\n\r\nfunction AllUsersGetApi(){\r\n    return axios.get('https://www.ask2live.me/api/user/all_read')\r\n}\r\n\r\nexport const getAllUsersInfo = () => dispatch => {\r\n    console.log('-----getAllUserInfo start-----')\r\n    dispatch({type: ALL_USERS_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return AllUsersGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: ALL_USERS_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ALL_USERS_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {getUserInfo} from '../actions/UserActions';\r\n\r\nexport default (SpecialComponent, option, adminRoute=null) => {\r\n\r\n  /* \r\n     ��)  option: null -> ������ ������ ������ ������ (home)\r\n                 true -> �α����� ������ ������ ������ ������\r\n                 false -> �α����� ������ ������ �Ұ����� ������\r\n                 \r\n        false�� �������� �α����� ������ ������ �� �ְ� ¥�� �ȵ�����, Ȥ�ó� �������� ���� �Ʒ� �ڵ� ��� �α��������� ���Եȴ�.\r\n        ���� ���� �������� �������ҵ�??\r\n  */\r\n  const AuthenticateCheck = (props) => {\r\n    // useDispatch(getUserInfo())\r\n    // const user = useSelector(state => state.user)\r\n    const isLoggedIn = localStorage.getItem(\"token\");\r\n    // const arrived = user.arrived\r\n    // console.log(isLoggedIn, arrived, option)\r\n\r\n\r\n    useEffect(() => {\r\n      if (!isLoggedIn && option) {\r\n        props.history.push({\r\n            pathname : \"/login\",\r\n            before : props.location.pathname + props.location.search  \r\n        });\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <SpecialComponent routerInfo={props}/>\r\n    )\r\n\r\n  };\r\n  return AuthenticateCheck;\r\n};","import { NativeSelect } from '@material-ui/core';\r\nimport React, {useEffect, useState, } from 'react';\r\nimport CounterContainer from './containers/CounterContainer';\r\nimport NavContainer from './containers/NavContainer'\r\nimport SessionCardContainer from './containers/SessionCardContainer';\r\nimport MypageContainer from './containers/MypageContainer';\r\nimport SessionCreateContainer from './containers/SessionCreateContainer';\r\nimport ProfileDetail from './components/mypage/ProfileDetail';\r\nimport MypageEdit from './components/mypage/MypageEdit';\r\nimport PreQuestions from './components/sessionCard/PreQuestions';\r\n// import MainPage from \"./components/MainPage\" \r\n// import 'fontsource-roboto'\r\n\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport SessionMatchContainer from './containers/SessionMatchContainer';\r\n\r\nimport {LoginPage} from './components/onBoard'\r\n\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport Chat from \"./components/liveSession/chatting/Chat\"\r\n\r\nimport { getAllUsersInfo } from './actions/AllUsersActions'\r\nimport { getSessionInfo, getUserSessionInfo } from './actions/SessionActions'\r\nimport { getUserInfo } from './actions/UserActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport Auth from \"./hoc/auth\";\r\nimport escapeInapp from \"./escapeInapp\";\r\n\r\nconst App = () => {\r\n\r\n    useEffect(() => {\r\n        // const script = document.createElement(\"script\");\r\n        escapeInapp(document, window.location, navigator.userAgent);\r\n        // script.src = \"https://urlopen.link/direct.js\";\r\n        // script.async = true;\r\n        // document.body.appendChild(script);\r\n        // console.log(\"유저에이전트\", navigator.userAgent)\r\n        // console.log(script)\r\n        // console.log(document)\r\n        // console.log(window.location.href)\r\n\r\n        // return () => {\r\n        //     document.body.removeChild(script);\r\n        // }\r\n    })\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token')\r\n    if(token){\r\n        dispatch(getUserInfo(token));\r\n        // dispatch(getUserSessionInfo(token));\r\n    }\r\n\r\n    dispatch(getSessionInfo());\r\n\r\n    // dispatch(getAllUsersInfo());\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* <Route exact path=\"/hole/c9c9dd9bb\" component={Chat}/> */}\r\n        \r\n        <Route exact path=\"/main\" component={Auth(SessionCardContainer, true)}/>\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={LoginPage}/>\r\n            <Route exact path=\"/\" component={LoginPage}/>\r\n            <Route exact path=\"/session/:state\" component={Auth(SessionMatchContainer, true)}/>\r\n            {/* <Route exact path=\"/session/:state\" render={(matchProps) => <SessionMatchContainer {...matchProps}/>}/>  */}\r\n            <Route exact path=\"/createSession\" component={Auth(SessionCreateContainer, true)}/>\r\n            <Route exact path=\"/mypage/:username\" component={Auth(ProfileDetail, true)}/>\r\n            <Route exact path=\"/mypage/:username/edit\" component={Auth(MypageEdit, true)}/>\r\n            {/* <Route path=\"/\" component={NavContainer}/> */}\r\n        </Switch>\r\n        <Route exact path=\"/preQuestions/:pk\" component={Auth(PreQuestions, true)}/>    \r\n        <Route exact path=\"/mypage\" component={Auth(MypageContainer, true)}/>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default App\r\n","\r\n\r\nexport default function escapeInapp(d, l, a) {\r\n\tif(d.body.getAttribute('__donot_urlopenlink') || !/mobile/i.test(a) || !/inapp|KAKAOTALK|Line\\/|FB_IAB\\/FB4A|FBAN\\/FBIOS|Instagram|DaumDevice\\/mobile|SamsungBrowser\\/[^1]/i.test(a)) return;\r\n\tl.href.replace(/^https?:\\/\\/((?:(?:[a-z\\d_\\-=]+\\.)+[a-z\\d]+)(\\/[a-z\\d_\\-=\\+\\.\\/:]*)?)(?:\\?(.*))?$/i, function($0, u, d, q) {\r\n\t\tlet qs, i, kv, k, v, j;\r\n\t\tif(!d) u += '/';\r\n\t\tif (q) {\r\n\t\t\tqs = q.split('&');\r\n\t\t\tfor(i = 0; i < qs.length; i ++) {\r\n\t\t\t\tkv = qs[i].split('=');\r\n\t\t\t\tk = kv.shift();\r\n\t\t\t\tv = kv.join('=');\r\n\t\t\t\tif(/[^a-z\\d_\\-\\.]/i.test(k)) return false;\r\n\t\t\t\tfor(j = 0; j < v.length; j ++) {\r\n\t\t\t\t\tif(v.charCodeAt(j) < 256 && /[^a-z\\d_\\-=\\+\\.\\/]/i.test(v[j])) return false;\r\n\t\t\t\t\tif(v.charCodeAt(j) > 256 && encodeURIComponent(v[j]).length < 9) return false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tu += '?' + q;\r\n\t\t}\r\n\t\tl.replace('https://' + u);\r\n\t});\r\n}","\r\nimport {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    arrived : false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case USER_GET_SUCCESS:\r\n            const userInfo = action.payload.data; // 경로 수정 필요할수도\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                arrived: true,\r\n                data: userInfo\r\n            };\r\n        case USER_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        // case GIVEUSER:\r\n        //     // state = action.user; //state 이렇게 바꿔도 되나?\r\n        //     return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","\r\nimport {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport const session = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SESSION_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case SESSION_GET_SUCCESS:\r\n            const sessionInfo = action.payload.data; \r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: sessionInfo\r\n            };\r\n        case SESSION_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case SETLIVE:\r\n            return {\r\n                ...state[state.findIndex(e => e.holeId === action.holeId)],\r\n                isLive : action.livestate,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default session;","import {\r\n  MY_SESSION_GET_PENDING,\r\n  MY_SESSION_GET_SUCCESS,\r\n  MY_SESSION_GET_FAILURE,\r\n  MY_SETLIVE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  pending: false,\r\n  error: false,\r\n  data: [],\r\n};\r\n\r\nconst mySession = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MY_SESSION_GET_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n        error: false,\r\n      };\r\n    case MY_SESSION_GET_SUCCESS:\r\n      const sessionInfo = action.payload.data;\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: sessionInfo,\r\n      };\r\n    case MY_SESSION_GET_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: true,\r\n      };\r\n    // case MY_SETLIVE:\r\n    //   return {\r\n    //     ...state[state.findIndex((e) => e.holeId === action.holeId)],\r\n    //     isLive: action.livestate,\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mySession;\r\n","import {\r\n    ON_MESSAGES_VALUE_CHANGE,\r\n    ON_MESSAGES_READING,\r\n    ON_MESSAGES_READ\r\n  } from '../actions/types';\r\n  \r\n  const INITIAL_STATE = {\r\n    messages: [],\r\n    loading: false,\r\n    error: '',\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ON_MESSAGES_VALUE_CHANGE:\r\n        return { ...state, ...action.payload };\r\n      case ON_MESSAGES_READING:\r\n        return { ...state, loading: true, error: '' };\r\n      case ON_MESSAGES_READ:\r\n        return { ...state, ...action.payload, loading: false, error: '' };\r\n      default:\r\n        return state;\r\n    }\r\n  };","const initialState = \"\";\r\n\r\nconst authorize = (state = initialState, action) => {\r\n\r\n  switch(action.type){\r\n    case \"superHost\":\r\n      console.log(\"make super HOST\", action.payload);\r\n      state = action.payload;\r\n      return state;\r\n\r\n    case \"audience\":\r\n      state = initialState;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport default authorize;","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR,\r\n    QUESTIONLIST_DELETE\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//���༭\r\nconst questionlist = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case QUESTIONLIST_GET_PENDING:\r\n            console.log(\"PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case QUESTIONLIST_GET_SUCCESS:\r\n            console.log(\"SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case QUESTIONLIST_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case QUESTIONLIST_DELETE:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default questionlist;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR,\r\n    ENTEREDSESSION_DELETE,\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//����??����\r\nconst enteredSession = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENTEREDSESSION_GET_PENDING:\r\n            console.log(\"EnteredSession PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ENTEREDSESSION_GET_SUCCESS:\r\n            console.log(\"EnteredSession SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case ENTEREDSESSION_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case ENTEREDSESSION_DELETE:\r\n            return {\r\n                ...state,\r\n                ...initialState,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default enteredSession;","import { \r\n    ALL_USERS_GET_PENDING,\r\n    ALL_USERS_GET_SUCCESS,\r\n    ALL_USERS_GET_FAILURE \r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst allUsers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ALL_USERS_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ALL_USERS_GET_SUCCESS:\r\n            const allUserInfo = action.payload; // 경로 수정 필요할수도\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: allUserInfo\r\n            };\r\n        case ALL_USERS_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default allUsers;","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport user from './user';\r\nimport session from './session';\r\nimport mySession from './mySession';\r\nimport messages from './messages';\r\nimport authorize from './authorize';\r\nimport questionlist from './questionlist';\r\nimport enteredSession from './enteredSession'\r\nimport allUsers from './allUsers';\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n    user,\r\n    allUsers,\r\n    session,\r\n    mySession,\r\n    messages,\r\n    authorize,\r\n    questionlist,\r\n    enteredSession,\r\n});\r\n\r\nexport default rootReducer;","import reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport axios from 'axios';\r\n\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n// axios.defaults.headers.common['X-CSRFToken'] = getCookie(\"csrftoken\");\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>        \r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}