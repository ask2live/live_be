{"version":3,"sources":["reportWebVitals.js","reducers/counter.js","components/Nav.js","actions/types.js","actions/UserActions.js","components/onBoard/LoginPage.js","containers/NavContainer.js","actions/SessionActions.js","actions/QuestionListActions.js","components/sessionCard/CurrentReserveSessionsCards.js","components/sessionCard/OtherLiveSessionsCards.js","components/sessionCard/MyLiveSessionsCards.js","components/sessionCard/HostConfirmedSessionsCards.js","components/SessionCreateButton.js","components/ProfileEditButton.js","containers/SessionCardContainer.js","components/mypage/ProfileGate.js","components/mypage/MypageNav.js","components/mypage/Mypage.js","actions/SessionToReserveActions.js","components/mypage/SessionConfirm.js","components/mypage/MypageLiveSession.js","components/mypage/MypageConfirmedSession.js","containers/MypageContainer.js","containers/SessionCreateContainer.js","components/mypage/ProfileDetail.js","components/mypage/MypageEdit.js","components/sessionCard/PreQuestionNav.js","components/sessionCard/PreQuestions.js","actions/EnteredSessionActions.js","components/liveSession/Participant.js","components/liveSession/ParticipantList.js","components/liveSession/StringQuestion.js","components/Avatar.js","components/liveSession/VoiceQuestion.js","components/liveSession/CurrentQuestion.js","components/liveSession/Question.js","components/liveSession/QuestionSwiper.js","components/liveSession/QuestionList.js","components/liveSession/Questioning.js","components/liveSession/InsertField.js","components/liveSession/chatting/Message.js","components/liveSession/chatting/EmptyScreen.js","components/liveSession/chatting/Chat.js","actions/MessagesActions.js","environment.js","components/liveSession/agora/MediaPlayer.js","components/liveSession/agora/PlayerWrapper.js","components/liveSession/LiveSession.js","components/liveSession/agora/useAgora.js","components/JoinCard.js","containers/LiveSessionContainer.js","components/ReserveToLive.js","containers/SessionMatchContainer.js","actions/AllUsersActions.js","hoc/auth.js","App.js","reducers/user.js","reducers/session.js","reducers/mySession.js","reducers/messages.js","reducers/authorize.js","reducers/questionlist.js","reducers/enteredSession.js","reducers/allUsers.js","reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INCREMENT","DECREMENT","counterReducer","state","action","type","MyPageIcon","Person","HomeIcon","Home","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","title","flexGrow","appBar","top","bottom","left","right","margin","backgroundColor","borderRadius","width","maxWidth","zIndex","NavOfGuest","classes","history","useHistory","AppBar","className","Grid","container","justify","alignItems","Toolbar","IconButton","color","aria-label","onClick","push","NavOfUser","user","data","detail","useDispatch","style","borderSpacing","padding","fontSize","ON_MESSAGES_VALUE_CHANGE","ON_MESSAGES_READING","ON_MESSAGES_READ","USER_GET_PENDING","USER_GET_SUCCESS","USER_GET_FAILURE","ALL_USERS_GET_PENDING","ALL_USERS_GET_SUCCESS","ALL_USERS_GET_FAILURE","QUESTIONLIST_GET_PENDING","QUESTIONLIST_GET_SUCCESS","QUESTIONLIST_GET_ERROR","SETLIVE","SESSION_GET_PENDING","SESSION_GET_SUCCESS","SESSION_GET_FAILURE","MY_SESSION_GET_PENDING","MY_SESSION_GET_SUCCESS","MY_SESSION_GET_FAILURE","ENTEREDSESSION_GET_PENDING","ENTEREDSESSION_GET_SUCCESS","ENTEREDSESSION_GET_ERROR","getUserInfo","token","dispatch","console","log","config","headers","Authorization","axios","get","userGetApi","response","payload","catch","error","Alert","elevation","variant","defaults","xsrfCookieName","xsrfHeaderName","marginTop","list","palette","background","paper","login","position","loginWrapper","height","loginCard","border","boxShadow","paddingTop","loginBtnWrapper","loginBtn","infoIcon","cursor","logo","backgroundImage","backgroundPosition","backgroundSize","LoginPage","localStorage","useState","loginId","setLoginId","loginPassword","setLoginPassword","open","setOpen","openTwo","setOpenTwo","handleClose","event","reason","handleCloseTwo","Login","a","dataToSubmit","username","password","post","res","setItem","location","before","err","marginBottom","TextField","size","id","label","onChange","value","Snackbar","autoHideDuration","onClose","severity","NavContainer","useSelector","getSessionInfo","getUserSessionInfo","userSessionGetApi","getQuestionlist","holeId","getApi","display","flexWrap","justifyContent","minWidth","content","date","work_field","marginLeft","wish","questions","questionIcon","avatarWrapper","transform","avatar","check","chipGrid","progress","wishButton","textAlign","onClickWish","sessionId","patch","e","alert","onClickWishCancel","CurrentReserveSessionsCards","currentReserveSessions","map","session","Paper","strokeWidth","strokeColor","gapDegree","format","percent","Avatar","src","host_profile_image","success","hole_reservations","Math","ceil","guests","length","target_demand","Chip","Typography","component","host_username","host_work_company","host_work_field","item","reserve_date","count_questions","Button","clickable","startIcon","Object","keys","indexOf","setTimeout","borderBottom","bullet","paddingBottom","pos","avatarRoot","small","large","imageWrapper","float","paddingRight","contentTime","contentTitle","textOverflow","contentName","contentField","buttonWrapper","overflow","profileimage","livelogo1","livelogo1_back","OtherLiveSessionsCards","otherLiveSessions","setTitle","subtitle","setSubtitle","now","Date","Card","CardContent","pathname","search","livehole_id","hostName","hostImage","alt","count_participant","description","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","cardContent","cookieWrapper","backgroundRepeat","useCookie","living","contentWrapper","whiteSpace","contentWork","live2","MyLiveSessionsCard","React","MyLiveSessionsCards","myLiveSessions","HostConfirmedSessionsCards","hostConfirmedSessions","reserveDate","setReserveDate","toDate","posision","paddingLeft","textWrap","balloonWhite","balloonColor","mike","SessioinCreateButton","noMyLive","profileBalloon","ProfileEditButton","hosts","mainLogo","mainOragne","descript","descript2","cookie1","cookie2","button","buttonIcon","fontColor","buttonText","align","fontWeight","swiperLeft","swiperLeftHidden","swiperRight","swiperRightHidden","logOut","SessionCardContainer","userDetail","setFlag","sessions","allUsersData","allUsers","mySession","clear","replace","status","candidate","hole_open_auth","cnt","swiperCnt","setSwiperCnt","Logout","toString","where","swipping","prev","Divider","profile","ProfileGate","CardActionArea","CardHeader","profile_image","fontFamily","borderbox","text","MypageNav","goBack","my","myBottomCard","MyPage","xs","postSessionToReserve","font","font2","font3","SessionConfirm","goListUp","goDark","handleClick","substring","animation","layerfordark","minHeight","opacity","MypageLiveSession","listup","setListUp","dark","setDark","onDelete","delete","subheader","parseInt","host","CardActions","borderColor","MypageConfirmedSession","nested","listcenter","MyPageContainer","render","setRender","wishSessions","useEffect","myDoneSessions","myWishSessions","myConfirmSessions","my_hole","reservation_status","wish_hole","openDone","setOpenDone","openWish","setOpenWish","openConfirm","setOpenConfirm","Mypage","ListItem","ListItemIcon","ListItemText","primary","Collapse","timeout","unmountOnExit","List","disablePadding","flexDirection","form","submit","SessionCreateContainer","URLSearchParams","routerInfo","slice","titleValid","setTitleValid","setDescription","descriptionValid","setDescriptionValid","reserveDateValid","setReserveDateValid","count","setCount","split","disable","setDisable","Container","butterBottom","required","fullWidth","name","helperText","placeholder","autoFocus","InputLabelProps","shrink","cur_date","getTime","justifyContents","inputProps","min","multiline","rows","disabled","root2","work_company","bio","editWrapper","pointerEvents","editBtn","ProfileDetail","editFlag","buttonGroup","file","MypageEdit","image","setImage","inputs","setInputs","useCallback","files","preventDefault","formData","FormData","append","resPatch","resGet","defaultValue","MyQuestionCards","myQuestions","questionlist","userId","questionsList","question","questionAuthor","light","MyQuestionSend","ask","setAsk","postApi","isVoice","askValue","is_answered","is_voice","maxLength","insert","submitbtn","iconButton","QuestionCard","card","user_username","TabPanel","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","borderTop","borderLeft","borderRight","PreQuestionNav","setValue","Tabs","newValue","href","circleStyle","CircularProgressWithLabel","CircularProgress","thickness","SessionDetail","hole","current","ListPreQuestions","PreQuestions","targetSession","getEnteredSession","channelNum","participant","tmp","follow","Participant","nickName","workCompany","workField","participantlist","ParticipantList","participants","enteredSession","arrived","profileImage","profile_image_url","cloud","audience1","audience2","StringQuestion","dst","questionStr","userQuestion","questionStrAry","lastIndexOf","maxNum","userNickName","isHost","onAnswered","currentQuestionId","questionUnit","circle","UserAvatar","imageLink","VoiceQuestion","click","setClick","clickStyle","setClickStyle","sendP2PMessage","recipientUID","peerMsg","remoteUID","String","rtmClient","sendMessageToPeer","sendResult","hasPeerReceived","userUid","wait","CurrentQuestion","questionPatchApi","questionId","forQuestionidx","questionList","findIndex","questionResponse","questionIdx","currentQuestion","user_uid","client","localAudioTrack","remoteUsers","myPaper","otherPaper","SimplePaper","isFirst","myQuestion","userName","nav","QuestionList","click1","setClick1","click2","setClick2","questionAry","myName","questionInfo","questionbutton","Questioning","voice","setVoice","queStyle","setQueStyle","myInfo","Checkbox","prevVoice","onKeyPress","key","openQuestionAlert","goQueUp","Width","input","flex","divider","questioningBtn","questionListBtn","participantBtn","CustomizedInputBase","InputBase","message","goSetMessage","goMessageSend","goUserUp","iconButton2","Message","memo","sender","sent_timestamp","wordBreak","EmptyScreen","containerStyle","Empty","PRESENTED_IMAGE_SIMPLE","InsertfieldWrapper","justifyContainer","Insertfield","connect","messages","onRoomMessagesRead","socket","ReconnectingWebSocket","protocol","WS_ENDPOINT","debug","onopen","onerror","onmessage","JSON","parse","onclose","currentUrl","roomId","scrollToBottom","element","document","querySelector","scrollTop","scrollHeight","loading","hasMore","setMessage","roomSocket","setRoomSocket","loadingChat","room","windowHeight","onBack","close","Fragment","itemLayout","dataSource","renderItem","borderWidth","send","stringify","command","MediaPlayer","audioTrack","Authorize","setEnabled","play","stop","withRouter","joinState","uid","StyledBadge","withStyles","badge","Badge","livewrapper","livesession","session_top","session_mid","session_bottom","table","td1","td2","lavel","font_size","checkIcon","tablecell","verticalAlign","listbutton","closeBtn","linkBtnWrap","linkBtn","AgoraRTC","createClient","codec","mode","AgoraRTM","createInstance","LiveSession","hostPostApi","hostUid","channel_num","host_uid","audiencePutApi","audienceUid","put","leavePatchApi","queUp","setQueUp","userUp","setUserUp","setRoom","questionAlert","setOuestionAlert","copiedAlert","setCopiedAlert","hostExit","setHostExit","closeQuestionAlert","closeCopiedAlert","partiNum","holeInfo","livehole","host_profile_image_url","rtmChannel","appid","setLocalAudioTrack","setJoinState","setRemoteUsers","authority","createLocalTracks","createMicrophoneAudioTrack","MicrophoneAudioTrackInitConfig","microphoneTrack","channel","join","on","newState","msg","peerId","publish","unpublish","leave","handleUserPublished","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","off","useAgora","liveInter","setInterval","getQuestionList","createChannel","memberId","logout","clearInterval","unblock","block","sendMessage","colspan","holeTitle","rowspan","onCopy","badgeContent","details","cover","controls","playIcon","mikeBtn","liveBtn","useTheme","setMike","getMike","navigator","mediaDevices","getUserMedia","audio","stream","joinPass","setJoin","LiveSessionContainer","ReserveToLive","channelNumAry","floor","random","SessionMatchContainer","match","setMatch","sessionKind","params","urlSearchParams","currUser","SpecialComponent","option","AuthenticateCheck","isLoggedIn","getItem","App","exact","path","Auth","MypageContainer","initialState","pending","userInfo","sessionInfo","isLive","livestate","INITIAL_STATE","authorize","allUserInfo","rootReducer","combineReducers","counter","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","getElementById"],"mappings":";qJAAA,IAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+CCNRQ,EAAY,2BACZC,EAAY,2BAyBHC,EAfQ,WAAmC,IAAlCC,EAAiC,uDAHpC,EAGyBC,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKL,EACD,OAAOG,EAAQ,EACnB,KAAKF,EACD,OAAIE,EAAQ,EACDA,EAAQ,EAERA,EAEf,QACI,OAAOA,I,oICJZG,EAAyBC,IAAbC,EAAqBC,IAExC,SAASC,EAAaC,GAAQ,IACpBC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAIZC,EAAUC,YAAiB,CAAEC,OAAQH,EAASA,SAAWI,IAE/D,OACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,KAAKC,IAAKP,EAA1C,SACGF,IAUP,IAAMU,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,GAGNC,WAAY,CACRC,YAAaH,EAAMI,QAAQ,IAE/BC,MAAO,CACHC,SAAU,GAEdC,OAAQ,CACJC,IAAK,OACLC,OAAQ,KACRC,KAAO,IACPC,MAAO,IACPC,OAAS,OACTC,gBAAiB,UACjBC,aAAc,OACdC,MAAO,MACPC,SAAU,OACVC,OAAQ,SAKVC,EAAa,SAAC/B,GAChB,IAAMgC,EAAUrB,IACVsB,EAAUC,cAGlB,OACE,qCAEE,cAACnC,EAAD,2BAAkBC,GAAlB,aACE,cAACmC,EAAA,EAAD,CAAQC,UAAWJ,EAAQZ,OAA3B,SACI,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAA5C,SACA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAaC,MAAM,UAAUC,aAAW,OAAxC,SACI,cAAC/C,EAAD,MAEJ,cAAC6C,EAAA,EAAD,CAAaC,MAAM,UAAUC,aAAW,QAAQC,QAAS,WACjDZ,EAAQa,KAAK,WADrB,SAGI,cAAC,IAAD,gBAMd,cAACL,EAAA,EAAD,QAcAM,EAAY,SAAC/C,GAEFA,EAAMgD,KAAKC,KAAKC,OAA7B,IAEMlB,EAAUrB,IAGVsB,GAFWkB,cAEDjB,eAGlB,OACE,qCAEE,cAACnC,EAAD,2BAAkBC,GAAlB,aACE,cAACmC,EAAA,EAAD,CAAQC,UAAWJ,EAAQZ,OAA3B,SACI,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAA5C,SACA,cAACC,EAAA,EAAD,UACA,wBAAOW,MAAO,CAACC,cAAgB,aAA/B,UACI,+BACI,6BACA,cAAChB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAA5C,SACI,cAACE,EAAA,EAAD,CAAYU,MAAO,CAACE,QAAS,KAAQX,MAAM,UAAUC,aAAW,OAAhE,SACI,cAAC/C,EAAD,CAAUgD,QAAS,WACnBZ,EAAQa,KAAK,cAIrB,6BACA,cAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAA5C,SACI,cAACE,EAAA,EAAD,CAAYU,MAAO,CAACE,QAAS,KAAQX,MAAM,UAAUC,aAAW,SAAhE,SACI,cAACjD,EAAD,CAAYkD,QAAU,WACtBZ,EAAQa,KAAK,uBAiBzB,+BACI,oBAAIM,MAAO,CAACG,SAAW,SAAvB,kBACA,oBAAIH,MAAO,CAACG,SAAW,SAAvB,mCAQd,cAACd,EAAA,EAAD,Q,6EChKOe,G,MAA2B,4BAC3BC,EAAsB,sBACtBC,EAAmB,mBAGnBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAmB,mBAInBC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAA2B,wCAC3BC,EAA2B,wCAC3BC,GAAyB,sCAEzBC,GAAU,kBACVC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAsB,sBAGtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAyB,yBAGzBC,GAA6B,4CAC7BC,GAA6B,4CAC7BC,GAA2B,0CClBjC,IAEMC,GAAc,SAAAC,GAAK,OAAI,SAAAC,GAKhC,OAJAC,QAAQC,IAAI,+BAVhB,SAAoBH,GAChB,IAAMI,EAAS,CACHC,QAAS,CAAEC,cAAe,SAAWN,IAEjD,OAAOO,IAAMC,IAAI,wCAAyCJ,GAUnDK,CAAWT,GAAOhG,MACrB,SAAC0G,GACGT,EAAS,CAAEtF,KAAMkE,EAAkB8B,QAASD,OAElDE,OAAM,SAAAC,GACJZ,EAAS,CAAEtF,KAAMmE,EAAkB6B,QAASE,SCPpD,SAASC,GAAM7F,GACX,OAAO,cAAC,IAAD,aAAU8F,UAAW,EAAGC,QAAQ,UAAa/F,IAJxDsF,IAAMU,SAASC,eAAiB,YAChCX,IAAMU,SAASE,eAAiB,cAMdtF,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJc,MAAO,OACP,YAAa,CACXuE,UAAWtF,EAAMI,QAAQ,IAE3B,uBAAwB,CACtBW,MAAO,QAET,QAAS,IAGXwE,KAAM,CACFxE,MAAO,OACPC,SAAU,IACVH,gBAAiBb,EAAMwF,QAAQC,WAAWC,WAfhD,IAmBMnD,GAAQ,CACVoD,MAAQ,CACJC,SAAW,WACXpF,IAAM,OAEVqF,aAAe,CACXD,SAAW,QACX/E,gBAAkB,QAClBE,MAAQ,OACR+E,OAAS,QAEbC,UAAY,CACRvF,IAAM,MAENwF,OAAQ,kBACRlF,aAAc,OACdmF,UAAW,wBACXC,WAAY,MACZlF,SAAW,OACXD,MAAQ,OACR+E,OAAS,OACTF,SAAW,SAEfO,gBAAkB,CACdP,SAAU,WACVpF,IAAM,MACNK,gBAAiB,QACjBC,aAAc,OACdgB,MAAO,SAEXsE,SAAW,CAEPvF,gBAAiB,QACjBC,aAAc,OACdgB,MAAO,SAEXuE,SAAW,CACPvE,MAAO,OACP8D,SAAU,WACVpF,IAAK,MACLG,MAAO,KACP2F,OAAQ,WAEZC,KAAO,CACHT,OAAQ,QACR/E,MAAQ,QACRyF,gBAAgB,0BAChBC,mBAAoB,SACpBC,eAAgB,YAgJTC,GA5IG,SAACxH,GACf,IAAMiC,EAAUC,cACZuF,aAAa1C,OACf9C,EAAQa,KAAK,SAHU,MAMK4E,mBAAS,IANd,mBAMlBC,EANkB,KAMTC,EANS,OAOiBF,mBAAS,IAP1B,mBAOlBG,EAPkB,KAOHC,EAPG,OAQDJ,oBAAS,GARR,mBAQlBK,EARkB,KAQZC,EARY,OASKN,oBAAS,GATd,mBASlBO,EATkB,KASTC,EATS,KAenBC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJL,GAAQ,IAOJM,EAAiB,SAACF,EAAOC,GACd,cAAXA,GAGJH,GAAW,IAIPlD,EAAW7B,cAeXoF,EAAK,uCAAG,iCAAAC,EAAA,sDAAOb,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,cACxBY,EAAe,CACjBC,SAAWf,EACXgB,SAAWd,GAEbvC,IAAMsD,KAAK,yCACXH,GACE1J,MAAK,SAAC8J,GACN5D,QAAQC,IAAI,MAAO2D,GACnB3I,OAAOuH,aAAaqB,QAAQ,QAASD,EAAI5F,KAAKC,OAAO6B,OACrDC,EAASF,GAAY+D,EAAI5F,KAAKC,OAAO6B,QACrCE,QAAQC,IAAI2D,GACR7I,EAAM+I,SAASC,OACf/G,EAAQa,KAAK9C,EAAM+I,SAASC,QAE5B/G,EAAQa,KAAK,YAChB6C,OACD,SAACsD,GAtDDjB,GAAQ,MAqCE,2CAAH,sDAoBX,OACI,mCACI,sBAAK5E,MAAOA,GAAMsD,aAAlB,UACI,cAACrE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,sBAAKa,MAAOA,GAAMwD,UAAlB,UACI,eAACvE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACK,mBAAGa,MAAO,CAAC3B,OAAS,gBAAkB8B,SAAU,SAAUnB,UAAU,WAApE,iBAID,qBAAKgB,MAAOA,GAAMgE,OAGlB,mBAAGhE,MAAO,CAAC3B,OAAS,gBAAkB8B,SAAU,SAAUnB,UAAU,WAApE,qBAEJ,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,mBAAGH,UAAU,eAAegB,MAAO,CAAC8F,aAAa,IAAI3F,SAAW,SAAhE,iGAEJ,cAAClB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,mBAAGH,UAAU,eAAegB,MAAO,CAAC+C,UAAW,MAAO5C,SAAW,SAAjE,8GAEJ,qBAAKH,MAAOA,GAAMoD,MAAlB,SACI,eAACnE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACI,cAAC4G,EAAA,EAAD,CACAC,KAAK,MACLhG,MAAQ,CAAC8F,aAAe,OACxBG,GAAG,kBAAkBC,MAAM,qBAAM5J,KAAK,SAASqG,QAAQ,WACvDwD,SAAU,SAACnB,GAAD,OAAWR,EAAWQ,EAAM/H,OAAOmJ,UAE7C,cAACL,EAAA,EAAD,CACAE,GAAG,kBAAkBC,MAAM,2BAAO5J,KAAK,WAAWqG,QAAQ,WAC1DwD,SAAU,SAACnB,GAAD,OAAWN,EAAiBM,EAAM/H,OAAOmJ,eAK3D,cAACnH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,qBAAKa,MAAOA,GAAM4D,gBAAlB,SACI,wBAAQ5D,MAAOA,GAAM6D,SAAUpE,QAAS,kBAAM0F,EAAM,CAACZ,UAASE,mBAA9D,SACI,sBAAMzE,MAAO,CAACG,SAAU,SAAUnB,UAAU,QAA5C,sCAKZ,cAAC,IAAD,CACAS,QA5FG,WACnBqF,GAAW,IA4FK9E,MAAOA,GAAM8D,gBAGrB,cAACuC,EAAA,EAAD,CAAU1B,KAAMA,EAAM2B,iBAAkB,IAAMC,QAASxB,EAAvD,SACI,cAAC,GAAD,CAAOwB,QAASxB,EAAayB,SAAS,QAAtC,2FAIJ,cAACH,EAAA,EAAD,CACArG,MAAO,CAACqD,SAAS,QAASpF,IAAK,OAC/B0G,KAAME,EAASyB,iBAAkB,IAAMC,QAASrB,EAFhD,SAGI,eAAC,GAAD,CACAlF,MAAO,CAAC1B,gBAAgB,SACxBiI,QAASrB,EAAgBsB,SAAS,QAFlC,iFAGa,uBAHb,6EAIc,uBAJd,6CCtMLC,GAZM,WACjB,IAAM7G,EAAO8G,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,QACxBd,cAEhB,OAAIc,EAAKC,KAAKC,OACH,cAAC,EAAD,CAAWF,KAAMA,IAEjB,cAAC,EAAD,CAAYA,KAAMA,K,SCQ1B,IAAM+G,GAAiB,kBAAM,SAAA/E,GAKhC,OAJAC,QAAQC,IAAI,kCACZF,EAAS,CAACtF,KAAM2E,KAdTiB,IAAMC,IAAI,oCAiBMxG,MACnB,SAAC0G,GACGT,EAAS,CAAEtF,KAAM4E,GAAqBoB,QAASD,OAErDE,OAAM,SAAAC,GACJZ,EAAS,CAAEtF,KAAM6E,GAAqBmB,QAASE,SAI1CoE,GAAqB,SAAAjF,GAAK,OAAI,SAAAC,GAKvC,OAJAC,QAAQC,IAAI,sCACZF,EAAS,CAACtF,KAAM8E,KAzBpB,SAA2BO,GACvB,IAAMI,EAAS,CACXC,QAAS,CAACC,cAAe,SAAWN,IAExC,OAAOO,IAAMC,IAAI,6CACbJ,GAuBG8E,CAAkBlF,GAAOhG,MAC5B,SAAC0G,GACGT,EAAS,CAAEtF,KAAM+E,GAAwBiB,QAASD,OAExDE,OAAM,SAAAC,GACJZ,EAAS,CAAEtF,KAAMgF,GAAwBgB,QAASE,S,qECvC1D,IAeesE,GAfS,SAAAC,GAAM,OAAI,SAAAnF,GAK9B,OAJAC,QAAQC,IAAI,6BACZF,EAAS,CAACtF,KAAMuE,IANpB,SAAgBkG,GACZ,OAAO7E,IAAMC,IAAI,oCAAsC4E,EAAS,cAQzDC,CAAOD,GAAQpL,MAClB,SAAC0G,GACGR,QAAQC,IAAIO,GACZT,EAAS,CAAEtF,KAAMwE,EAA0BwB,QAASD,OAE1DE,OAAM,SAAAC,GACJZ,EAAS,CAAEtF,KAAMyE,GAAwBuB,QAASE,S,yECOpDjF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJuJ,QAAS,OACTC,SAAU,OACVnJ,SAAU,EACVoJ,eAAiB,SACjB1I,SAAS,OAET,QAAS,CACPJ,OAAQ,gBACRG,MAAOf,EAAMI,QAAQ,IACrB0F,OAAQ9F,EAAMI,QAAQ,MAG1BsF,MAAO,CACL8D,QAAQ,OACRE,eAAe,SACfxD,WAAY,QACZlF,SAAU,OACV2I,SAAU,OACVrD,OAAO,WAGTjG,MAAO,CACLU,MAAO,OACPyI,QAAQ,OACRE,eAAe,UAGjBE,QAAS,CACP7I,MAAO,MACP6E,SAAU,WACVpF,IAAK,OAIPqJ,KAAM,CACJjE,SAAU,WACVpF,IAAK,OACLgJ,QAAS,gBAEXM,WAAY,CACVpH,SAAS,WACTqH,WAAY,OAEdC,KAAM,CACJtH,SAAS,UACTqH,WAAY,SAEdE,UAAW,CACTvH,SAAS,UACTqH,WAAY,SAEdG,aAAe,CACbH,WAAY,SAEdI,cAAgB,CACdX,QAAS,QACTO,WAAY,OACZ5J,YAAa,OACbiK,UAAW,uBAEbC,OAAS,CACPtJ,MAAOf,EAAMI,QAAQ,IACrB0F,OAAQ9F,EAAMI,QAAQ,KAIxBkK,MAAQ,CACN1E,SAAU,WACVM,WAAY,QAGdqE,SAAW,CACTxJ,MAAO,OACP6E,SAAU,WACVM,WAAY,SAEdsE,SAAW,GAGXC,WAAa,CACX1J,MAAM,MACN+E,OAAQ,OACR4E,UAAW,SACX7J,gBAAiB,UACjByE,UAAW,WAOXqF,GAAc,SAACC,GACnB,IAAMtG,EAAS,CACbC,QAAS,CAAC,cAAiB,SAAWqC,aAAa1C,QAKrDO,IAAMoG,MACJ,gDAAkDD,EAAY,QAJnD,CACXxI,KAAM,IAKNkC,GACApG,MAAK,SAAC0G,GACNR,QAAQC,IAAI,wCAAqBO,MAChCE,OAAM,SAACgG,GACR1G,QAAQC,IAAI,QAAQyG,EAAElG,UACtBmG,MAAMD,EAAElG,SAASxC,KAAKC,YAIpB2I,GAAoB,SAACJ,GACzB,IAAMtG,EAAS,CACbC,QAAS,CAAC,cAAiB,SAAWqC,aAAa1C,QAMrDO,IAAMoG,MACJ,gDAAkDD,EAAY,cALnD,CACXxI,KAAM,IAMNkC,GACApG,MAAK,SAAC0G,GACNR,QAAQC,IAAI,6CAA0BO,MACrCE,OAAM,SAACgG,GACR1G,QAAQC,IAAI,QAAQyG,EAAElG,UACtBmG,MAAMD,EAAElG,SAASxC,KAAKC,YAuJX4I,GAnJqB,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,uBACpC9G,QAAQC,IAAI,6EAEV,IAAMF,EAAW7B,cACXlB,EAAUC,cACVF,EAAUrB,KACVqC,EAAO8G,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,QAExC,OACI,qCACCiC,QAAQC,IAAI,mCACb,qBAAK9C,UAAWJ,EAAQlB,KAAxB,SACKiL,EAAuBC,KAAI,SAACC,GAAD,OACxB,qCACChH,QAAQC,IAAI+G,GACb,cAACC,GAAA,EAAD,CAAO9J,UAAWJ,EAAQuE,MAAO1D,QAAS,WACxCZ,EAAQa,KAAK,iBAAiBmJ,EAAQ5C,IACtCrE,EAASkF,GAAgB+B,EAAQ5C,MAFnC,SAIA,eAAChH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAAC,KAAD,CACEH,UAAWJ,EAAQqJ,SACnBc,YAAY,IACZzM,KAAK,YACL0M,YAAY,UACZC,UAAY,KACZzK,MAAO,IACP0K,OAAQ,SAAAC,GACN,OAAc,KAAXA,EAEC,qCACA,qBAAKnK,UAAWJ,EAAQgJ,cAAxB,SACE,cAACwB,GAAA,EAAD,CAAQpK,UAAWJ,EAAQkJ,OAAQuB,IAAG,iCAA4BR,EAAQS,wBAE5E,cAAC,KAAD,CAAWtD,KAAK,QAAQhG,MAAO,CAACG,SAAU,KAAOkD,SAAS,WAAYpF,IAAI,KAAME,KAAK,MAAOoB,MAAM,aAMlG,mCAEA,qBAAKP,UAAWJ,EAAQgJ,cAAxB,SACE,cAACwB,GAAA,EAAD,CAAQpK,UAAWJ,EAAQkJ,OAAQuB,IAAG,iCAA4BR,EAAQS,2BAOlFC,QAAW,CAACP,YAAY,QACxBG,QAAUN,EAAQW,kBACVC,KAAKC,KACHb,EAAQW,kBAAkBG,OAAOC,OAASf,EAAQW,kBAAkBK,eAAiB,EACrFhB,EAAQW,kBAAkBG,OAAOC,OAASf,EAAQW,kBAAkBK,cAAgB,IAAM,KAAO,IAUrG,cAAC5K,EAAA,EAAD,CAAMC,WAAS,EAACF,UAAWJ,EAAQoJ,SAAU7I,QAAQ,SAASC,WAAW,SAAzE,SACE,cAAC0K,GAAA,EAAD,CACE9D,KAAK,QACLzG,MAAM,UACN2G,MAAO,mCACT,uBAAMlH,UAAU,eAAhB,UAA2E,GAA3C6J,EAAQW,kBAAkBK,cACxD,IAAMJ,KAAKC,KAAKb,EAAQW,kBAAkBG,OAAOC,OAASf,EAAQW,kBAAkBK,cAAgB,KADtG,yBAKJ,eAAC5K,EAAA,EAAD,CAAME,QAAQ,aAAaH,UAAWJ,EAAQyI,QAA9C,UACI,sBAAMrI,UAAU,eAAhB,SACK6J,EAAQ/K,QAEb,eAACiM,GAAA,EAAD,CAAYpH,QAAQ,UAAUqH,UAAU,MAAMzK,MAAM,gBAApD,UACCsJ,EAAQoB,cAAepB,EAAQoB,cAAgB,eAChD,uBAAMjL,UAAWJ,EAAQ2I,WAAzB,UACCsB,EAAQqB,kBAAmBrB,EAAQqB,kBAAoB,IACvDrB,EAAQsB,gBAAiB,MAAMtB,EAAQsB,gBAAkB,UAG1D,eAAClL,EAAA,EAAD,CAAMmL,MAAI,EAACpL,UAAWJ,EAAQ0I,KAA9B,UACA,eAACyC,GAAA,EAAD,CAAYpH,QAAQ,UAAUqH,UAAU,IAAxC,UACE,sBAAMhL,UAAU,eAAhB,uCACF,cAAC,KAAD,CAAQkK,OAAO,cAAf,SACGL,EAAQwB,kBAKX,eAACpL,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,UAA3B,UACA,qBAAKY,MAAO,CAACT,MAAM,UAAWoE,WAAW,SAAzC,SAAmD,cAAC,KAAD,CAAoBxD,SAAS,YAChF,mBAAGnB,UAAWJ,EAAQ6I,KAAtB,SACA,uBAAMzI,UAAU,eAAhB,oBAAkC6J,EAAQW,kBAAkBG,OAAOC,OAAnE,IAA4Ef,EAAQW,kBAAkBK,mBAEtG,qBAAK7K,UAAWJ,EAAQ+I,aAAc3H,MAAO,CAACT,MAAM,UAAWoE,WAAW,SAA1E,SAAoF,cAAC,KAAD,CAAaxD,SAAS,YAC1G,mBAAGnB,UAAWJ,EAAQ8I,UAAtB,SACA,uBAAM1I,UAAU,eAAhB,0BAAmC6J,EAAQyB,gBAA3C,uBAMJ,cAACrL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACoL,GAAA,EAAD,CACAvL,UAAWJ,EAAQsJ,WACnBvF,QAAQ,YACRpD,MAAM,UACNiL,UAAU,OACVC,UAAW,cAAC,KAAD,CAAoBtK,SAAS,UACxCV,QAAS,WAC8B,IAAlCiL,OAAOC,KAAK/K,EAAKC,MAAM+J,OACxBpB,MAAM,6DAE6D,IAAnEK,EAAQW,kBAAkBG,OAAOiB,QAAQhL,EAAKC,KAAKC,OAAOmG,KAC5D,WACCmC,GAAYS,EAAQ5C,IACpB4E,YAAY,kBAAKjJ,EAAS+E,QAAmB,OAG9C,WACC8B,GAAkBI,EAAQ5C,IAC1B4E,YAAY,kBAAKjJ,EAAS+E,QAAmB,OAlBhD,SAuBqC,GAAjC+D,OAAOC,KAAK/K,EAAKC,MAAM+J,SAAiF,GAAlEf,EAAQW,kBAAkBG,OAAOiB,QAAQhL,EAAKC,KAAKC,OAAOmG,IAAY,2BAAS,yBAE3H,6BAKR,mC,8DCxRhB,SAASxD,GAAM7F,GACX,OAAO,cAAC,IAAD,aAAU8F,UAAW,EAAGC,QAAQ,UAAa/F,IAGxD,IAAMW,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJc,MAAO,OACPsM,aAAe,sBACf5K,QAAS,MACT3B,aAAc,OACdmF,UAAW,wBACXpF,gBAAkB,sBAClByF,OAAS,WAEXgH,OAAQ,CACN9D,QAAS,eACT5I,OAAQ,SACRwJ,UAAW,cAEb/J,MAAO,CACLqC,SAAU,GACV3B,MAAO,OACPyI,QAAQ,OACRE,eAAe,SACf6D,cAAe,OAGjBC,IAAK,CACHnF,aAAc,IAEhB/B,OAAQ,CACJA,OAAQ,WAEZ7D,QAAU,CACRA,QAAS,MAEXgL,WAAY,CACVjE,QAAS,OACT,QAAS,CACP5I,OAAQZ,EAAMI,QAAQ,KAG1BsN,MAAO,CACL3M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,IAExBuN,MAAO,CACL5M,MAAOf,EAAMI,QAAQ,IACrB0F,OAAQ9F,EAAMI,QAAQ,IACtB4F,OAAS,iCAKPzD,GAAQ,CACVqL,aAAe,CACXpE,QAAU,eACVzI,MAAQ,MACR+E,OAAS,QAGb8D,QAAU,CACNJ,QAAU,eACVqE,MAAQ,QACR9M,MAAQ,MACR+E,OAAS,OACTgI,aAAc,OAGlBC,YAAa,CACTvE,QAAS,OACTE,eAAgB,QAChB/H,WAAY,SACZ2D,UAAW,MACXvE,MAAQ,UACR+E,OAAS,SAGbkI,aAAc,CACVjN,MAAQ,MACR+E,OAAS,MACTmI,aAAc,WAEdrN,OAAQ,mBAEZsN,YAAa,CACTnN,MAAQ,UACR+E,OAAS,QACTuC,aAAe,OAGnB8F,aAAc,CACVpN,MAAQ,UACR+E,OAAS,SAGbsI,cAAgB,CACZrN,MAAQ,MACR+E,OAAS,MAETuI,SAAU,QAEdC,aAAe,CACXvN,MAAQ,MACR+E,OAAS,OAEbyI,UAAW,CACP/H,gBAAkB,4BAClBE,eAAiB,UACjB3F,MAAQ,OACR+E,OAAQ,OACRsE,UAAW,2BACXnJ,OAAS,KAEbuN,eAAgB,CACZ3N,gBAAiB,QACjB6F,eAAiB,UACjB3F,MAAQ,OACR+E,OAAQ,OACRsE,UAAW,yBACXnJ,OAAS,MAmKFwN,GA/JgB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBACvBvM,EAAO8G,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,QAClChB,EAAUrB,KAEVsB,GADwBD,EAAQmM,OACtBjM,eAJoC,EAK5BwF,oBAAS,GALmB,mBAK7CK,EAL6C,KAKvCC,EALuC,OAM1BN,mBAAS,gBANiB,mBAM7CxG,EAN6C,KAMtCsO,EANsC,OAOpB9H,mBAAS,gBAPW,mBAO7C+H,EAP6C,KAOnCC,EAPmC,KAa9CvH,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJL,GAAQ,IAOV,IAAI2H,EAAM,IAAIC,KAQd,OACE,qCACGL,EAAkBvD,KAAI,SAACC,GAAD,OACvB,qCACA,qBAAK7J,UAAWJ,EAAQsB,QAAxB,SACI,eAACuM,GAAA,EAAD,CAEAzN,UAAWJ,EAAQlB,KAFnB,UAII,eAACgP,GAAA,EAAD,CACAjN,QAAS,WACgC,IAAlCiL,OAAOC,KAAK/K,EAAKC,MAAM+J,OAC1BpB,MAAM,4DAEN3J,EAAQa,KAAK,CACTiN,SAAU,gBACVC,OAAQ,WAAa/D,EAAQ5C,GAAK,eAAiB4C,EAAQgE,YAC3DzQ,MAAQ,CACJ0Q,SAAWjE,EAAQoB,cACnB8C,UAAYlE,EAAQS,uBAIhCtJ,MAAO,CAACE,QAAU,mBAAoB5B,gBAAkB,uBAdxD,UAeA,qBAAK0B,MAAOA,GAAMqL,aAAlB,SACI,sBAAKrL,MAAOA,GAAM+L,aAAlB,UACI,qBAAK/M,UAAWJ,EAAQsM,WAAxB,SACI,cAAC9B,GAAA,EAAD,CAAQ4D,IAAI,aAAa3D,IAAI,uBAAuBrK,UAAWJ,EAAQwM,UAE3E,qBAAKpL,MAAOA,GAAMiM,iBAClB,qBAAKjM,MAAOA,GAAMgM,iBAI1B,sBAAKhM,MAAOA,GAAMqH,QAAlB,UACI,sBAAKrH,MAAOA,GAAMwL,YAAlB,UACI,cAAC,KAAD,CAAYxL,MAAO,CAACpC,YAAc,MAAOsC,QAAQ,OAAQC,SAAS,UAClE,uBACAnB,UAAU,eACVgB,MAAO,CAACpC,YAAa,MAAOuC,SAAU,OAAQZ,MAAO,SAFrD,UAGKsJ,EAAQoE,kBAHb,YAKA,sBACAjO,UAAU,yBACVgB,MAAO,CAACG,SAAU,QAASZ,MAAO,WAFlC,SAGA,cAAC,KAAD,CAAQ2J,OAAO,qCAAf,UAnDJmB,EAoDgBxB,EAAQwB,aAnDzB,IAAImC,KAAKnC,GAmDgCkC,UAIxC,qBAAKvM,MAAOA,GAAMyL,aAAlB,SACI,qBAAKzM,UAAU,eAAf,SACI,sBAAMA,UAAU,YAAYgB,MAAO,CAACT,MAAO,UAAWY,SAAU,SAAhE,SAMK0I,EAAQ/K,YAIrB,qBAAKkC,MAAOA,GAAM2L,YAAlB,SACI,sBAAM3M,UAAW,eAAegB,MAAO,CAACG,SAAW,SAAnD,SACK0I,EAAQoB,kBAGjB,qBAAKjK,MAAOA,GAAM4L,aAAlB,SACI,uBAAM5M,UAAW,eAAegB,MAAO,CAACT,MAAO,qBAAsBY,SAAW,SAAhF,UACK0I,EAAQqB,kBACT,qCACErB,EAAQqB,kBADV,QAGG,KACFrB,EAAQsB,gBACT,mCACEtB,EAAQsB,kBAEP,KAEEtB,EAAQqB,mBAAsBrB,EAAQsB,gBAGvC,6BAFA,sEAUZ,qBACAnK,MAAO,CAACqD,SAAU,WAAYwE,UAAU,4BADxC,SAGI,cAAC,KAAD,CACApI,QAAS,WACL2M,EAASvD,EAAQ/K,OACjBwO,EAAYzD,EAAQqE,aAvHxCtI,GAAQ,IA0HQ5E,MAAO,CAACT,MAAO,wBAAyBhB,aAAc,OAAQ2B,QAAU,MAAO5B,gBAAiB,iBA9FvGuK,EAAQgE,eAuGjB,0BAnHW,IAACxC,KAsHZ,uBACA,cAAChE,EAAA,EAAD,CACQrG,MAAO,CAACqD,SAAS,QAASpF,IAAK,MAC/B0G,KAAMA,EAAM2B,iBAAkB,IAAMC,QAASxB,EAFrD,SAGY,eAAC,GAAD,CACA/E,MAAO,CAACT,MAAO,QAASjB,gBAAgB,QAASmF,OAAO,oBAAqBC,UAAU,wCACvF6C,QAASxB,EAAayB,SAAS,QAF/B,UAGA,sBAAMxH,UAAU,QAAhB,4BAHA,IAGqClB,EAHrC,IAG4C,uBAC5C,sBAAMkB,UAAU,QAAhB,4BAJA,IAIqCqN,W,UCrRnD9O,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJc,MAAO,IACP+E,OAAQ,IACRhF,aAAc,OACdmF,UAAW,oCACX4H,MAAO,OACPjN,OAAO,aAET8O,MAAO,CACHpJ,OAAQ,UACVR,OAAQ,EACRI,WAAY,UAEdyJ,OAAQ,CACNvF,UAAW,eACXL,WAAY,OACZ6F,WAAY5P,EAAM6P,YAAYC,OAAO,YAAa,CAChDC,SAAU/P,EAAM6P,YAAYE,SAASC,YAGzCC,WAAY,CACV7F,UAAW,kBAEbC,OAAQ,CACNxJ,gBAAiBqP,KAAI,MAEvBC,YAAa,CACTrK,OAAQ,QAEZsK,cAAe,CACX5G,QAAU,QACVzI,MAAO,QACP+E,OAAQ,QACRiE,WAAY,MACZtD,mBAAqB,gBACrBC,eAAgB,OAChB2J,iBAAkB,YAClBhC,SAAU,UAIdiC,UAAW,CACP1P,OAAQ,OACR4F,gBAAiB,iCACjBC,mBAAqB,gBACrBC,eAAgB,OAChB3F,MAAO,QACP+E,OAAS,QACTuI,SAAU,UAEdkC,OAAS,CACL9K,WAAY,sCACZ1E,MAAQ,OACR+E,OAAQ,OACRY,eAAgB,UAChBd,SAAS,WACTwE,UAAY,mCAKd7H,GAAQ,CACViO,eAAiB,CAEbzP,MAAQ,SACR+E,OAAS,MACTlF,OAAS,8BAEbmN,YAAc,CAEVhN,MAAQ,SACR+E,OAAS,SAEbkI,aAAe,CAEXjN,MAAQ,SACR+E,OAAS,QACT2K,WAAa,IAEjBvC,YAAc,CAEVnN,MAAQ,SACR+E,OAAS,MACTuC,aAAe,OAEnBqI,YAAc,CAEV3P,MAAQ,SACR+E,OAAS,OAEb6K,MAAQ,CACJnH,QAAS,eACThD,gBAAkB,4BAClBE,eAAiB,UACjB2J,iBAAkB,YAClBtP,MAAQ,OACR+E,OAAS,SAKX8K,GAAqB,SAAC,GAAe,IAYvBhE,EAZSxB,EAAa,EAAbA,QACnBjK,EAAUrB,KADsB,EAEN+Q,IAAMhK,UAAS,GAFT,mBAGhCzF,GAHgC,UAGtBC,eAOZyN,EAAM,IAAIC,KAOhB,OACE,mCAIA,qBACA/M,QAAS,WACGZ,EAAQa,KAAK,CACTiN,SAAU,gBACVC,OAAQ,WAAa/D,EAAQ5C,GAAK,eAAiB4C,EAAQgE,YAC3DzQ,MAAQ,CACJ0Q,SAAWjE,EAAQoB,cACnB8C,UAAYlE,EAAQS,uBAGxCtJ,MAAO,CAAC+D,OAAO,WAVf,SAWI,eAAC0I,GAAA,EAAD,CAAgCzN,UAAWJ,EAAQlB,KAAnD,UACI,uBACA,sBACAsC,MAAO,CAACiE,gBAAiB,+BACzBjF,UAAWJ,EAAQiP,cAFnB,UAIC,qBAAK7O,UAAWJ,EAAQmP,YAJzB,OAKA,sBAAK/N,MAAOA,GAAMiO,eAAlB,UACI,qBAAKjO,MAAOA,GAAMwL,YAAlB,SACI,eAACvM,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,SAA3B,UAEA,qBACAY,MAAOA,GAAMoO,QAEb,uBACApO,MAAO,CAACG,SAAS,SACjBnB,UAAU,eAFV,UAIK6J,EAAQoE,kBAJb,YAMA,sBACAjO,UAAU,eACVgB,MAAO,CAACG,SAAU,QAASZ,MAAM,qBAAsBlB,OAAS,WAFhE,kBAKA,sBAAMW,UAAU,kBAAkBgB,MAAO,CAACG,SAAS,SAAnD,SACI,cAAC,KAAD,CAAQ+I,OAAO,+BAAf,UA/CJmB,EAgDiBxB,EAAQwB,aA/C1B,IAAImC,KAAKnC,GA+CiCkC,YAK7C,qBAAKvM,MAAOA,GAAMyL,aAAlB,SACI,sBAAMzM,UAAU,YAAYgB,MAAO,CAACG,SAAS,OAA7C,SACK0I,EAAQ/K,UAGjB,qBAAKkC,MAAOA,GAAM2L,YAAlB,SACI,sBAAM3M,UAAW,eAAegB,MAAO,CAACG,SAAW,SAAnD,SACK0I,EAAQoB,kBAGjB,qBAAKjK,MAAOA,GAAMmO,YAAlB,SACI,uBAAMnP,UAAW,eAAegB,MAAO,CAACT,MAAO,qBAAsBY,SAAW,SAAhF,UACS0I,EAAQqB,kBACT,qCACErB,EAAQqB,kBADV,QAGG,KACFrB,EAAQsB,gBACT,mCACEtB,EAAQsB,kBAEP,KAEEtB,EAAQqB,mBAAsBrB,EAAQsB,gBAGvC,6BAFA,mEAuExB,qBAAKnL,UAAWJ,EAAQoP,WA/HbnF,EAAQgE,kBAkJZ0B,GAZa,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAC1B,OACI,mCACKA,EAAe5F,KAAI,SAACC,GAAD,OAChB,mCACA,cAAC,GAAD,CAAoBA,QAASA,YCnR7C,SAASpG,GAAM7F,GACX,OAAO,cAAC,IAAD,aAAU8F,UAAW,EAAGC,QAAQ,UAAa/F,IAGxD,IAAMW,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJc,MAAO,OACP+E,OAAQ,SACRuH,aAAe,sBACfvM,aAAc,MACdmF,UAAW,UACXpF,gBAAkB,uBAEpByM,OAAQ,CACN9D,QAAS,eACT5I,OAAQ,SACRwJ,UAAW,cAEb/J,MAAO,CACLqC,SAAU,GACV3B,MAAO,OACPyI,QAAQ,OACRE,eAAe,SACf6D,cAAe,OAGjBC,IAAK,CACHnF,aAAc,IAEhB/B,OAAQ,CACJA,OAAQ,WAEZ7D,QAAU,CACRA,QAAS,MAEXgL,WAAY,CACVjE,QAAS,OACT,QAAS,CACP5I,OAAQZ,EAAMI,QAAQ,KAG1BsN,MAAO,CACL3M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,IAExBuN,MAAO,CACL5M,MAAOf,EAAMI,QAAQ,IACrB0F,OAAQ9F,EAAMI,QAAQ,IACtB4F,OAAS,iCAKPzD,GAAQ,CACVqL,aAAe,CACXpE,QAAU,eACVzI,MAAQ,MACR+E,OAAS,QAGb8D,QAAU,CACNJ,QAAU,eACVqE,MAAQ,QACR9M,MAAQ,MACR+E,OAAS,QAGbiI,YAAa,CACTvE,QAAS,OACTE,eAAgB,QAChB/H,WAAY,SACZZ,MAAQ,UACR+E,OAAS,SAGbkI,aAAc,CACVjN,MAAQ,MACR+E,OAAS,MACTmI,aAAc,WAEdrN,OAAQ,mBAEZsN,YAAa,CACTnN,MAAQ,UACR+E,OAAS,SAGbqI,aAAc,CACVpN,MAAQ,UACR+E,OAAS,SAGbsI,cAAgB,CACZrN,MAAQ,MACR+E,OAAS,MAETuI,SAAU,QAEdC,aAAe,CACXvN,MAAQ,MACR+E,OAAS,OAEbyI,UAAW,CACP/H,gBAAkB,4BAClBE,eAAiB,UACjB3F,MAAQ,OACR+E,OAAQ,OACRsE,UAAW,2BACXnJ,OAAS,KAEbuN,eAAgB,CACZ3N,gBAAiB,QACjB6F,eAAiB,UACjB3F,MAAQ,OACR+E,OAAQ,OACRsE,UAAW,yBACXnJ,OAAS,MAwIF+P,GApIoB,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,sBAE3B9P,GADO8H,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,QACxBrC,MAF4C,GAG5CuB,cACQwF,oBAAS,IAJ2B,mBAIrDK,EAJqD,KAI/CC,EAJ+C,OAKlCN,mBAAS,gBALyB,mBAKrDxG,EALqD,KAK9CsO,EAL8C,OAM5B9H,mBAAS,gBANmB,mBAMrD+H,EANqD,KAM3CC,EAN2C,OAOtBhI,mBAAS,gBAPa,mBAOrDqK,EAPqD,KAOxCC,EAPwC,KAatD7J,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJL,GAAQ,IAOA,IAAI4H,KAAd,IAEMqC,EAAS,SAACxE,GAEZ,OADW,IAAImC,KAAKnC,IAKxB,OACE,qCACGqE,EAAsB9F,KAAI,SAACC,GAAD,OAC3B,qCACA,qBAAK7J,UAAWJ,EAAQsB,QAAxB,SACI,cAACuM,GAAA,EAAD,CAAgCzN,UAAWJ,EAAQlB,KAAnD,SACI,eAACgP,GAAA,EAAD,CAAa1M,MAAO,CAACE,QAAU,mBAAoB5B,gBAAkB,uBAArE,UACA,sBAAK0B,MAAOA,GAAMqL,aAAlB,UACA,qBAAKrL,MAAOA,GAAM+L,aAAlB,SACK,qBAAK/M,UAAWJ,EAAQsM,WAAxB,SACG,cAAC9B,GAAA,EAAD,CAAQ4D,IAAI,aAAa3D,IAAI,uBAAuBrK,UAAWJ,EAAQwM,YAG/E,qBAAKpL,MAAOA,GAAM6L,cAAlB,SACI,qBACA7L,MAAO,CAAC8O,SAAU,WAAWtQ,MAAM,MAAOuQ,YAAY,QAAQhM,UAAU,SADxE,SAEA,cAAC9D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,cAAC,KAAD,CACAM,QAAS,WACL2M,EAASvD,EAAQ/K,OACjBwO,EAAYzD,EAAQqE,aACpB0B,EAAe,mCACX,cAAC,KAAD,CAAQ1F,OAAO,2BAAf,SACM2F,EAAOhG,EAAQwB,mBA7C7CzF,GAAQ,IAkDQ5E,MAAO,CAACT,MAAO,wBAAyBhB,aAAc,OAAQ2B,QAAU,MAAO5B,gBAAiB,sBAMxG,sBAAK0B,MAAOA,GAAMqH,QAAlB,UACI,qBAAKrH,MAAOA,GAAMyL,aAAlB,SACI,qBAAKzM,UAAU,eAAf,SACI,sBAAMA,UAAU,YAAYgB,MAAO,CAACT,MAAO,UAAWY,SAAU,SAAhE,SACK0I,EAAQ/K,YAIrB,qBAAKkC,MAAOA,GAAMwL,YAAlB,SACI,sBACAxM,UAAU,yBACVgB,MAAO,CAACG,SAAU,QAASZ,MAAO,SAFlC,SAGA,cAAC,KAAD,CAAQ2J,OAAO,eAAf,SACK2F,EAAOhG,EAAQwB,oBAIxB,qBAAKrK,MAAOA,GAAM2L,YAAlB,SACI,sBAAM3M,UAAW,eAAegB,MAAO,CAACG,SAAW,SAAnD,SACK0I,EAAQoB,kBAGjB,qBAAKjK,MAAOA,GAAM4L,aAAlB,SACI,uBAAM5M,UAAW,eAAegB,MAAO,CAACT,MAAO,qBAAsBY,SAAW,SAAhF,UACK0I,EAAQqB,kBACT,qCACErB,EAAQqB,kBADV,QAGG,KACFrB,EAAQsB,gBACT,mCACEtB,EAAQsB,kBAEP,KAEEtB,EAAQqB,mBAAsBrB,EAAQsB,gBAGvC,6BAFA,uEAjETtB,EAAQgE,eA2EvB,6BAGA,uBACA,cAACxG,EAAA,EAAD,CACQrG,MAAO,CAACqD,SAAS,QAASpF,IAAK,MAC/B0G,KAAMA,EAAM2B,iBAAkB,IAAMC,QAASxB,EAFrD,SAGY,eAAC,GAAD,CACA/E,MAAO,CAACT,MAAO,QAASjB,gBAAgB,SACxCiI,QAASxB,EAAayB,SAAS,QAF/B,UAGA,sBAAMxH,UAAU,QAAhB,4BAHA,IAGqClB,EAHrC,IAG4C,uBAC5C,sBAAMkB,UAAU,QAAhB,4BAJA,IAIqCqN,EAJrC,IAI+C,uBAC/C,sBAAMrN,UAAU,QAAhB,4BALA,IAKqC2P,WC9PnD3O,GAAQ,CACVgP,SAAW,CACP3L,SAAU,WAEVE,OAAS,MACTlF,OAAS,YACTG,MAAQ,MACRqJ,UAAW,wBAEfoH,aAAe,CACX5L,SAAU,WACVY,gBAAiB,6BACjBE,eAAgB,UAChB2J,iBAAmB,YACnBvK,OAAS,MACTlF,OAAS,WACTG,MAAQ,MACRqJ,UAAW,uBAEfqH,aAAe,CACXjL,gBAAiB,kCACjBE,eAAgB,UAChB2J,iBAAmB,YACnBvK,OAAS,MACTlF,OAAS,WACTG,MAAQ,MACRqJ,UAAW,uBAEfsH,KAAO,CACH9L,SAAW,WACX7E,MAAO,MACP+E,OAAQ,MACRlF,OAAO,wBACP4F,gBAAiB,0BACjB6J,iBAAkB,YAClB3J,eAAiB,UACjB0D,UAAW,4BAKbuH,GAAuB,SAACxS,GAC5B,IAAMiC,EAAUC,cAEhB,OACE,mCACI,cAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,qBACAa,MAAOpD,EAAMyS,SACT,CAAC/Q,gBAAiB,SAElB,CAACyE,UAAU,QAASzE,gBAAiB,WAEzCmB,QAAS,WACLZ,EAAQa,KAAK,mBAEjBV,UAAU,YATV,SAUI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACI,sBAAKa,MAAOA,GAAMgP,SAAlB,UACI,mBACAhQ,UAAU,YACVgB,MAAOpD,EAAMyS,SACT,CAAC9P,MAAO,UAAWlB,OAAS,UAAW8B,SAAW,SAElD,CAACZ,MAAO,QAASlB,OAAS,UAAW8B,SAAW,SALpD,qDAOA,mBACAnB,UAAU,YACVgB,MAAOpD,EAAMyS,SACT,CAAC9P,MAAO,UAAWlB,OAAS,UAAW8B,SAAW,SAElD,CAACZ,MAAO,QAASlB,OAAS,UAAW8B,SAAW,SALpD,sEAOA,mBACAnB,UAAU,eACVgB,MAAOpD,EAAMyS,SACT,CAAC9P,MAAO,UAAWlB,OAAS,cAAe8B,SAAW,SAEtD,CAACZ,MAAO,QAASlB,OAAS,cAAe8B,SAAW,SALxD,+DAQJ,qBAAKH,MACDpD,EAAMyS,SACNrP,GAAMkP,aAENlP,GAAMiP,aAJV,SAMI,qBACAjP,MAAOA,GAAMmP,mBCxF/BnP,GAAQ,CACVgP,SAAW,CACP3L,SAAU,WAEVE,OAAS,MACTlF,OAAS,YACTG,MAAQ,MACRqJ,UAAW,wBAEfyH,eAAiB,CACbjM,SAAU,WACVY,gBAAiB,oCACjBE,eAAgB,UAChB2J,iBAAmB,YACnBvK,OAAS,MACTlF,OAAS,WACTG,MAAQ,MACRqJ,UAAW,wBA0DJ0H,GArDW,SAAC3S,GACzB,IAAMiC,EAAUC,cAEhB,OACE,mCACI,cAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,qBACAa,MACI,CAAC+C,UAAU,QAASzE,gBAAiB,WAEzCmB,QAAS,WACLZ,EAAQa,KAAK,CACTiN,SAAU,WAAa/P,EAAMgD,KAAKC,KAAKC,OAAOwF,SAC9ClJ,MAAQQ,EAAMgD,KAAKC,KAAKC,UAIhCd,UAAU,YAXV,SAYI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACI,sBAAKa,MAAOA,GAAMgP,SAAlB,UACI,mBACAhQ,UAAU,YACVgB,MACI,CAACT,MAAO,QAASlB,OAAS,aAAc8B,SAAW,SAHvD,sEAKA,mBACAnB,UAAU,eACVgB,MACI,CAACT,MAAO,QAASlB,OAAS,cAAe8B,SAAW,SAHxD,+DAKA,mBACAnB,UAAU,eACVgB,MACI,CAACT,MAAO,QAASlB,OAAS,YAAa8B,SAAW,SAHtD,+EAKA,mBACAnB,UAAU,eACVgB,MACI,CAACT,MAAO,QAASlB,OAAS,YAAa8B,SAAW,SAHtD,kFAMJ,qBAAKH,MACDA,GAAMsP,2B,UCnD1Bd,GAAiB,GACjBrC,GAAoB,GACpBxD,GAAyB,GACzB6G,GAAQ,GACRd,GAAwB,GAEtB1O,GAAQ,CACVyP,SAAW,CACPxL,gBAAkB,+BAClBE,eAAiB,UACjB2J,iBAAmB,YACnBtP,MAAQ,MACR+E,OAAS,MACTlF,OAAS,mBAEbqR,WAAY,CACRrM,SAAW,WACX/E,gBAAiB,UACjBiF,OAAS,OACT/E,MAAO,OACPE,OAAS,KACToN,SAAU,UAEd6D,SAAU,CACNxP,SAAU,QACVZ,MAAO,QACPwP,YAAa,SAEjBa,UAAW,CACPzP,SAAU,QACVZ,MAAO,UACPwP,YAAa,SAEjBc,QAAS,CACL5L,gBAAiB,4BACjBhG,IAAM,MACNG,MAAQ,UAEZ0R,QAAS,CACL7L,gBAAiB,4BACjBhG,IAAM,SACNO,MAAO,MACPsP,iBAAkB,YAClB3P,KAAO,OAEX4R,OAAS,CACL1M,SAAU,WACV7E,MAAO,MACPsH,aAAc,QAElBkK,WAAY,CACR7P,SAAU,GACV8P,UAAW,QACX3R,gBAAiB,UACjBC,aAAc,MACdiJ,WAAY,QAEhB0I,WAAY,CACRC,MAAO,OACPhQ,SAAU,MACV9B,OAAQ,MACRmJ,WAAY,OACZ4I,WAAY,KAEhBC,WAAa,CACTpM,gBAAiB,6BAErBqM,iBAAmB,CACfrJ,QAAU,QAEdsJ,YAAa,CACTtM,gBAAiB,8BAErBuM,kBAAoB,CAChBvJ,QAAU,QAEdwJ,OAAS,CACLpN,SAAU,WACVwE,UAAU,wBACVzJ,MAAO,KACPmB,MAAO,QACPwE,OAAO,YAoNA2M,GA/Mc,SAAC9T,GAAW,IAsB7B+T,EAtB4B,EACZrM,oBAAS,GADG,mBACvBsM,GADuB,WAG9BhR,EAAO8G,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,QAClCiR,EAAWnK,aAAY,SAAAtK,GAAK,OAAIA,EAAMyM,QAAQhJ,QAE9CiR,GADUhS,cACK4H,aAAY,SAAAtK,GAAK,OAAIA,EAAM2U,aAC9BrK,aAAY,SAAAtK,GAAK,OAAIA,EAAM4U,UAAUnR,SASpDD,EAAK4C,QACJ6B,aAAa4M,QACbnU,OAAO6I,SAASuL,QAAQ,MAGO,GAAhCxG,OAAOC,KAAKkG,GAAUjH,UAGjB+G,EADD/Q,EAAKC,KAAKC,OACIF,EAAKC,KAAKC,OAEV,CAACmG,IAAI,GAEtBuI,GAAiB,GACjBrC,GAAoB,GACpBxD,GAAyB,GACzB+F,GAAwB,GACxBc,GAAQ,GAERqB,EAASjI,KAAI,SAACC,GACVhH,QAAQC,IAAI+G,GACU,SAAlBA,EAAQsI,QAAqBtI,EAAQW,oBAAmF,GAA7DX,EAAQW,kBAAmBG,OAAOiB,QAAQ+F,EAAW1K,KAChHuI,GAAc,uBAAOA,IAAP,CAAuB3F,IACrChH,QAAQC,IAAI,iBAAiB0M,KAEN,SAAlB3F,EAAQsI,QACbhF,GAAiB,uBAAOA,IAAP,CAA0BtD,IAC3ChH,QAAQC,IAAI,oBAAoBqK,KAE3BtD,EAAQW,mBAAuD,kBAAlCX,EAAQW,kBAAkB2H,QAC5DzC,GAAqB,uBAAOA,IAAP,CAA8B7F,IACnDhH,QAAQC,IAAI,wBAAwB4M,MAEpC/F,GAAsB,uBAAOA,IAAP,CAA+BE,IACrDhH,QAAQC,IAAI,yBAAyB6G,SAKL,GAAzC+B,OAAOC,KAAKmG,EAAajR,MAAM+J,QACbkH,EAAajR,KAAKA,KAAKC,OAC/B8I,KAAI,SAACwI,IACsB,IAA7BA,EAAUC,iBACT7B,GAAK,uBAAOA,IAAP,CAAc4B,QA1DK,IAUhBE,EAVgB,EA+DFhN,mBAAS,GA/DP,mBA+D7BiN,EA/D6B,KA+DlBC,EA/DkB,KAoF9BC,EAAM,uCAAG,8BAAArM,EAAA,6DACLpD,EAAU,CACd,cAAiB,SAAWqC,aAAa1C,OAErC9B,EAAO,GAJF,SAKOqC,IAAMsD,KAAK,0CAA2C3F,EAAM,CAACmC,QAAQA,IAL5E,yDAAH,qDAYZ,OACI,qCACA,qBAAKhC,MAAOA,GAAM0P,WAAlB,SACI,qBAAK1P,MAAOA,GAAM6P,QAAS7Q,UAAU,kBAEzC,uBACA,qBAAKgB,MAAOA,GAAMyP,WAClB,sBACAzQ,UAAU,QACVgB,MAAOA,GAAMyQ,OACbhR,QAAS,WACLgS,IACApN,aAAa4M,QACbnU,OAAO6I,SAASuL,QAAQ,MAN5B,sCAUiC,GAAzB1C,GAAe5E,OACf,qCACA,uBACA,sBAAK5J,MAAOA,GAAM2P,SAAU3Q,UAAU,YAAtC,4CACM,uBADN,uDAMA,qCACA,qBACAgB,MAAO,CACHiE,gBAAiB,8BACjBE,eAAiB,UACjB2J,iBAAmB,YACnBtP,MAAO,OACP+E,OAAQ,OACRiE,WAAa,WAEjB,sBAAKxH,MAAOA,GAAM2P,SAAU3Q,UAAU,YAAtC,+BACG,uBADH,uDAOR,uBAI+B,GAAzBwP,GAAe5E,OACjB,mCACI,cAAC3K,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,sBAAKH,UAAU,gBAAf,UACI,qBAAKA,UAAU,SAASgB,MAAO,CAACiH,QAAQ,QAAS1D,OAAQ,QAAS/E,OAzIlE8S,EAyIoF9C,GAAe5E,QAxIjG,IACN0H,GACDI,WAAa,MAsIoG7J,UApE/G,WACb,IAAM8J,EAAqB,GAAbJ,EAAiB,MAA0B,KAAlBA,EAAY,IAAWG,WAC9D,MAAO,aAAeC,EAAMD,SAASC,GAAS,SAkEyFC,IAAvH,SACI,cAAC,GAAD,CAAqBpD,eAAgBA,OAEzC,qBACAxO,MArFC,GAAbuR,EACOvR,GAAMsQ,iBAGNtQ,GAAMqQ,WAkFD5Q,QAAS,WACL+R,GAAa,SAACK,GAAD,OAAUA,EAAO,MAElC7S,UAAU,eACV,qBACAgB,MApFa,GAAzBwO,GAAe5E,QAAe2H,GAAa/C,GAAe5E,OACnD5J,GAAMwQ,kBAENxQ,GAAMuQ,YAkFD9Q,QAAS,WACL+R,GAAa,SAACK,GAAD,OAAUA,EAAO,MAElC7S,UAAU,uBAIpB,6BAGN,uBACA,cAAC,GAAD,CAAsBqQ,SAAmC,GAAzBb,GAAe5E,SAI/C,mBAAG5J,MAAOA,GAAM4P,UAAW5Q,UAAU,WAArC,mCACA,cAACC,EAAA,EAAD,CAAMe,MAAO,CAAC+O,YAAc,MAAOxD,aAAe,OAAQrM,WAAS,EAAC7B,UAAU,MAAM8B,QAAQ,SAASC,WAAW,SAAhH,SACkC,GAA5B+M,GAAkBvC,OAAc,cAAC,GAAD,CAAwBuC,kBAAmBA,KAAuB,qHAGxG,uBACA,cAAC,GAAD,CAAmBvM,KAAMA,IAEzB,mBAAGI,MAAOA,GAAM4P,UAAW5Q,UAAU,WAArC,+CAEA,cAACC,EAAA,EAAD,CAAMe,MAAO,CAAC+O,YAAc,MAAOxD,aAAe,OAAQrM,WAAS,EAAC7B,UAAU,MAAM8B,QAAQ,SAASC,WAAW,SAAhH,SACsC,GAAhCsP,GAAsB9E,OAAc,cAAC,GAAD,CAA4B8E,sBAAuBA,KAA2B,wGAGxH,qBAAK1P,UAAU,iBAAf,SACI,cAAC8S,GAAA,EAAD,CAASnP,QAAQ,aAGrB,mBAAG3C,MAAOA,GAAM4P,UAAW5Q,UAAU,WAArC,4DACA,cAACC,EAAA,EAAD,CAAMe,MAAO,CAAC+O,YAAc,MAAOxD,aAAe,OAAQrM,WAAS,EAAC7B,UAAU,MAAM8B,QAAQ,SAASC,WAAW,SAAhH,SACuC,GAAjCuJ,GAAuBiB,OAAc,cAAC,GAAD,CAA6BjB,uBAAwBA,GAAwBiI,QAASA,IAAa,+H,oBCjShJrT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJK,SAAU,EACVgR,YAAatR,EAAMI,QAAQ,GAC3B0N,aAAc9N,EAAMI,QAAQ,GAC5BY,SAAU,QAEZsT,QAAS,CACPhU,SAAU,EAGVU,SAAU,OAEVwI,QAAS,OACT1D,OAAQ,GACRnE,WAAY,UAGdgM,MAAO,CACL5M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,GACtBsK,UAAW,QAiDA6J,GA5CK,SAACpV,GAEjBiF,QAAQC,IAAI,cAAelF,EAAMgD,KAAKE,QACtC,IAAMlB,EAAUrB,KACVsB,EAAUC,cASlB,OACE,qCACE,8BACE,sCAEF,cAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACsN,GAAA,EAAD,CAAMzN,UAAWJ,EAAQmT,QAAzB,SACE,cAACE,GAAA,EAAD,CAAgBxS,QAdH,WACfoC,QAAQC,IAAI,WACZjD,EAAQa,KAAK,CACTiN,SAAU,WAAa/P,EAAMgD,KAAKE,OAAOwF,SACzClJ,MAAOQ,EAAMgD,KAAKE,UAUpB,SAEE,cAACoS,GAAA,EAAD,CACE/R,SAAS,QACT2H,OACE,cAACsB,GAAA,EAAD,CACE5J,aAAW,SACX6J,IAAG,iCAA4BzM,EAAMgD,KAAKE,OAAOqS,eAEjDnT,UAAWJ,EAAQwM,QAIvBtN,MAAO,cAACiM,GAAA,EAAD,CAAYpH,QAAQ,QAAQ3C,MAAO,CAAEoQ,WAAY,KAAjD,SAAyDxT,EAAMgD,KAAKE,OAAOwF,uB,qBC/D1FtF,GAAQ,CACZtC,KAAM,CACJ6F,OAAQ,KACRpF,KAAM,EACNC,MAAO,EACPiF,SAAU,QACVhF,OAAQ,OACRI,SAAU,OACV2T,WAAY,YACZ9T,gBAAiB,UACjBwM,aAAc,YACd7M,IAAK,EACLS,OAAQ,GAEV2T,UAAW,CACTpL,QAAS,OACT1D,OAAQ,OACRlF,OAAQ,QAEViU,KAAM,CACJzK,UAAW,oBACXxJ,OAAQ,SAyBGkU,GArBG,SAAC3V,GACjB,IAAMiC,EAAUC,cAEhB,OACE,mCACE,sBAAKkB,MAAOA,GAAMtC,KAAlB,UACE,cAAC4B,EAAA,EAAD,CACEU,MAAO,CAAEqD,SAAU,WAAYlF,KAAM,EAAGoF,OAAQ,QAChD/D,aAAW,OACXC,QAAS,kBAAMZ,EAAQ2T,UAHzB,SAKE,cAAC,KAAD,MAEF,qBAAKxS,MAAOA,GAAMqS,UAAlB,SACE,sBAAMrS,MAAOA,GAAMsS,KAAnB,SAA0B1V,EAAM0V,eCvCpC/U,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJK,SAAU,EACVgR,YAAatR,EAAMI,QAAQ,GAC3B0N,aAAc9N,EAAMI,QAAQ,GAC5BY,SAAU,QAEZgU,GAAI,CACFvS,QAASzC,EAAMI,QAAQ,GACvBsK,UAAW,OAEX7J,gBAAiB,aAEnBoU,aAAc,CACZxS,QAASzC,EAAMI,QAAQ,GACvBsK,UAAW,UAEbiD,MAAO,CACL5M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,GACtBsK,UAAW,QA2BAwK,GAtBA,SAAC/V,GACd,IAAMgC,EAAUrB,KAGhB,OAFAsE,QAAQC,IAAIlF,GAGV,qCACE,cAAC,GAAD,CAAW0V,KAAM,uBACjB,cAACrT,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,sBAAKH,UAAWJ,EAAQlB,KAAxB,UACE,cAACuB,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,SACE,cAACoB,EAAA,EAAD,CAAMmL,MAAI,EAACpL,UAAWJ,EAAQ6T,GAAIG,GAAI,GAAtC,SACE,cAAC,GAAD,CAAahT,KAAMhD,EAAMgD,WAG7B,+CAGA,cAAC,GAAD,Q,+BC/CGiT,GAAoB,uCAAG,WAAMhK,GAAN,mBAAAzD,EAAA,6DAClCvD,QAAQC,IAAI,wCAENC,EAAS,CACbC,QAAS,CAAC,cAAiB,SAAWqC,aAAa1C,QAE/C9B,EAAO,CACXA,KAAM,IAP0B,SAUhBqC,IAAMoG,MACtB,gDAAkDO,EAAQ5C,GAAK,eAC/DpG,EACAkC,GAbgC,OAU5B0D,EAV4B,OAelC5D,QAAQC,IAAI,kBAAmB2D,GAfG,2CAAH,sDCQ3BlI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPW,OAAQZ,EAAMI,QAAQ,SAKtBmC,GAAQ,CACZmD,MAAO,CACLE,SAAU,WACVnF,OAAQ,KACRM,MAAO,OACP+E,OAAQ,OACRjF,gBAAiB,QACjBC,aAAc,iBACdG,OAAS,KAEXZ,MAAO,CACLyB,MAAO,UACPY,SAAU,QACV9B,OAAQ,cAEVyU,KAAM,CACJvT,MAAO,UACPY,SAAU,QACV9B,OAAQ,cAEV0U,MAAO,CACLxT,MAAO,UACPY,SAAU,MACV9B,OAAQ,cAEV2U,MAAO,CACL7S,SAAU,QAEZ4P,OAAQ,CACN1M,SAAU,WACV7E,MAAO,MACPH,OAAQ,cAIN4U,GAAiB,SAACrW,GACtBiF,QAAQC,IAAI,kBADoB,IAExB+G,EAA2CjM,EAA3CiM,QAASqK,EAAkCtW,EAAlCsW,SAAUC,EAAwBvW,EAAxBuW,OAAQC,EAAgBxW,EAAhBwW,YAC7BxU,EAAUrB,KACAuB,cACCiB,cAEjB,OACE,mCACA,eAAC+I,GAAA,EAAD,CAAO9I,MAAOA,GAAMmD,MAAOT,UAAW,EAAtC,UACE,qBAAK1D,UAAU,YAAYgB,MAAOA,GAAMlC,MAAxC,mDAKA,sBAAKkB,UAAU,QAAQgB,MAAOA,GAAM8S,KAApC,UACGtG,KAAK3D,EAAQwB,cAAcgJ,UAAU,EAAG,IAD3C,6BACqD,uBADrD,IAEGxK,EAAQ/K,MAFX,kFAIA,sBAAKkB,UAAU,QAAQgB,MAAOA,GAAM+S,MAApC,4IAEE,uBAFF,wDAKA,qBAAK/T,UAAWJ,EAAQlB,KAAxB,SACE,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACoL,GAAA,EAAD,CACEvK,MAAOA,GAAM+P,OACbpN,QAAQ,WACRpD,MAAM,UACNyG,KAAK,QACLvG,QAAS,WACPyT,EAAS,CAAErL,UAAW,uBACtBsL,EAAO,CAAEG,UAAW,iBACpBzI,YAAW,WACTsI,EAAO,CAAElM,QAAS,WACjB,MAVP,SAaE,qBAAKjH,MAAOA,GAAMgT,MAAOzT,MAAM,SAA/B,wCAKF,cAACgL,GAAA,EAAD,CACEvK,MAAOA,GAAM+P,OACbpN,QAAQ,YACRpD,MAAM,UACNyG,KAAK,QACLvG,QAAS,WAELoT,GAAqBhK,GACrBuK,KARN,SAWE,qBAAKpT,MAAOA,GAAMgT,MAAOzT,MAAM,SAA/B,mDCjFNhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJW,OAAQ,KACRG,MAAO,OACP+E,OAAQ,MACR9E,SAAU,OACVF,aAAc,OACdmF,UAAW,qCAEbyJ,MAAO,CACLpJ,OAAQ,UACRR,OAAQ,EACRI,WAAY,UAEdyJ,OAAQ,CACNvF,UAAW,eACXL,WAAY,OACZ6F,WAAY5P,EAAM6P,YAAYC,OAAO,YAAa,CAChDC,SAAU/P,EAAM6P,YAAYE,SAASC,YAGzCC,WAAY,CACV7F,UAAW,kBAEbC,OAAQ,CACNxJ,gBAAiBqP,KAAI,MAEvBC,YAAa,CACXrK,OAAQ,WAEVsK,cAAe,CACbvC,MAAO,OACP9M,MAAO,MACP+E,OAAQ,MACRiE,WAAY,MACZtD,mBAAoB,gBACpBC,eAAgB,OAChB2J,iBAAkB,YAClBhC,SAAU,UAEZiC,UAAW,CACTzC,MAAO,OACPjN,OAAQ,OACR4F,gBAAiB,iCACjBC,mBAAoB,gBACpBC,eAAgB,OAChB3F,MAAO,MACP+E,OAAQ,UACRuI,SAAU,UAEZyH,aAAc,CACZlQ,SAAU,QACV5E,SAAU,OACV+U,UAAW,OACXhM,WAAY,OACZ5J,YAAa,OACbO,KAAM,EACNC,MAAO,EACPI,MAAO,OACP+E,OAAQ,OACRjF,gBAAiB,QACjBmV,QAAS,MACTpG,WAAY,gBAIVrN,GAAQ,CACZwI,MAAQ,CACJ9E,UAAW,0BACXD,OAAQ,kBACRnF,gBAAgB,UA6KPoV,GAzKW,SAAC9W,GACzB,IAAMgD,EAAO8G,aAAY,SAACtK,GAAD,OAAWA,EAAMwD,KAAKC,KAAKC,UAC5C+I,EAAqBjM,EAArBiM,QACFjK,GADuBhC,EAAZgU,QACDrT,MACVsB,EAAUC,cACV8C,EAAW7B,cALkB,EAMPuE,mBAAS,CAAEuD,UAAW,uBANf,mBAM5B8L,EAN4B,KAMpBC,EANoB,OAOXtP,mBAAS,CAC/BuD,UAAW,qBACXZ,QAAS,SATwB,mBAO5B4M,EAP4B,KAOtBC,EAPsB,OAWXxP,oBAAS,GAXE,mBAW5BK,EAX4B,KAWtBC,EAXsB,KAmB7BG,EAAW,uCAAG,WAAMC,EAAOC,GAAb,SAAAG,EAAA,sEACZxD,EAASgF,GAAmBvC,aAAa1C,QAD7B,UAElBiS,EAAU,CAAE/L,UAAW,uBACvBiM,EAAQ,CAAER,UAAW,iBACrBzI,YAAW,WACXiJ,EAAQ,CAAE7M,QAAS,WAChB,KACHpI,EAAQqS,QAAQ,WACD,cAAXjM,EARc,iDAWlBL,GAAQ,GAXU,2CAAH,wDAcXmP,EAAQ,uCAAG,8BAAA3O,EAAA,6DACfvD,QAAQC,IAAI,mBACNC,EAAS,CACbC,QAAS,CAAEC,cAAe,SAAWoC,aAAa1C,QAHrC,SAMGO,IAAM8R,OACtB,2CAA6CnL,EAAQ5C,GACrDlE,GARa,OAMT0D,EANS,OAUf5D,QAAQC,IAAI,iBAAkB2D,GAC9B5G,EAAQa,KAAK,WAXE,2CAAH,qDAcd,OAAKmJ,EAEH,qCACE,cAAC5J,EAAA,EAAD,CACEC,WAAS,EACTkL,MAAI,EACJ/M,UAAU,MACV8B,QAAQ,SACRa,MAAO,CACLxB,MAAO,OACPC,SAAU,OACV6M,MAAO,OACPjN,OAAQ,QATZ,SAYE,eAACoO,GAAA,EAAD,CAAgCzN,UAAWJ,EAAQlB,KAAnD,UACE,uBAEA,sBACEsC,MAAO,CAAEiE,gBAAiB,+BAC1BjF,UAAWJ,EAAQiP,cAFrB,UAIE,qBAAK7O,UAAWJ,EAAQmP,YAAkB,OAG5C,cAACmE,GAAA,EAAD,CACElS,MAAO,CAAEE,QAAS,kBAClBpC,MAAO,cAACiM,GAAA,EAAD,CAAYpH,QAAQ,QAApB,SAA6BkG,EAAQ/K,QAC5CmW,UACI,mCACA,cAAClK,GAAA,EAAD,CAAYpH,QAAQ,QAApB,SACA,cAAC,KAAD,CAAQuG,OAAO,0BAAf,SACCL,EAAQwB,mBAKbhO,OACEuD,EAAKqG,KAAOiO,SAASrL,EAAQsL,OACX,QAAlBtL,EAAQsI,QACN,cAAC7R,EAAA,EAAD,CACEE,aAAW,WACXC,QAAS,WACP,WACGZ,EAAQa,KAAK,CACZiN,SAAU,iBACVC,OAAQ,WAAa/D,EAAQ5C,MANrC,SAWE,cAAC,KAAD,QAKR,cAACyG,GAAA,EAAD,CAAa1M,MAAO,CAACE,QAAS,GAA9B,SACE,eAACkU,GAAA,EAAD,CAAapU,MAAO,CAAC+O,YAAa,GAAlC,UACqB,QAAlBlG,EAAQsI,QAAoBvR,EAAKqG,KAAOiO,SAASrL,EAAQsL,OACxD,cAAC5J,GAAA,EAAD,CACEvE,KAAK,SACLzG,MAAM,UACNE,QAAS,WACPmU,EAAU,CAAE/L,UAAW,sBACvBiM,EAAQ,CAAER,UAAW,iBALzB,SAQE,cAACvJ,GAAA,EAAD,CAAYpH,QAAQ,QAAQ3C,MAAO,CAAEoQ,WAAY,KAAjD,qDAKHxQ,EAAKqG,KAAOiO,SAASrL,EAAQsL,OAC5B,mCACA,cAAC5J,GAAA,EAAD,CACEvE,KAAK,SACLzG,MAAM,UACNE,QAAS,WACP,WACGsU,IACAlJ,YACC,kBAAMjJ,EAASgF,GAAmBvC,aAAa1C,UAC/C,MARR,SAaE,cAACoI,GAAA,EAAD,CAAYpH,QAAQ,QAAQ3C,MAAO,CAAEoQ,WAAY,KAAjD,iDAxECvH,EAAQgE,eAoFrB,qBAAK7M,MAAO2T,EAAQ3U,UAAU,aAAaP,SAAS,GAApD,SACE,cAAC,GAAD,CACEoK,QAASA,EACTqK,SAAUU,EACVT,OAAQW,EACRV,YAzIY,WAClBxO,GAAQ,QA2IN,qBAAK5E,MAAO6T,EAAM7U,UAAU,uBAC5B,cAACqH,EAAA,EAAD,CACErG,MAAO,CAAEqD,SAAU,QAASnF,OAAQ,OACpCyG,KAAMA,EACN2B,iBAAkB,IAClBC,QAASxB,EAJX,SAME,cAACtC,EAAA,EAAD,CAAO8D,QAASxB,EAAa/E,MAAOA,GAAMwI,MAAOhC,SAAS,UAA1D,SACE,sBAAMxG,MAAO,CAAET,MAAO,SAAtB,wDAnHa,MCzHjBhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJW,OAAQ,KACRG,MAAO,OACP+E,OAAQ,MACR9E,SAAU,OACVF,aAAc,OACdmF,UAAW,oCACXD,OAAQ,QACR4Q,YAAa,WAEflH,MAAO,CACLpJ,OAAQ,UACRR,OAAQ,EACRI,WAAY,UAEdyJ,OAAQ,CACNvF,UAAW,eACXL,WAAY,OACZ6F,WAAY5P,EAAM6P,YAAYC,OAAO,YAAa,CAChDC,SAAU/P,EAAM6P,YAAYE,SAASC,YAGzCC,WAAY,CACV7F,UAAW,kBAEbC,OAAQ,CACNxJ,gBAAiBqP,KAAI,MAEvBC,YAAa,CACXrK,OAAQ,WAEVsK,cAAe,CACbvC,MAAO,OACP9M,MAAO,MACP+E,OAAQ,MACRiE,WAAY,MACZtD,mBAAoB,gBACpBC,eAAgB,OAChB2J,iBAAkB,YAClBhC,SAAU,UAEZiC,UAAW,CACTzC,MAAO,OACPjN,OAAQ,OACR4F,gBAAiB,iCACjBC,mBAAoB,gBACpBC,eAAgB,OAChB3F,MAAO,MACP+E,OAAQ,UACRuI,SAAU,UAEZyH,aAAc,CACZlQ,SAAU,QACV5E,SAAU,OACV+U,UAAW,OACXhM,WAAY,OACZ5J,YAAa,OACbO,KAAM,EACNC,MAAO,EACPI,MAAO,OACP+E,OAAQ,OACRjF,gBAAiB,QACjBmV,QAAS,MACTpG,WAAY,gBAuJDiH,GAnJgB,SAAC,GAAiB,IAAfzL,EAAc,EAAdA,QAC1BjJ,EAAO8G,aAAY,SAACtK,GAAD,OAAWA,EAAMwD,KAAKC,KAAKC,UAC9ClB,EAAUrB,KACVsB,EAAUC,cACV8C,EAAW7B,cAJ6B,EAKlBuE,mBAAS,CAAEuD,UAAW,uBALJ,gCAMtBvD,mBAAS,CAC/BuD,UAAW,qBACXZ,QAAS,UARmC,mBAgCxC8M,GAhCwC,UAgChC,uCAAG,8BAAA3O,EAAA,6DACfvD,QAAQC,IAAI,mBAENC,EAAS,CACbC,QAAS,CAAEC,cAAe,SAAWoC,aAAa1C,QAJrC,SAOGO,IAAM8R,OACtB,2CAA6CnL,EAAQ5C,GACrDlE,GATa,OAOT0D,EAPS,OAWf5D,QAAQC,IAAI,iBAAkB2D,GAC9B5G,EAAQa,KAAK,WAZE,2CAAH,sDAed,OAAKmJ,EAEH,mCACE,cAAC5J,EAAA,EAAD,CACEC,WAAS,EACTkL,MAAI,EACJ/M,UAAU,MACV8B,QAAQ,SACRa,MAAO,CACLxB,MAAO,OACPC,SAAU,OACV6M,MAAO,OACPjN,OAAQ,QATZ,SAYE,eAACoO,GAAA,EAAD,CAAgCzN,UAAWJ,EAAQlB,KAAnD,UACE,uBAEA,sBACEsC,MAAO,CAAEiE,gBAAiB,+BAC1BjF,UAAWJ,EAAQiP,cAFrB,UAIE,qBAAK7O,UAAWJ,EAAQmP,YAAkB,OAG5C,cAACmE,GAAA,EAAD,CACElS,MAAO,CAAEE,QAAS,kBAClBpC,MAAO,cAACiM,GAAA,EAAD,CAAYpH,QAAQ,QAApB,SAA6BkG,EAAQ/K,QAC5CmW,UACI,mCACA,cAAClK,GAAA,EAAD,CAAYpH,QAAQ,QAApB,SACA,cAAC,KAAD,CAAQuG,OAAO,0BAAf,SACCL,EAAQwB,mBAIbhO,OACEuD,EAAKqG,KAAOiO,SAASrL,EAAQsL,OACX,QAAlBtL,EAAQsI,QACN,cAAC7R,EAAA,EAAD,CACEE,aAAW,WACXC,QAAS,WACP,WACGZ,EAAQa,KAAK,CACZiN,SAAU,iBACVC,OAAQ,WAAa/D,EAAQ5C,MANrC,SAWE,cAAC,KAAD,QAKR,cAACyG,GAAA,EAAD,CAAa1M,MAAO,CAACE,QAAQ,GAA7B,SACE,cAACkU,GAAA,EAAD,CAAapU,MAAO,CAAE+O,YAAY,GAAlC,SACGnP,EAAKqG,KAAOiO,SAASrL,EAAQsL,OAC5B,qCACA,cAAC5J,GAAA,EAAD,CACEvE,KAAK,SACLzG,MAAM,UACNE,QAAS,WACPZ,EAAQa,KAAK,CACTiN,SAAU,mBACVC,OAAQ,WAAa/D,EAAQ5C,MANrC,SAUE,cAAC8D,GAAA,EAAD,CAAYpH,QAAQ,QAAQ3C,MAAO,CAAEoQ,WAAY,KAAjD,8CAIF,cAAC7F,GAAA,EAAD,CACEvE,KAAK,SACLzG,MAAM,UACNE,QAAS,WACP,WACGsU,IACAlJ,YACC,kBAAMjJ,EAASgF,GAAmBvC,aAAa1C,UAC/C,MARR,SAaE,cAACoI,GAAA,EAAD,CAAYpH,QAAQ,QAAQ3C,MAAO,CAAEoQ,WAAY,KAAjD,iDAvECvH,EAAQgE,iBAfJ,M,yJC9GjBtP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJc,MAAO,OACPC,SAAU,OACVH,gBAAiBb,EAAMwF,QAAQC,WAAWC,OAE5CoR,OAAQ,CACN/V,MAAO,OACPC,SAAU,OACVsQ,YAAatR,EAAMI,QAAQ,GAC3BiN,aAAc,aACdhF,aAAc,UAIZ9F,GAAQ,CACZwU,WAAY,CACVrW,KAAM,EACNC,MAAO,EACPoJ,WAAY,OACZ5J,YAAa,QAEf4K,MAAO,CACLnF,SAAU,QACVlF,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRK,OAAQ,EACRD,SAAU,OACVuH,KAAM,UAuMKyO,GAnMS,SAAC7X,GACvBiF,QAAQC,IAAI,0CADqB,MAGTwC,mBAAS,CAAE2C,QAAS,SAHX,gCAIL3C,oBAAS,IAJJ,mBAI1BoQ,EAJ0B,KAIlBC,EAJkB,KAK3B/S,EAAW7B,cACXnB,EAAUrB,KAEVqC,EAAO8G,aAAY,SAACtK,GAAD,OAAWA,EAAMwD,KAAKC,QACzCgR,EAAWnK,aAAY,SAACtK,GAAD,OAAWA,EAAM4U,UAAUnR,QAClD+U,EAAelO,aAAY,SAACtK,GAAD,OAAWA,EAAM4U,UAAUnR,QAE5DgC,QAAQC,IAAI,iBAAQ+O,GAEpBgE,qBAAU,WACR,IAAMlT,EAAQ0C,aAAa1C,MAC3BE,QAAQC,IAAI,aACZF,EAASF,GAAYC,IACrBC,EAASgF,GAAmBjF,IAC5BgT,GAAU,KACT,CAACD,IAEJ,IAAIlG,EAAiB,GACjBsG,EAAiB,GACjBC,EAAiB,GACjBC,EAAoB,GACY,GAAhCtK,OAAOC,KAAKkG,GAAUjH,QACxBiH,EAAS/Q,OAAOmV,QAAQrM,KAAI,SAACC,GAEN,cAAnBA,EAAQsI,QACR+C,SAASrL,EAAQsL,QAAUvU,EAAKE,OAAOmG,GAEJ,mBAA/B4C,EAAQqM,mBACVF,EAAiB,uBAAOA,GAAP,CAA0BnM,IAE3C2F,EAAc,uBAAOA,GAAP,CAAuB3F,IAGpB,SAAnBA,EAAQsI,QACR+C,SAASrL,EAAQsL,QAAUvU,EAAKE,OAAOmG,KAEvC6O,EAAc,uBAAOA,GAAP,CAAuBjM,QAKH,GAApC6B,OAAOC,KAAKiK,GAAchL,QAC5BgL,EAAa9U,OAAOqV,UAAUvM,KAAI,SAACC,GACjCkM,EAAc,uBAAOA,GAAP,CAAuBlM,OAhDR,MAoDTvE,oBAAS,GApDA,mBAoD1BK,EApD0B,KAoDpBC,EApDoB,OAqDDN,oBAAS,GArDR,mBAqD1B8Q,EArD0B,KAqDhBC,EArDgB,OAsDD/Q,oBAAS,GAtDR,mBAsD1BgR,EAtD0B,KAsDhBC,EAtDgB,OAuDKjR,oBAAS,GAvDd,mBAuD1BkR,EAvD0B,KAuDbC,EAvDa,KAyEjC,OAAK7V,EAAKE,QAAW+Q,EAAS/Q,OAG5B,qCACE,cAAC4V,GAAD,CAAQ9V,KAAMA,IAGd,cAACX,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAA5C,SACE,sBACEY,MAAO,CAAEiH,QAAS,eAAgBzI,MAAO,OAAQC,SAAU,QAD7D,UAGE,eAACkX,GAAA,EAAD,CACE3V,MAAOA,GAAMwU,WACbzE,QAAM,EACNtQ,QA9BiB,WACzBgW,GAAgBD,IA8BRxW,UAAWJ,EAAQ2V,OAJrB,UAME,cAACqB,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,yCACrBN,EAAc,cAAC,KAAD,IAAiB,cAAC,KAAD,OAGlC,cAACO,GAAA,EAAD,CAAUzY,IAAKkY,EAAaQ,QAAQ,OAAOC,eAAa,EAAxD,SACE,cAACC,GAAA,EAAD,CAAMlM,UAAU,MAAMmM,gBAAc,EAApC,SAC+B,GAA5BnB,EAAkBpL,QACjBoL,EAAkBpM,KAAI,SAACC,GAAD,OACpB,mCACE,cAAC,GAAD,CACEA,QAASA,aAOrB,eAAC8M,GAAA,EAAD,CACE3V,MAAOA,GAAMwU,WACbzE,QAAM,EACNtQ,QApDU,WAClBmF,GAASD,IAoDD3F,UAAWJ,EAAQ2V,OAJrB,UAME,cAACqB,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,mCACrBnR,EAAO,cAAC,KAAD,IAAiB,cAAC,KAAD,OAG3B,cAACoR,GAAA,EAAD,CAAUzY,IAAKqH,EAAMqR,QAAQ,OAAOC,eAAa,EAAjD,SACE,cAACC,GAAA,EAAD,CAAMlM,UAAU,MAAMmM,gBAAc,EAApC,SAC4B,GAAzB3H,EAAe5E,QACd4E,EAAe5F,KAAI,SAACC,GAAD,OACjB,mCACE,cAAC,GAAD,CAAmBA,QAASA,aAMtC,eAAC8M,GAAA,EAAD,CACE3V,MAAOA,GAAMwU,WACbzE,QAAM,EACNtQ,QAxEc,WACtB4V,GAAaD,IAwELpW,UAAWJ,EAAQ2V,OAJrB,UAME,cAACqB,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,4BACrBV,EAAW,cAAC,KAAD,IAAiB,cAAC,KAAD,OAG/B,cAACW,GAAA,EAAD,CAAUzY,IAAK8X,EAAUY,QAAQ,OAAOC,eAAa,EAArD,SACE,cAACC,GAAA,EAAD,CAAMlM,UAAU,MAAMmM,gBAAc,EAApC,SAC4B,GAAzBrB,EAAelL,QACdkL,EAAelM,KAAI,SAACC,GAAD,OACjB,mCACE,cAAC,GAAD,CAAmBA,QAASA,aAMtC,eAAC8M,GAAA,EAAD,CACE3V,MAAOA,GAAMwU,WACbzE,QAAM,EACNtQ,QA5Fc,WACtB8V,GAAaD,IA4FLtW,UAAWJ,EAAQ2V,OAJrB,UAME,cAACqB,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,4BACrBR,EAAW,cAAC,KAAD,IAAiB,cAAC,KAAD,OAG/B,cAACS,GAAA,EAAD,CAAUzY,IAAKgY,EAAUU,QAAQ,OAAOC,eAAa,EAArD,SACE,cAACC,GAAA,EAAD,CAAMlM,UAAU,MAAMmM,gBAAc,EAApC,SAC4B,GAAzBpB,EAAenL,QACdmL,EAAenM,KAAI,SAACC,GAAD,OACjB,mCACE,cAAC,GAAD,CAAmBA,QAASA,kBAQ1C,qBACE7I,MAAO,CACLuD,OAAQ,MACR/E,MAAO,OACPsH,aAAc,WAnHuB,uD,uGCpHzCvI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPW,OAAQZ,EAAMI,QAAQ,GACtBW,MAAO,SAGX2E,MAAO,CACLJ,UAAWtF,EAAMI,QAAQ,GAEzBoJ,QAAS,OACTmP,cAAe,SACfhX,WAAY,UAEd0I,OAAQ,CACNzJ,OAAQZ,EAAMI,QAAQ,GACtBS,gBAAiB,WAEnB+X,KAAM,CACJ7X,MAAO,OACPuE,UAAWtF,EAAMI,QAAQ,GACzBsC,SAAU,SAEZmW,OAAQ,CACNjY,OAAQZ,EAAMI,QAAQ,EAAG,EAAG,GAC5BS,gBAAiB,UACjBC,aAAc,OACdmF,UAAW,wBACXnE,MAAO,eAILS,GAAQ,CACZwI,MAAO,CACL9E,UAAW,0BACXD,OAAQ,kBACRnF,gBAAiB,UA+TNiY,GA3TgB,SAAC3Z,GAE9B,IAGMmK,EAHgB,IAAIyP,gBACxB5Z,EAAM6Z,WAAW9Q,SAASiH,OAAO8J,MAAM,IAEVvU,IAAI,UALK,EAOdmC,mBAAS,IAPK,mBAOjCxG,EAPiC,KAO1BsO,EAP0B,OAQJ9H,oBAAS,GARL,mBAQjCqS,EARiC,KAQrBC,EARqB,OASFtS,mBAAS,IATP,mBASjC4I,EATiC,KASpB2J,EAToB,OAUQvS,oBAAS,GAVjB,mBAUjCwS,EAViC,KAUfC,EAVe,OAWFzS,mBAAS,IAXP,mBAWjCqK,EAXiC,KAWpBC,EAXoB,OAYQtK,oBAAS,GAZjB,mBAYjC0S,EAZiC,KAYfC,EAZe,OAad3S,mBAAS,GAbK,mBAajC4S,EAbiC,KAa1BC,EAb0B,KAelCtI,EAAS,SAACxE,GAEd,OADW,IAAImC,KAAKnC,IAItBwK,qBAAU,WACJ9N,GACF7E,IACGC,IAAI,yCAA2C4E,GAC/CpL,MAAK,SAAC8J,GACL,IAAMoD,EAAUpD,EAAI5F,KAAKC,OACzB+B,QAAQC,IAAI+G,GACZuD,EAASvD,EAAQ/K,OACjB+Y,EAAehO,EAAQqE,aACvB,IAAI5F,EAAOuB,EAAQwB,aAAa+M,MAAM,KACtCxI,EAAetH,EAAK,GAAK,IAAMA,EAAK,IACpC6P,EAAStO,EAAQW,kBAAkBK,oBAGxC,CAAC9C,IAlCoC,MAoChBzC,mBAAS,GApCO,mBAoCjCK,EApCiC,KAoC3BC,EApC2B,OAqCVN,oBAAS,GArCC,mBAqCjC+S,EArCiC,KAqCxBC,EArCwB,KAuClC1Y,EAAUrB,KACVsB,EAAUC,cACV8C,GAAW7B,cAMXqT,GAAc,WAClBxO,GAAQ,IAIJG,GAAc,SAACC,EAAOC,GAC1BpG,EAAQa,KAAK,WACE,cAAXuF,GAGJL,GAAQ,IAGJnF,GAAO,uCAAG,8BAAA2F,EAAA,yDACdkS,GAAW,GACLvV,EAAS,CACbC,QAAS,CAAEC,cAAe,SAAWoC,aAAa1C,QAEpDE,QAAQC,IAAIuC,aAAa1C,OAEnB9B,EAAO,CACX/B,MAAOA,EACPoP,YAAaA,EACb7C,aAAcsE,EACd9E,cAAeqN,GAEjBrV,QAAQC,IAAIjC,IACRkH,EAdU,iCAeN7E,IACHoG,MACC,2CAA6CvB,EAC7ClH,EACAkC,GAEDpG,MAAK,SAAC8J,GACL5D,QAAQC,IAAI,iBAAkB2D,GAC9B2N,KACAvI,YAAW,WACTjJ,GAASgF,GAAmBvC,aAAa1C,QACzCC,GAAS+E,QACR,QAEJpE,OAAM,SAACsD,GACe,IAAjB/H,EAAM8L,QAAcgN,GAAc,GACX,IAAvBjI,EAAY/E,QAAcqN,GAAoB,GACvB,IAAvB/J,EAAYtD,QAAcmN,GAAoB,GAClDO,GAAW,MAjCH,gDAoCNpV,IACHsD,KAAK,0CAA2C3F,EAAMkC,GACtDpG,MAAK,SAAC8J,GACL5D,QAAQC,IAAI,iBAAkB2D,GAC9B2N,KACAvI,YAAW,WACTjJ,GAASgF,GAAmBvC,aAAa1C,QACzCC,GAAS+E,QACR,QAEJpE,OAAM,SAACsD,GACe,IAAjB/H,EAAM8L,QAAcgN,GAAc,GACX,IAAvBjI,EAAY/E,QAAcqN,GAAoB,GACvB,IAAvB/J,EAAYtD,QAAcmN,GAAoB,GAClDO,GAAW,MAlDH,4CAAH,qDAuDb,OACE,qCACGvQ,EACC,cAAC,GAAD,CAAWuL,KAAM,sCAEjB,cAAC,GAAD,CAAWA,KAAM,gCAEnB,cAACiF,GAAA,EAAD,CAAWvN,UAAU,OAAOvL,SAAS,KAArC,SAEE,sBAAKO,UAAWJ,EAAQuE,MAAxB,UACE,cAACiG,GAAA,EAAD,CAAQpK,UAAWJ,EAAQkJ,OAA3B,SACE,cAAC,KAAD,MAGF,cAACiC,GAAA,EAAD,CACEC,UAAU,KACVrH,QAAQ,QACR6U,cAAY,EACZxX,MAAO,CAAEoS,WAAY,SAJvB,4EAWA,sBAAKpT,UAAWJ,EAAQyX,KAAxB,UACE,cAACtQ,EAAA,EAAD,CACEpD,QAAQ,WACRtE,OAAO,SACPoZ,UAAQ,EACRC,WAAS,EACTzR,GAAG,QACHC,MAAM,gBACNyR,KAAK,QACLnV,MAAOmU,EACPiB,WAAYjB,EAAa,2DAAgB,GAEzCkB,YAAY,uEACZC,WAAS,EACT1R,MAAOtI,EACPqI,SAAU,SAACoC,GACLA,EAAEtL,OAAOmJ,MAAMwD,OAAS,IAC1BpB,MAAM,qGACR4D,EAAS7D,EAAEtL,OAAOmJ,MAAMiN,UAAU,EAAG,KACrCuD,GAAc,IAEhBmB,gBAAiB,CACfC,QAAQ,KAGZ,cAACjS,EAAA,EAAD,CAEE1H,OAAO,SACPoZ,UAAQ,EACRC,WAAS,EACTlV,MAAOwU,EACPY,WAAYZ,EAAmB,wEAAmB,GAClD/Q,GAAG,cACHC,MAAM,2CACNyR,KAAK,cACLrb,KAAK,iBAELwb,WAAS,EACT1R,MAAOuI,EAEPxI,SAAU,SAACoC,GACTqG,EAAerG,EAAEtL,OAAOmJ,OACxB,IAAI6R,EAAW,IAAIzL,KACnB3K,QAAQC,IAAI6M,GACZ9M,QAAQC,IAAI,iCAAS+M,EAAOF,GAAauJ,WACzCrW,QAAQC,IAAI,2BAAQmW,EAASC,WAC7BrW,QAAQC,KACL+M,EAAOF,GAAauJ,UAAYD,EAASC,WAAa,KAEzDjB,GAAoB,IAEtBc,gBAAiB,CACfC,QAAQ,KAIZ,eAAC/Y,EAAA,EAAD,CACEe,MAAO,CAAEuD,OAAQ,OACjBrE,WAAS,EACTrB,QAAS,EACTsB,QAAQ,WAJV,UAME,cAACF,EAAA,EAAD,CAAME,QAAQ,SAASgZ,gBAAgB,SAAS/N,MAAI,EAACwI,GAAI,EAAzD,SACE,sBACE5S,MAAO,CACLuD,OAAQ,OACR0D,QAAS,OACT7H,WAAY,SACZkM,MAAO,QACP8G,WAAY,SAEdzP,QAAQ,QARV,UAUE,cAAC,KAAD,IAVF,8CAcF,sBACE3C,MAAO,CACLiH,QAAS,OACT7H,WAAY,SACZxB,YAAa,OAJjB,UAOE,cAAC0B,EAAA,EAAD,CAAY0G,KAAK,QAAQvG,QApLpB,kBAAMyX,EAAQ,EAAIC,EAASD,EAAQ,GAAK,MAoL7C,SACE,cAAC,KAAD,MAGF,cAACnR,EAAA,EAAD,cAEE/F,MAAO,CAAExB,MAAO,OAChByH,GAAG,gBACH0R,KAAK,gBACLS,WAAY,CAAEC,IAAK,EAAGrY,MAAO,CAAEmI,UAAW,WAC1C/B,MAAO8Q,GANT,OAOO,cAGP,cAAC5X,EAAA,EAAD,CAAY0G,KAAK,QAAQvG,QAnMpB,kBAAM0X,EAASD,EAAQ,IAmM5B,SACE,cAAC,KAAD,YAKN,cAACnR,EAAA,EAAD,CACEpD,QAAQ,WACRtE,OAAO,SACPoZ,UAAQ,EACRC,WAAS,EACTY,WAAS,EACTC,KAAM,EACNZ,KAAK,cACLE,YAAY,gEACZrV,MAAOsU,EACPc,WACEd,EAAmB,wFAAyB,GAE9C1Q,MAAO8G,EACPhH,MAAM,qCACN5J,KAAK,WACL2J,GAAG,cACHE,SAAU,SAACoC,GACLA,EAAEtL,OAAOmJ,MAAMwD,OAAS,KAC1BpB,MAAM,sGACRqO,EAAetO,EAAEtL,OAAOmJ,MAAMiN,UAAU,EAAG,MAC3C0D,GAAoB,IAEtBgB,gBAAiB,CACfC,QAAQ,KAGXjR,EACC,cAACwD,GAAA,EAAD,CACEjO,KAAK,SACLob,WAAS,EACT/U,QAAQ,YACR3D,UAAWJ,EAAQ0X,OACnB7W,QAASA,GACT+Y,SAAUnB,EANZ,sCAWA,cAAC9M,GAAA,EAAD,CACEjO,KAAK,SACLob,WAAS,EACT/U,QAAQ,YACR3D,UAAWJ,EAAQ0X,OACnB7W,QAASA,GACT+Y,SAAUnB,EANZ,iDAcR,cAAChR,EAAA,EAAD,CACErG,MAAO,CAAEqD,SAAU,QAASnF,OAAQ,OACpCyG,KAAMA,EACN2B,iBAAkB,KAClBC,QAASxB,GAJX,SAME,cAACtC,EAAA,EAAD,CAAO8D,QAASxB,GAAa/E,MAAOA,GAAMwI,MAAOhC,SAAS,UAA1D,SACGO,EACC,sBAAM/G,MAAO,CAAET,MAAO,SAAtB,iDAEA,sBAAMS,MAAO,CAAET,MAAO,SAAtB,yDCpWNhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ2F,SAAU,WACVlF,KAAM,EACNC,MAAO,EACPmF,OAAQ,MACR/E,MAAO,OACPY,WAAY,SACZ+H,eAAgB,SAChB7I,gBAAiB,UACjBG,SAAU,OACVJ,OAAQ,QAEVoa,MAAO,CACLpV,SAAU,WACVpF,IAAK,MACLE,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRkF,OAAQ,QACR/E,MAAO,MACPY,WAAY,SACZd,gBAAiB,QACjBC,aAAc,gBACdmF,UAAW,mCACXjF,SAAU,QAEZqJ,OAAQ,CACNzE,SAAU,WACVpF,IAAK,KACLG,MAAO,KACPI,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,IAExByH,SAAU,CACRjC,SAAU,WACV+O,WAAY,YACZjS,SAAU,QACVlC,IAAK,KACLE,KAAM,MAERua,aAAc,CACZrV,SAAU,WACV+O,WAAY,QACZnU,IAAK,MACLE,KAAM,MAERoJ,WAAY,CACVlE,SAAU,WACV+O,WAAY,QACZnU,IAAK,MACLE,KAAM,KACNoB,MAAO,QAEToZ,IAAK,CACHtV,SAAU,WACVwE,UAAU,qBACVuK,WAAY,QAEZjU,KAAM,UAIJ6B,GAAQ,CACZ4Y,YAAa,CACXrV,OAAQ,KACRpF,KAAM,EACNC,MAAO,EACPiF,SAAU,QACVhF,OAAQ,OACRG,MAAO,OACPC,SAAU,OACVR,IAAK,EACLS,OAAQ,EACRma,cAAe,QAEjBC,QAAS,CACPD,cAAc,OACdxV,SAAU,WACVjF,MAAM,EACNmF,OAAQ,OACR6O,WAAY,QACZjS,SAAU,MACV0H,UAAW,sBAgHAkR,GA5GO,SAACnc,GACrB,IAAMiC,EAAUC,cACV8C,EAAW7B,cACXnB,EAAUrB,KAEhBsE,QAAQC,IAAI,QAASlF,GACrB,IAAMgD,EAAOhD,EAAM6Z,WAAW9Q,SAASvJ,MAEnC2V,EAAU,GAKd,GAJA8C,qBAAU,WACRjT,EAASF,GAAY2C,aAAa1C,WAGhC/E,EAAM6Z,WAAW9Q,SAASvJ,MAAM+X,KAAM,CACxC,IAAMA,EAAOvX,EAAM6Z,WAAW9Q,SAASvJ,MAAM+X,KAC7CtS,QAAQC,IAAI,UAAWqS,GAClBA,EAAKuE,aAAa9O,SACrBuK,EAAKuE,aAAe,KACjBvE,EAAK5M,WAAWqC,SAAQuK,EAAK5M,WAAa,KAE/CwK,EAAU,CACRzM,SAAU6O,EAAK7O,SACf6M,cAAegC,EAAKhC,cACpBuG,aAAcvE,EAAKuE,aACnBnR,WAAY4M,EAAK5M,WACjBoR,IAAKxE,EAAKwE,UAGP/Y,EAAK8Y,aAAa9O,SACrBhK,EAAK8Y,aAAe,KACjB9Y,EAAK2H,WAAWqC,SAAQhK,EAAK2H,WAAa,KAC/CwK,EAAU,CACRzM,SAAU1F,EAAK0F,SACf6M,cAAevS,EAAKuS,cACpBuG,aAAc9Y,EAAK8Y,aACnBnR,WAAY3H,EAAK2H,WACjBoR,IAAK/Y,EAAK+Y,KAId,IAAIK,GAAW,EACZpZ,EAAK0F,WAAayM,EAAQzM,WAAU0T,GAAW,GAQlD,OAAKpZ,GAASmS,EAGZ,qCACI,cAAC,GAAD,CAAWO,KAAM,qBAAO0G,SAAUA,IACjCpZ,EAAK0F,WAAayM,EAAQzM,UACzB,mCACA,qBAAKtF,MAAOA,GAAM4Y,YAAlB,SACE,cAACrO,GAAA,EAAD,CAAQ9K,QAdD,WACfoC,QAAQC,IAAI,SACZjD,EAAQa,KAAK,CACXiN,SAAS,GAAD,OAAKoF,EAAQzM,SAAb,SACRlJ,MAAOwD,KAU0BI,MAAOA,GAAM8Y,QAAxC,SACE,sDAOR,qBAAK9Z,UAAWJ,EAAQlB,KAAxB,SACE,sBAAKsB,UAAWJ,EAAQ6Z,MAAxB,UACE,gCACE,mBAAGzZ,UAAWJ,EAAQ0G,SAAtB,SAAiCyM,EAAQzM,WACzC,cAAC8D,GAAA,EAAD,CACEpK,UAAWJ,EAAQkJ,OACnBtI,aAAW,SACX6J,IAAG,iCAA4B0I,EAAQI,oBAI3C,oBAAGnT,UAAWJ,EAAQ8Z,aAAtB,yCACW3G,EAAQ2G,gBAEnB,oBAAG1Z,UAAWJ,EAAQ2I,WAAtB,+CACYwK,EAAQxK,cAGpB,sBACEvH,MAAO,CACLqD,SAAU,WACVpF,IAAK,MACLO,MAAO,OACP+E,OAAQ,SALZ,UAQE,oBAAGvE,UAAWJ,EAAQ+Z,IAAtB,2BAEE,0BAEF,qBAAK3Z,UAAU,aAAf,SAEE,mBAAGgB,MAAO,CAAC+C,UAAW,GAAtB,SACGgP,EAAQ4G,mBAjDM,sDCnIzBpb,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ2F,SAAU,WACVlF,KAAM,EACNC,MAAO,EACPmF,OAAQ,MACR/E,MAAO,OACPY,WAAY,SACZ+H,eAAgB,SAChB7I,gBAAiB,UACjBG,SAAU,OACVJ,OAAQ,QAEVoa,MAAO,CACLpV,SAAU,WACVpF,IAAK,MACLE,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRkF,OAAQ,QACR/E,MAAO,MACPY,WAAY,SACZd,gBAAiB,QACjBC,aAAc,gBACdmF,UAAW,mCACXjF,SAAU,QAEZqJ,OAAQ,CACNzE,SAAU,WACVpF,IAAK,KACLG,MAAO,KACPI,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,IAExByH,SAAU,CACRjC,SAAU,WACV+O,WAAY,YACZjS,SAAU,QACVlC,IAAK,KACLE,KAAM,KAGNM,SAAU,OAEZia,aAAc,CACZrV,SAAU,WACV+O,WAAY,QACZnU,IAAK,MACLE,KAAM,MAERoJ,WAAY,CACVlE,SAAU,WACV+O,WAAY,QACZnU,IAAK,MACLE,KAAM,KACNoB,MAAO,QAEToZ,IAAK,CACHtV,SAAU,WACVwE,UAAW,qBACXuK,WAAY,QAEZjU,KAAM,UAIJ6B,GAAQ,CACZiZ,YAAa,CACX5V,SAAU,WACV4D,QAAS,OACT9I,KAAM,EACNC,MAAO,EACPF,OAAQ,OACRG,OAAQ,OACR8I,eAAgB,UAElB+R,KAAM,CACJ9I,WAAY,OACZ/M,SAAU,WACVpF,IAAK,MACLG,MAAO,EACP0N,SAAU,UAEZiE,OAAQ,CACN1M,SAAU,WACVnD,QAAS,MACT1B,MAAO,MACPC,SAAU,OACVJ,OAAQ,YAsOG8a,GAlOI,SAACvc,GAClBiF,QAAQC,IAAI,cAEZ,IAAMlD,EAAUrB,KACVsB,EAAUC,cACVc,EAAOhD,EAAM6Z,WAAW9Q,SAASvJ,MAEvCyF,QAAQC,IAAIlC,GAPgB,MASF0E,mBAAS,IATP,mBASrB8U,EATqB,KASdC,EATc,OAUA/U,mBAAS,CACnCgB,SAAU1F,EAAK0F,SACf6M,cAAe,0BAA4BvS,EAAKuS,cAChD5K,WAAY3H,EAAK2H,WACjBmR,aAAc9Y,EAAK8Y,aACnBC,IAAK/Y,EAAK+Y,MAfgB,mBAUrBW,EAVqB,KAUbC,EAVa,KAkBpBjU,EAA2DgU,EAA3DhU,SAAU6M,EAAiDmH,EAAjDnH,cAAe5K,EAAkC+R,EAAlC/R,WAAYmR,EAAsBY,EAAtBZ,aAAcC,EAAQW,EAARX,IAErD/W,EAAW7B,cACXoG,EAAWqT,uBAAY,SAACjR,GAE5B,GADA1G,QAAQC,IAAI,gBAAiByG,EAAEtL,OAAO0a,MAChB,UAAlBpP,EAAEtL,OAAO0a,KACX0B,EAAS,CACPlH,cAAe5J,EAAEtL,OAAOwc,QAE1B5X,QAAQC,IAAI,iBAAkByG,EAAEtL,OAAOwc,WAClC,CAAC,IAAD,EACmBlR,EAAEtL,OAAlB0a,EADH,EACGA,KAAMvR,EADT,EACSA,MACdmT,EAAU,2BACLD,GADI,mBAEN3B,EAAOvR,SAKR3G,EAAO,uCAAG,WAAO8I,GAAP,uBAAAnD,EAAA,6DACdmD,EAAEmR,iBAEI3X,EAAS,CACbC,QAAS,CACP,eAAgB,sBAChBC,cAAe,SAAWoC,aAAa1C,QAGrC9B,EAAO,CACX0H,WAAYA,EACZjC,SAAUA,EACVoT,aAAcA,EACdC,IAAKA,GAEP9W,QAAQC,IAAI,OAAQjC,IACd8Z,EAAW,IAAIC,UACZC,OAAO,aAAcha,EAAK0H,YACnCoS,EAASE,OAAO,WAAYha,EAAKyF,UACjCqU,EAASE,OAAO,eAAgBnB,GAChCiB,EAASE,OAAO,MAAOlB,GAEU,GAA7BjO,OAAOC,KAAKyO,GAAOxP,QACrB+P,EAASE,OAAO,gBAAiBT,EAAMjH,cAAc,IAGvDtQ,QAAQC,IAAI,eAAgB6X,GA1Bd,UA2BSzX,IAAMoG,MAC3B,0CACAqR,EACA5X,GA9BY,eA2BR+X,EA3BQ,OAgCdjY,QAAQC,IAAI,yCAAYgY,EAASja,MACjC+B,EAASF,GAAY2C,aAAa1C,QAjCpB,UAkCOO,IAAMC,IACzB,wCACAJ,GApCY,QAkCRgY,EAlCQ,OAsCdlY,QAAQC,IAAI,iEAAgBiY,GAC5BlY,QAAQC,IAAI,eAAgB6X,GAE5B9a,EAAQa,KAAK,CACXiN,SAAU,WAAarH,EACvBlJ,MAAO2d,EAAOla,KAAKC,SA3CP,4CAAH,sDA+Cb,OACE,qCACE,cAAC,GAAD,CAAWwS,KAAM,oCACjB,qBAAKtT,UAAWJ,EAAQlB,KAAxB,SACE,sBAAKsB,UAAWJ,EAAQ6Z,MAAxB,UACE,gCACE,mBAAGzZ,UAAWJ,EAAQ0G,SAAtB,SACE,uBAEEtF,MAAO,CACLG,SAAU,MACV1B,SAAU,QACVgF,OAAQ,OACR2O,WAAY,YAEZ9T,gBAAiB,UACjBC,aAAc,OAEhBkZ,UAAQ,EACRjV,OAAK,EACLwX,aAAc1U,EACduS,YAAY,0DACZF,KAAK,WACLxR,SAAUA,MAId,cAACiD,GAAA,EAAD,CACEpK,UAAWJ,EAAQkJ,OACnBtI,aAAW,SACX6J,IAAK8I,IAEP,uBACEnS,MAAOA,GAAMkZ,KACb5c,KAAK,OACLqb,KAAK,QAELxR,SAAUA,OAId,mBAAGnH,UAAWJ,EAAQ8Z,aAAtB,SACE,uBAEE1Y,MAAO,CACLG,SAAU,MACVsD,OAAQ,OACR2O,WAAY,QAEZ9T,gBAAiB,UACjBC,aAAc,OAEhByb,aAActB,EACdb,YAAY,uEACZF,KAAK,eACLxR,SAAUA,MAGd,mBAAGnH,UAAWJ,EAAQ2I,WAAtB,SACE,uBAEEvH,MAAO,CACLG,SAAU,MACVsD,OAAQ,OACR2O,WAAY,QACZ7S,MAAO,OACPjB,gBAAiB,UACjBC,aAAc,OAEhByb,aAAczS,EACdsQ,YAAY,mFACZF,KAAK,aACLxR,SAAUA,MAId,sBACEnG,MAAO,CACLqD,SAAU,WACVpF,IAAK,MACLO,MAAO,OACP+E,OAAQ,SALZ,UAQE,oBAAGvE,UAAWJ,EAAQ+Z,IAAtB,2BAEE,0BAEF,qBAAK3Z,UAAU,aAAf,SAEE,0BACEA,UAAU,aACVgB,MAAO,CACLyD,OAAQ,OACRjF,MAAO,MACP+E,OAAQ,MAERjF,gBAAiB,sBACjBC,aAAc,OAEhByb,aAAcrB,EACdd,YAAY,0DACZF,KAAK,MACLxR,SAAUA,SAMhB,sBAAKnG,MAAOA,GAAMiZ,YAAlB,UACE,cAAC1O,GAAA,EAAD,CACEvK,MAAOA,GAAM+P,OACbpN,QAAQ,WACRpD,MAAM,UACNyG,KAAK,QACLvG,QAAS,WACPZ,EAAQ2T,UANZ,SASE,sBAAMjT,MAAM,SAAZ,wCAKF,cAACgL,GAAA,EAAD,CACEvK,MAAOA,GAAM+P,OACbpN,QAAQ,YACRpD,MAAM,UACNyG,KAAK,QACLvG,QAASA,EALX,SAOE,sBAAMF,MAAM,SAAZ,oD,wCC9SR0a,GAAkB,WAAO,IAAD,EACQ3V,mBAAS,IADjB,mBACvB4V,EADuB,KAGtBta,GAHsB,KAGf8G,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,SAClC8H,EAAYhB,aAAY,SAAAtK,GAAK,OAAIA,EAAM+d,gBAC7CtY,QAAQC,IAAI,OAAQlC,EAAKC,KAAKC,QAC9B+B,QAAQC,IAAI,gBAAiB4F,EAAU7H,KAAKC,QAE5C,IAAMsa,EAASxa,EAAKC,KAAKC,OAAOmG,GAC1BoU,EAAgB3S,EAAU7H,KAAKC,OAarC,OAXwC,GAArC4K,OAAOC,KAAK0P,GAAezQ,QAC5ByQ,EAAczR,KAAI,SAAC0R,GACjB,IAAMC,EAAiBrG,SAASoG,EAAS1a,MACzCiC,QAAQC,IAAIyY,GACPH,IAAWG,IACZL,EAAW,uBAAOA,GAAP,CAAoBI,QAIvCzY,QAAQC,IAAIoY,GAGV,mCAC0B,IAAvBA,EAAYtQ,OACX,0FAEAsQ,EAAYtR,KAAI,SAAC0R,GAAD,OAChB,qCACI,cAAC,GAAD,CAAcA,SAAUA,IACxB,cAACxI,GAAA,EAAD,CAAS0I,OAAK,aAOpBC,GAAiB,SAAC,GAAe,IAAd5R,EAAa,EAAbA,QAAa,EACdvE,mBAAS,IADK,mBAC7BoW,EAD6B,KACxBC,EADwB,KAE9B/b,EAAUrB,KACVqE,EAAW7B,cACX6a,EAAO,uCAAG,WAAMC,EAASC,GAAf,iBAAA1V,EAAA,6DACRpD,EAAU,CACZ,cAAiB,SAAWqC,aAAa1C,OAErC9B,EAAO,CACTkb,aAAa,EACbC,SAAUH,EACVP,SAAUQ,GAEdjZ,QAAQC,IAAIjC,GATA,SAUMqC,IAAMsD,KACtB,oCAAoCqD,EAAQ5C,GAAK,mBACjDpG,EACA,CAACmC,QAAQA,IAbC,cAeZJ,EAASkF,GAAgB+B,EAAQ5C,KAfrB,2CAAH,wDAiBb,OACE,mCAEA,sBAAKjG,MAAO,CAACgL,cAAc,OAA3B,UACA,uBACA1O,KAAK,OACL2e,UAAU,KACV7U,MAAOsU,EACP1a,MAAOA,GAAMkb,OACbrD,YAAY,oEACZ1R,SAAU,SAACoC,GAAD,OAAOoS,EAAOpS,EAAEtL,OAAOmJ,UAEjC,qBAAKpG,MAAOA,GAAMmb,UAAlB,SACA,cAAC7b,EAAA,EAAD,CACIG,QAAS,WACPmb,GAAQ,EAAOF,GAAMC,EAAO,KAG9B3b,UAAWJ,EAAQwc,WACnB5b,aAAW,OANf,SAOI,cAAC,KAAD,cAQF6b,GAAe,SAAC,GAAgB,IAAff,EAAc,EAAdA,SACb1b,EAAUrB,KAEhB,OADAsE,QAAQC,IAAIwY,GAER,mCACA,eAAC7N,GAAA,EAAD,CAAwBzN,UAAWJ,EAAQ0c,KAA3C,UACA,cAACpJ,GAAA,EAAD,CACI+B,UAAWqG,EAASiB,gBACxB,cAAC7O,GAAA,EAAD,UACA,cAAC3C,GAAA,EAAD,CAAYpH,QAAQ,QAAQpD,MAAM,gBAAgByK,UAAU,IAA5D,SACKsQ,EAASA,eALHA,EAASrU,OAetBuV,GAAW,SAAC5e,GAAW,IACnBC,EAAqCD,EAArCC,SAAUuJ,EAA2BxJ,EAA3BwJ,MAAOqV,EAAoB7e,EAApB6e,MAAUC,EADT,aACmB9e,EADnB,8BAG1B,OACE,6CACE+e,KAAK,WACLC,OAAQxV,IAAUqV,EAClBxV,GAAE,uBAAkBwV,GACpBI,kBAAA,kBAA4BJ,IACxBC,GALN,aAOGtV,IAAUqV,GACT,cAACK,GAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAAChS,GAAA,EAAD,UAAalN,UAajBmf,GAAY,SAACP,GACjB,MAAO,CACLxV,GAAG,WAAD,OAAawV,GACf,gBAAgB,gBAAhB,OAAiCA,KAI/BQ,GAAU,SAACrf,GACf,OACE,cAACsf,GAAA,EAAD,aACElS,UAAU,IACVvK,QAAS,SAACuF,GACRA,EAAM0U,mBAEJ9c,KAKJW,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJK,SAAU,EACVU,SAAU,OACVH,gBAAiB,UACjB0M,cAAe,WAIbhL,GAAQ,CAEZmb,UAAY,CACRlU,QAAS,OACTE,eAAgB,SAChBmE,MAAO,QACPlN,MAAO,MACPI,MAAO,MACPP,IAAK,QACLsF,OAAQ,QACR7E,OAAQ,KAEZwc,OAAS,CACLjd,IAAK,QACLE,KAAO,MACPoF,OAAQ,MACR/E,MAAM,MACNsM,aAAe,YACfqR,UAAW,MACXC,WAAa,IACbC,YAAa,MA8CJC,GAzCQ,SAAC,GAAe,IAAdzT,EAAa,EAAbA,QACjBjK,EAAUrB,KACVmK,EAAYhB,aAAY,SAAAtK,GAAK,OAAIA,EAAM+d,gBAFT,EAGV7L,IAAMhK,SAAS,GAHL,mBAG7B8B,EAH6B,KAGtBmW,EAHsB,KASpC,OACE,sBAAKvd,UAAWJ,EAAQlB,KAAxB,UACE,cAACqB,EAAA,EAAD,CAAQsE,SAAS,SAASrD,MAAO,CAAC1B,gBAAgB,QAAlD,SACE,eAACke,GAAA,EAAD,CACE7Z,QAAQ,YACRyD,MAAOA,EACPD,SAVa,SAACnB,EAAOyX,GAC3BF,EAASE,IAUHjd,aAAW,mBAJb,UAME,cAAC,GAAD,aAAS0G,MAAM,kCAASwW,KAAK,WAAcV,GAAU,KACrD,cAAC,GAAD,aAAS9V,MAAM,2BAAOwW,KAAK,UAAaV,GAAU,UAGtD,cAAC,GAAD,CAAU5V,MAAOA,EAAOqV,MAAO,EAA/B,SACkC,IAAjC/T,EAAU7H,KAAKC,OAAO8J,OACrB,0FAEAlC,EAAU7H,KAAKC,OAAO8I,KAAI,SAAC0R,GAAD,OAC1B,qCACI,cAAC,GAAD,CAAcA,SAAUA,IACxB,cAACxI,GAAA,EAAD,CAAS0I,OAAK,YAIpB,eAAC,GAAD,CAAUpU,MAAOA,EAAOqV,MAAO,EAA/B,UACE,cAAC,GAAD,CAAgB5S,QAASA,IACzB,cAAC,GAAD,CAAiBnB,UAAWA,W,UCjO9BnK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJK,SAAU,EACVgR,YAAatR,EAAMI,QAAQ,GAC3B0N,aAAc9N,EAAMI,QAAQ,GAC5BmN,cAAevN,EAAMI,QAAQ,GAC7BoJ,QAAS,OACTxI,SAAU,OACV2I,SAAU,QAEZjE,MAAO,CACLjD,QAASzC,EAAMI,QAAQ,IAEzByd,KAAM,CACF7c,SAAU,YAIZke,GAAY,CACdre,gBAAgB,UAChBE,MAAQ,OACR+E,OAAS,OACThF,aAAc,QAGhB,SAASqe,GAA0BhgB,GAC/B,IAAMiM,EAAUjM,EAAMiM,QAExB,OADEhH,QAAQC,IAAI+G,GAEZ,cAAC0B,GAAA,EAAD,CACEvK,MAAO2c,GADT,SAEA,eAACb,GAAA,EAAD,CAAKzY,SAAS,WAAW4D,QAAQ,cAAjC,UACE,qBAAKjH,MAAO,CAACT,MAAM,UAAWf,MAAM,QAApC,SACA,cAACqe,GAAA,EAAD,aAAkBC,UAAU,IAAI9W,KAAK,OAAOrD,QAAQ,cAAcpD,MAAM,WAAe3C,MACvF,cAACkf,GAAA,EAAD,CACE7d,IAAK,EACLE,KAAM,EACND,OAAQ,EACRE,MAAO,EACPiF,SAAS,WACT4D,QAAQ,OACR7H,WAAW,SACX+H,eAAe,SARjB,SAUK,cAAClI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAA5C,SACG,cAAC0K,GAAA,EAAD,CAAM9D,KAAK,QAAQrD,QAAQ,WAAWuD,MAAK,4BACE,GAA3C2C,EAAQW,kBAAkBK,cACxB,IAAMJ,KAAKC,KAAKb,EAAQW,kBAAkBG,OAAOC,OAASf,EAAQW,kBAAkBK,cAAgB,KAF7D,gBAW3D,IAAMkT,GAAgB,SAAC,GAAe,IAAdlU,EAAa,EAAbA,QAEdjK,GADQE,cACEvB,MAEhB,YAAeL,IAAZ2L,EAEC,0DAQA,mCACA,qBAAK7J,UAAWJ,EAAQlB,KAAxB,SACF,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UACE,eAACoB,EAAA,EAAD,CAAMmL,MAAI,EAACwI,GAAI,EAAG5T,UAAWJ,EAAQuE,MAArC,UACG0F,EAAQ/K,MAAM,uBACd+K,EAAQwB,aAAa,uBAFxB,UAGKxB,EAAQW,kBAAkBG,OAAOC,OAHtC,MAGiDf,EAAQW,kBAAkBK,cACxEhB,EAAQmU,QAEX,cAAC/d,EAAA,EAAD,CAAMmL,MAAI,EAACwI,GAAI,EAAf,SACA,cAACgK,GAAD,CACI5d,UAAWJ,EAAQuE,MAEnB0F,QAAWA,EACXzC,MAAQyC,EAAQW,kBACdC,KAAKC,KACHb,EAAQW,kBAAkBG,OAAOC,OAASf,EAAQW,kBAAkBK,eAAiB,EACrFhB,EAAQW,kBAAkBG,OAAOC,OAASf,EAAQW,kBAAkBK,cAAgB,IAAM,KAAO,EACrGoT,QAAUpU,EAAQW,kBAAqBX,EAAQW,kBAAkBG,OAAOC,OAAU,GAN7Ef,EAAQ5C,cAiBnBiX,GAAmB,SAAC,GAA0B,IAAzBxV,EAAwB,EAAxBA,UAAWmB,EAAa,EAAbA,QAElC,OADAhH,QAAQC,IAAI,WAAY4F,GAEpB,mCACA,cAAC,GAAD,CAAgBmB,QAASA,OAyClBsU,GAnCM,WACjB,IAAMvb,EAAW7B,cACX2H,EAAYhB,aAAY,SAAAtK,GAAK,OAAIA,EAAM+d,gBACvCtJ,EAAWnK,aAAY,SAAAtK,GAAK,OAAIA,EAAMyM,QAAQhJ,QAChDud,EAAgB,GAEdV,EAAO5f,OAAO6I,SAAS+W,KACvBrU,EAAY6L,SAASwI,EAAKtF,MAAM,KAAK,IAgB3C,OAdmC,GAAhC1M,OAAOC,KAAKkG,GAAUjH,QACrBiH,EAASjI,KAAI,SAACC,GACZhH,QAAQC,IAAI,UAAU+G,GACjBR,IAAcQ,EAAQ5C,KACrBmX,EAAa,2BAAOA,GAAP,IAAsBvU,gBAI/CgM,qBAAU,WACkC,IAAvCnK,OAAOC,KAAKjD,EAAU7H,MAAM+J,QAC7BhI,EAASkF,GAAgBuB,OAKrB,qCACJ,cAAC,GAAD,CAAWiK,KAAM,0BAEjB,cAAC,GAAD,CAAezJ,QAASuU,EAAcvU,UAErC6B,OAAOC,KAAKjD,EAAU7H,MAAM+J,OAAS,EAAI,cAAC,GAAD,CAAkBlC,UAAWA,EAAWmB,QAASuU,EAAcvU,UAAa,S,UChJ9H,IAeewU,GAfW,SAAAC,GAAU,OAAI,SAAA1b,GAKpC,OAJAC,QAAQC,IAAI,+BACZF,EAAS,CAACtF,KAAMiF,KANpB,SAAgB+b,GACZ,OAAOpb,IAAMC,IAAI,8CAAgDmb,GAQ1DtW,CAAOsW,GAAY3hB,MACtB,SAAC0G,GACGR,QAAQC,IAAIO,GACZT,EAAS,CAAEtF,KAAMkF,GAA4Bc,QAASD,OAE5DE,OAAM,SAAAC,GACJZ,EAAS,CAAEtF,KAAMmF,GAA0Ba,QAASE,SChBtDjF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJK,SAAU,EACVM,OAAQ,KACRI,SAAU,OACVF,aAAc,OACdmF,UAAW,qCAEbkK,YAAa,CACXrK,OAAQ,QAEVsK,cAAe,CACbvC,MAAO,OACP9D,WAAY,KACZhJ,MAAO,MACP+E,OAAQ,MACRW,mBAAoB,gBACpBC,eAAgB,OAChB2J,iBAAkB,YAClBhC,SAAU,UAEZiC,UAAW,CACTzC,MAAO,OACPjN,OAAQ,OACR4F,gBAAiB,iCACjBC,mBAAoB,gBACpBC,eAAgB,OAChB3F,MAAO,MACP+E,OAAQ,MACRuI,SAAU,cAIV9L,GAAQ,CACVud,YAAc,CACV/e,MAAO,OACPC,SAAU,OACVyB,QAAS,QAEbsd,IAAK,CACDlS,MAAO,OACP9D,WAAa,MAEjBiW,OAAQ,CACJnS,MAAQ,QACR9M,MAAO,MACP+E,OAAO,MACPjF,gBAAgB,SA8CTof,GA1CK,SAAC9gB,GAEjB,IAAMgC,EAAUrB,KAEhB,OACI,mCACI,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,eAACsN,GAAA,EAAD,CAAMzM,MAAOA,GAAMud,YAAave,UAAWJ,EAAQlB,KAAnD,UACI,qBACIsC,MAAO,CAAEiE,gBAAiB,+BAC1BjF,UAAWJ,EAAQiP,cAFvB,SAII,qBAAK7O,UAAWJ,EAAQmP,cAE5B,sBAAK/N,MAAOA,GAAMwd,IAAlB,UACI,mBAAGxd,MAAO,CAAC8F,aAAa,OAAxB,SAAiClJ,EAAM+gB,WACvC,uBAAM3e,UAAW,eAAegB,MAAO,CAACT,MAAO,qBAAsBY,SAAW,SAAhF,UACKvD,EAAMghB,YACP,qCACEhhB,EAAMghB,YADR,QAGG,KACFhhB,EAAMihB,UACP,mCACEjhB,EAAMihB,YAEL,KAEEjhB,EAAMghB,aAAgBhhB,EAAMihB,UAG7B,6BAFA,yECjF1B7d,GAAQ,CACV8d,gBAAkB,CACdtf,MAAO,OACPmF,WAAY,QACZpF,aAAe,SAqCRwf,GAjCS,SAACnhB,GAErB,IAAMohB,EAAetX,aAAY,SAAAtK,GAAK,OAAIA,EAAM6hB,kBAGhD,OACI,qCACA,mBAAGjf,UAAU,eAAegB,MAAO,CAACqD,SAAS,WAAYN,UAAW,SAApE,SACKib,EAAaE,QACVF,EAAane,KAAKC,OAAOyd,YAAY3T,OAAO,+CAE5C,+BAGJ,eAACd,GAAA,EAAD,CAAO9I,MAAOA,GAAM8d,gBAAiBpb,UAAW,EAAhD,UACI,uBACA,qBAAK1C,MAAO,CAACqD,SAAS,WAAYE,OAAO,OAAQ/E,MAAM,OAAQsN,SAAS,QAAxE,SACKkS,EAAaE,QACVF,EAAane,KAAKC,OAAOyd,YAAY3U,KAAI,SAAC2U,GAAD,OACzC,cAAC,GAAD,CACAI,SAAUJ,EAAYjY,SACtBuY,UAAWN,EAAYhW,WACvBqW,YAAaL,EAAY7E,aACzByF,aAAcZ,EAAYa,uBAE1B,4DClClBpe,GAAQ,CACVqe,MAAQ,CACJpX,QAAU,eACV3I,gBAAkB,QAClBC,aAAe,OACfF,OAAQ,gBACR6B,QAAS,cACTC,SAAU,SAEdme,UAAY,CACRjgB,OAAQ,gBACR8B,SAAU,OACVZ,MAAQ,uBAEZgf,UAAY,CACRlgB,OAAQ,gBACR8B,SAAU,OACVZ,MAAQ,0BAIVhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJuJ,QAAS,OACT,QAAS,CACP5I,OAAQZ,EAAMI,QAAQ,KAG1BsN,MAAO,CACL3M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,IAExBuN,MAAO,CACL5M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,QAiEb2gB,GA7DQ,SAAC5hB,GASpB,IARA,IAKI6hB,EALE7f,EAAUrB,KAEZmhB,EAAc9hB,EAAM+hB,aAIpBC,EAAiB,GAIa,IAA1BA,EAAehV,QADvB,CAGI,GAAI8U,EAAY9U,QARP,GAST,CACIgV,EAAelf,KAAKgf,GACpB,OAKQ,IAFZD,EAAMC,EAAYG,YAAY,IAdrB,MAkBLD,EAAelf,KAAKgf,EAAYrL,UAAU,EAAGyL,KAC7CJ,EAAcA,EAAYhI,MAnBrB,MAuBLkI,EAAelf,KAAKgf,EAAYrL,UAAU,EAAGoL,IAC7CC,EAAcA,EAAYhI,MAAM+H,EAAM,IAI9C,OACI,qCACA,sBAAKze,MAAO,CAAC3B,OAAQ,oBAAqB4I,QAAQ,QAAlD,UACI,cAACmC,GAAA,EAAD,CAAQC,IAAKzM,EAAMmQ,UAAW/N,UAAWJ,EAAQuM,QACjD,sBAAMnL,MAAOA,GAAMse,UAAWtf,UAAU,cAAxC,SAAuDpC,EAAMmiB,eAC7D,sBAAM/e,MAAOA,GAAMue,UAAWvf,UAAU,cAAxC,uCACCpC,EAAMoiB,OACP,wBACAvf,QAAS,WAAK7C,EAAMqiB,WAAWriB,EAAMsiB,oBADrC,0BAIA,gCAGHrd,QAAQC,IAAI8c,GAETA,EAAehW,KAAI,SAACuW,GAAD,OACnB,qCACI,mBAAGnf,MAAOA,GAAMqe,MAAOrf,UAAU,QAAjC,SAA0CmgB,IAAiB,iCCxFrE5hB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFuJ,QAAS,OACT,QAAS,CACP5I,OAAQZ,EAAMI,QAAQ,KAG5BuN,MAAO,CACH5M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,GACtBa,OAAO,KAEXyM,MAAO,CACH3M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,QAKxBmC,GAAQ,CACVof,OAAS,CACL3b,OAAS,oCACTlF,aAAe,SAmBR8gB,GAfI,SAACziB,GAChB,IAAMgC,EAAUrB,KAEhB,OACI,mCACA,qBAAKyC,MAAOA,GAAMof,OAAlB,SACI,qBAAKpgB,UAAWJ,EAAQlB,KAAxB,SACI,cAAC0L,GAAA,EAAD,CAAQ4D,IAAKpQ,EAAMkQ,SAAUzD,IAAKzM,EAAM0iB,UAAWtgB,UAAWJ,EAAQwM,eCjChF7N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFuJ,QAAS,OACTE,eAAe,SACf,QAAS,CACP9I,OAAQZ,EAAMI,QAAQ,KAG5BuN,MAAO,CACH5M,MAAOf,EAAMI,QAAQ,IACrB0F,OAAQ9F,EAAMI,QAAQ,KAE1BsN,MAAO,CACH3M,MAAOf,EAAMI,QAAQ,GACrB0F,OAAQ9F,EAAMI,QAAQ,QAsFf0hB,GAjFO,SAAC3iB,GACnBiF,QAAQC,IAAI,qBAAOlF,GACnB,IAAMgC,EAAUrB,KAFa,EAGH+G,oBAAS,GAHN,mBAGtBkb,EAHsB,KAGfC,EAHe,OAIOnb,mBAAS,CAAC5F,OAAO,IAAKJ,gBAAgB,YAJ7C,mBAItBohB,EAJsB,KAIVC,EAJU,KAMvBC,EAAiBpG,uBAAY,SAACqG,EAAcC,GAC9Cje,QAAQC,IAAI,kBAGZ,IAAMie,EAAYC,OAAOH,GAIzBhe,QAAQC,IAAI,2BAAaie,GACzBle,QAAQC,IAAI,2BAAage,GAErBA,GACDljB,EAAMqjB,UACJC,kBAAkB,CAAE5N,KAAMwN,GAAWC,GACrCpkB,MAAK,SAACwkB,GACDA,EAAWC,gBACbve,QAAQC,IAAI,iBAAmBge,EAAU,iBAGzCje,QAAQC,IAAI,yBAA2Bge,EAAU,aAGpDvd,OAAM,SAACC,GACNX,QAAQC,IAAI,iCAGjB,IAEL,OACI,qCACA,qBAAK9B,MAAO,CAACqD,SAAS,WAAY7E,MAAM,OAAQyI,QAAQ,OAAQE,eAAe,SAAUlJ,IAAI,KAA7F,SACI,gCACI,qBAAKe,UAAWJ,EAAQlB,KAAxB,SACI,cAAC,GAAD,CAAQsP,IAAKpQ,EAAMmiB,aAAc1V,IAAKzM,EAAM0iB,UAAWtgB,UAAWJ,EAAQwM,UAE9E,qBAAKpM,UAAWJ,EAAQlB,KAAxB,SACC,mBAAGsC,MAAO,CAACT,MAAM,yBAAjB,SAA4C3C,EAAMmiB,iBAEnD,qBAAK/f,UAAWJ,EAAQlB,KAAxB,SACCd,EAAMoiB,OACP,qCACA,wBACAxG,SAAUgH,EACVxf,MAAO0f,EACPjgB,QAAS,WAAKkgB,EAAc,CAACjhB,OAAO,IAAKJ,gBAAgB,SAASmhB,GAAS,GAAOG,EAAehjB,EAAMyjB,QAAS,SAHhH,SAKI,sBAAMrgB,MAAO,CAACT,MAAM,SAAUP,UAAU,QAAxC,4BAEJ,wBACAgB,MAAO,CAACtB,OAAO,IAAIJ,gBAAgB,SACnCmB,QAAS,WACLmgB,EAAehjB,EAAMyjB,QAAS,YAC9BzjB,EAAMqiB,WAAWriB,EAAMsiB,mBACvBrU,YAAW,WACP4U,GAAS,GACTE,EAAc,CAACjhB,OAAO,IAAKJ,gBAAgB,cAC5C,MARP,SAWA,sBAAM0B,MAAO,CAACT,MAAM,SAAUP,UAAU,QAAxC,+BAIA,oCAMR,qBAAKA,UAAU,oBC9FjBgB,GAAQ,CACVsgB,KAAO,CACHriB,IAAK,MACLoF,SAAU,WACV9D,MAAQ,wBACR0H,QAAU,OACVE,eAAiB,SACjB3I,MAAM,SAoIC+hB,GAhIS,SAAC3jB,GAErB,IAAM4jB,EAAgB,uCAAG,WAAMC,GAAN,mBAAArb,EAAA,6DACfpD,EAAU,CACZ,cAAiB,SAAWqC,aAAa1C,OAErC9B,EAAO,CACTkb,aAAa,GALE,SAOD7Y,IAAMoG,MACtB,oCAAoC1L,EAAMmK,OAAO,oBAAoB0Z,EACrE5gB,EACA,CAACmC,QAAQA,IAVQ,OAObyD,EAPa,OAYnB5D,QAAQC,IAAI2D,EAAI5F,MAZG,2CAAH,sDAehB6gB,EAAiBlH,uBAAY,SAACmH,GAChC,OAAOA,EAAaC,WAAW,SAAAtG,GAAQ,OAA4B,GAAxBA,EAASS,kBAIlD8F,EAAmBna,aAAY,SAAAtK,GAAK,OAAIA,EAAM+d,gBAEpD,GAAI0G,EAAiB3C,QACrB,CACI,IAAIyC,EAAeE,EAAiBhhB,KAAKC,OACzC,GAA2B,GAAvB6gB,EAAa/W,OACb,OACI,mCACA,qBAAK5J,MAAOA,GAAMsgB,KAAlB,SACC,iFAIT,IAAIQ,EAAcJ,EAAeC,GAEjC,IAAoB,GAAhBG,EACA,OACI,mCACA,qBAAK9gB,MAAOA,GAAMsgB,KAAMthB,UAAU,QAAlC,SACA,gHAMJ,IAAMigB,EAAa,SAACwB,GAChBD,EAAiBC,IAGjBM,EAAkBJ,EAAaG,GAC/B/B,EAAegC,EAAgBxF,cAC/BV,EAAUkG,EAAgB/F,SAC1BqF,EAAUU,EAAgBC,SAE9B,GAAInG,EACA,OACA,mCACA,cAAC,GAAD,CACAwF,QAASA,EACTtB,aAAcA,EACdC,OAAQpiB,EAAMoiB,OACdC,WAAYA,EACZC,kBAAmB6B,EAAgB9a,GACnCgb,OAAQrkB,EAAMqkB,OACdhB,UAAWrjB,EAAMqjB,UACjB9L,KAAMvX,EAAMuX,KACZ+M,gBAAiBtkB,EAAMskB,gBACvBC,YAAavkB,EAAMukB,YACnB7D,WAAY1gB,EAAM0gB,eAMlB,IAAIqB,EAAeoC,EAAgBzG,SACnC,OACA,cAAC,GAAD,CAAgByE,aAAcA,EAAcJ,aAAcA,EAAcK,OAAQpiB,EAAMoiB,OAAQC,WAAYA,EAAYC,kBAAmB6B,EAAgB9a,KAKhK,OACD,mCACA,qBAAKjG,MAAOA,GAAMsgB,KAAlB,SACI,0DC3FN/iB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJuJ,QAAS,OACTC,SAAU,OAEV1I,MAAO,OACPsH,aAAc,MAGd,QAAS,CACPmB,QAAS,GAETzI,MAAQ,OACR8M,MAAO,OACP/H,OAAQ9F,EAAMI,QAAQ,IAEtBU,aAAe,SAGnB6iB,QAAU,CACN3d,OAAS,kBACTC,UAAW,yBAEf2d,WAAY,CACR5d,OAAS,uBAIXzD,GAAQ,CACVsb,KAAO,CACH/c,aAAe,gBACfD,gBAAiB,UACjBiF,OAAQ,SAERrD,QAAS,WAMF,SAASohB,GAAY1kB,GACpC,IAAMgC,EAAUrB,KAEhB,OACI,qCACCX,EAAM2kB,QACP,sBAAKvhB,MAAO,CAACwH,WAAY,OAAQ1B,aAAa,QAA9C,UACC,qBAAK9F,MAAO,CAACzB,aAAa,OAAQ0I,QAAQ,eAAgB3I,gBAAgB,UAAWE,MAAM,OAAQ+E,OAAO,UAC3G,sBAAMvE,UAAU,YAAYgB,MAAO,CAACwH,WAAY,MAAM1B,aAAa,QAAnE,iDAIA,KAEA,qBAAK9G,UAAWJ,EAAQlB,KAAxB,SACA,eAACoL,GAAA,EAAD,CAAO9J,UAAWpC,EAAM4kB,WAAY5iB,EAAQwiB,QAAUxiB,EAAQyiB,WAAYrhB,MAAOpD,EAAMie,QAAS,CAACvc,gBAAgB,WAAa,KAAMoE,UAAW,EAA/I,UACI,qBAAK1C,MAAOA,GAAMsb,KAAlB,SACI,mBAAGtb,MAAO,CAAC3B,OAAO,cAAe6B,QAAS,KAAKlB,UAAU,YAAzD,SAAsEpC,EAAM6kB,aAE5E,mBAAGzhB,MAAO,CAAC3B,OAAO,cAAe6B,QAAS,KAAKlB,UAAU,eAAzD,SAAyEpC,EAAMwJ,aAGtFxJ,EAAM2kB,QACP,qCACA,qBAAKvhB,MAAO,CAACxB,MAAM,OAAQsM,aAAa,kCACxC,0BAGA,QCtEctN,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJuJ,QAAS,OACTC,SAAU,OACV1I,MAAO,MACP,QAAS,CACPsN,SAAU,SACVzN,OAAQZ,EAAMI,QAAQ,GACtBW,MAAQ,OACR+E,OAAQ9F,EAAMI,QAAQ,IAEtBS,gBAAiB,sBAEnBI,OAAQ,KAEV+E,OAAQ,CACJlF,aAAc,OACd2B,QAAU,aCpBlB,IAAMF,GAAO,CACT0hB,IAAM,CACFza,QAAS,QACT5D,SAAS,WACTnF,OAAQ,MACRM,MAAO,OACP+E,OAAQ,QA4EDoe,GAvEM,SAAC/kB,GAAW,IAAD,EAEA0H,mBAAS,CAACwG,aAAa,oBAFvB,mBAErB8W,EAFqB,KAEbC,EAFa,OAGAvd,qBAHA,mBAGrBwd,EAHqB,KAGbC,EAHa,KAKtBC,EAActb,aAAY,SAAAtK,GAAK,OAAIA,EAAM+d,gBACzC8H,EAASvb,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,KAAKC,KAAKC,OAAOwF,YAG3D,OAFAzD,QAAQC,IAAImgB,GAGR,qCACA,sBAAKjiB,MAAOA,GAAM0hB,IAAlB,UACI,6BACI,qBAAK1hB,MAAO,CAACiH,QAAQ,OAASE,eAAiB,UAA/C,SACA,mBACAnH,MAAO4hB,EACPniB,QAAS,WAAKsiB,IAAaF,EAAU,CAAC/W,aAAa,qBACnD9L,UAAU,WAHV,iDAMJ,6BACI,qBAAKgB,MAAO,CAACiH,QAAQ,OAASE,eAAiB,UAA/C,SACA,mBACAnH,MAAO8hB,EACPriB,QAAS,WAAKoiB,IAAaE,EAAU,CAACjX,aAAa,qBACnD9L,UAAU,WAHV,oDAQP4iB,EACD,mCACA,cAAC9Y,GAAA,EAAD,CAAO9J,UAAU,eAAe0D,UAAW,EAA3C,SACKsf,EAAY9D,QACb8D,EAAYniB,KAAKC,OAAO8I,KAAI,SAACsZ,GAAD,OACxBA,EAAanH,YACT,KAEAmH,EAAa3G,gBAAkB0G,EAC/B,cAAC,GAAD,CAAWpH,QAASqH,EAAalH,SAAUyG,SAAUS,EAAa3G,cAAenV,MAAO8b,EAAa5H,SAAUkH,YAAY,EAC3HD,QAASW,IAAiBF,EAAYniB,KAAKC,OAAOkiB,EAAYniB,KAAKC,OAAO8gB,WAAU,SAACxa,GAAD,OAAiC,IAAtBA,EAAM2U,kBAErG,cAAC,GAAD,CAAUF,QAASqH,EAAalH,SAAUyG,SAAUS,EAAa3G,cAAenV,MAAO8b,EAAa5H,SAAUkH,YAAY,EAC1HD,QAASW,IAAiBF,EAAYniB,KAAKC,OAAOkiB,EAAYniB,KAAKC,OAAO8gB,WAAU,SAACxa,GAAD,OAAiC,IAAtBA,EAAM2U,qBAG3G,uDAIN,mCACA,cAACjS,GAAA,EAAD,CAAO9J,UAAU,eAAe0D,UAAW,EAA3C,SACKsf,EAAY9D,QACb8D,EAAYniB,KAAKC,OAAO8I,KAAI,SAACsZ,GAAD,OACxBA,EAAanH,YACTmH,EAAa3G,gBAAkB0G,EAC/B,cAAC,GAAD,CAAWpH,QAASqH,EAAalH,SAAUyG,SAAUS,EAAa3G,cAAenV,MAAO8b,EAAa5H,SAAUkH,YAAY,IAE3H,cAAC,GAAD,CAAU3G,QAASqH,EAAalH,SAAUyG,SAAUS,EAAa3G,cAAenV,MAAO8b,EAAa5H,SAAUkH,YAAY,IAE1H,QAGN,2D,UClERjkB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF2F,SAAU,QACV5E,SAAU,OACZwI,QAAS,OACTC,SAAU,OAEV1I,MAAO,MACPN,OAAQ,KACR4H,aAAc,MAGd,QAAS,CAGPtH,MAAQ,OACR+E,OAAQ9F,EAAMI,QAAQ,IAEtBU,aAAe,aAKjByB,GAAQ,CACVmD,MAAQ,CACJE,SAAU,WACVnF,OAAO,KACPM,MAAO,OACP+E,OAAS,OACTjF,gBAAiB,QACjBC,aAAc,kBAElB4jB,eAAiB,CACb9e,SAAU,WACVpF,IAAK,MACLG,MAAO,OAEXkd,KAAO,CACH3X,WAAW,MACXN,SAAU,WACV7E,MAAO,OACPC,SAAS,OACTF,aAAe,gBACfD,gBAAiB,UACjBiF,OAAQ,QAER7E,OAAO,KAGXyc,UAAY,CACR9X,SAAU,WACV4D,QAAS,OACTE,eAAgB,SAChBmE,MAAO,QACPlN,MAAO,MACPI,MAAO,MACPP,IAAK,QACLsF,OAAQ,QACR7E,OAAQ,KAEZwc,OAAS,CACL7X,SAAS,WACTpF,IAAK,QACLE,KAAO,OACPoF,OAAQ,MACR/E,MAAM,MACNsM,aAAe,YACfqR,UAAW,MACXC,WAAa,IACbC,YAAa,MAgIN+F,GA5HK,SAACxlB,GAEjB,IAAMgC,EAAUrB,KAFW,EAIL+G,mBAAS,IAJJ,mBAIpBoW,EAJoB,KAIfC,EAJe,OAKDrW,oBAAS,GALR,mBAKpB+d,EALoB,KAKbC,EALa,OAMKhe,mBAAS,CAACmP,QAAS,MANxB,mBAMpB8O,EANoB,KAMVC,EANU,KAQrBC,EAAS/b,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,QA0BpCgb,EAAO,uCAAG,WAAMC,EAASC,GAAf,iBAAA1V,EAAA,6DACNpD,EAAU,CACZ,cAAiB,SAAWqC,aAAa1C,OAErC9B,EAAO,CACTkb,aAAa,EACbC,SAAUH,EACVP,SAAUQ,GAEdjZ,QAAQC,IAAIjC,GATF,SAUQqC,IAAMsD,KACtB,oCAAoC5I,EAAMmK,OAAS,mBACnDlH,EACA,CAACmC,QAAQA,IAbD,yDAAH,wDAiBb,OACI,mCACA,eAAC8G,GAAA,EAAD,CAAO9I,MAAOA,GAAMmD,MAAOT,UAAW,EAAtC,UACI,cAACzD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,qBAAKH,UAAWJ,EAAQlB,KAAxB,SACI,eAACoL,GAAA,EAAD,CAAOpG,UAAW,EAAlB,UACI,sBAAK1C,MAAOA,GAAMsb,KAAlB,UAEQmH,EAAOvE,QACP,sBACAle,MAAO,CAACwH,WAAY,QACpBxI,UAAU,QAFV,SAGEyjB,EAAO5iB,KAAKC,OAAOwF,WAErB,wDAEJ,sBAAKtF,MAAO,CAACsL,MAAM,SAAnB,UACI,sBAAMtM,UAAU,QAAQgB,MAAO,CAACG,SAAU,OAA1C,8EACA,cAACuiB,GAAA,EAAD,CACI1iB,MAAO,CAACT,MAAO,QAASnB,MAAQ,MAAO8B,QAAS,KAChD8F,KAAK,QACLoS,WAAY,CAAE,aAAc,4BAC5B3Y,QAnDb,WAGX+iB,EAFAH,EAEY,CAAC5O,QAAS,IAAKxM,QAAU,QAIzB,CAACwM,QAAS,MAE1B6O,GAAS,SAAAK,GAAS,OAAKA,cA8CP,qBAAK3iB,MAAOuiB,EAAUvjB,UAAU,qBAAhC,SACI,mBAAGA,UAAU,eAAegB,MAAO,CAAC6H,UAAU,qBAAsBtI,MAAO,QAASiI,WAAY,MAAOrH,SAAS,SAAhH,wIAEJ,uBACA7D,KAAK,OACL2e,UAAU,KACV7U,MAAOsU,EACP1a,MAAOA,GAAMkb,OACbrD,YAAY,oEACZ1R,SAAU,SAACoC,GAAD,OAAOoS,EAAOpS,EAAEtL,OAAOmJ,QACjCwc,WA3ED,SAACra,GACH,SAATA,EAAEsa,MACFjI,GAAQ,EAAOF,GACfC,EAAO,IACP/d,EAAMkmB,oBACNlmB,EAAMmmB,QAAQ,CAAClb,UAAY,uBAC3BjL,EAAMuW,OAAO,CAACM,QAAS,IAAKH,UAAW,qBAuE3B,qBAAKtT,MAAOA,GAAMmb,UAAlB,SACA,cAAC7b,EAAA,EAAD,CACIG,QAAS,WACD4iB,GAEAzH,GAAQ,EAAM,iDACdD,EAAO,IACP/d,EAAMkmB,oBACNlmB,EAAMmmB,QAAQ,CAAClb,UAAY,uBAC3BjL,EAAMuW,OAAO,CAACM,QAAS,IAAKH,UAAW,iBACvCzI,YAAW,WAAKjO,EAAMuW,OAAO,CAAClM,QAAS,WAAW,MAGlD2T,GAAQ,EAAOF,GAAMC,EAAO,IAC5B/d,EAAMkmB,oBACNlmB,EAAMmmB,QAAQ,CAAClb,UAAY,uBAC3BjL,EAAMuW,OAAO,CAACM,QAAS,IAAKH,UAAW,iBACvCzI,YAAW,WAAKjO,EAAMuW,OAAO,CAAClM,QAAS,WAAW,MAE1DjI,UAAWJ,EAAQwc,WACnB5b,aAAW,OAnBf,SAoBI,cAAC,KAAD,eAMpB,cAACF,EAAA,EAAD,CAAYU,MAAOA,GAAMmiB,eAAgB1iB,QAAS,WAAK7C,EAAMmmB,QAAQ,CAAClb,UAAY,uBAAwBjL,EAAMuW,OAAO,CAACM,QAAS,IAAKH,UAAW,iBAAkBzI,YAAW,WAAKjO,EAAMuW,OAAO,CAAClM,QAAS,WAAW,MAAOzH,aAAW,gBAAvO,SACI,cAAC,KAAD,CAAkBW,SAAS,kB,UCxLjC5C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJuJ,QAAS,OACT7H,WAAY,SACZd,gBAAiB,qBACjBmF,OAAQ,qCACRC,UAAW,OACXlF,MAAO,OACP+E,OAAQ,QACRhF,aAAc,QAEhBka,MAAO,CACLvY,QAAS,aACT7B,OAAS,IACT4I,QAAS,OACT7H,WAAY,SACZd,gBAAiB,qBACjBoF,UAAW,OACXsf,MAAQ,MACRzf,OAAQ,SAEV0f,MAAO,CACLzb,WAAY/J,EAAMI,QAAQ,GAE1B0B,MAAO,2BACP2jB,KAAM,GAERC,QAAS,CACP5f,OAAQ,GACRlF,OAAQ,OAKN2B,GAAQ,CACVojB,eAAiB,CACb5kB,MAAO,QACP+E,OAAO,QACP3F,YAAY,MACZqG,gBAAgB,kCAChB6J,iBAAkB,YAClB3J,eAAgB,WAEpBkf,gBAAkB,CACd7kB,MAAO,QACP+E,OAAO,QACPU,gBAAgB,kCAChB6J,iBAAkB,YAClB3J,eAAgB,WAEpBmf,eAAiB,CACb9kB,MAAO,QACP+E,OAAO,QACPU,gBAAgB,iCAChB6J,iBAAkB,YAClB3J,eAAgB,YAIT,SAASof,GAAoB3mB,GAExC,IAAMgF,EAAW7B,cACZnB,EAAUrB,KAMjB,OACI,qCACF,eAACuL,GAAA,EAAD,CAAO9J,UAAWJ,EAAQlB,KAA1B,UACE,cAAC8lB,GAAA,EAAD,CACExkB,UAAWJ,EAAQqkB,MACnBpL,YAAY,wCACZzR,MAAOxJ,EAAM6mB,QACbtd,SAAU,SAACoC,GAEJA,EAAEtL,OAAOmJ,MAAMwD,OAAS,KACzBpB,MAAM,kFACR5L,EAAM8mB,aAAanb,EAAEtL,OAAOmJ,MAAMiN,UAAU,EAAG,OAEnDuP,WAlBa,SAACra,GACH,SAATA,EAAEsa,KACFjmB,EAAM+mB,mBAkBR,cAACrkB,EAAA,EAAD,CAAYG,QAAS7C,EAAM+mB,cAAenkB,aAAW,OAArD,SACA,cAAC,KAAD,CAAUQ,MAAO,CAACT,MAAM,gBAG5B,eAACuJ,GAAA,EAAD,CAAO9J,UAAWJ,EAAQ6Z,MAA1B,UAEG7b,EAAMoiB,OACL,cAAC1f,EAAA,EAAD,CACAU,MAAOA,GAAMsjB,eACb9jB,aAAW,eACXC,QAAS,WAAKmC,EAASyb,GAAkBzgB,EAAM0gB,aAAc1gB,EAAMgnB,WAAYhnB,EAAMuW,OAAO,CAAClM,QAAS,QAASqM,UAAW,mBAG5H,cAAChU,EAAA,EAAD,CACAG,QAAS,WAAK7C,EAAMmmB,UAAWnmB,EAAMuW,OAAO,CAAClM,QAAS,QAASqM,UAAW,iBAAkBtU,UAAWJ,EAAQwc,WAAY5b,aAAW,WACtIQ,MAAOA,GAAMojB,iBAMb,cAAC9jB,EAAA,EAAD,CACAU,MAAOA,GAAMqjB,gBACb5jB,QAAS,WAAKoC,QAAQC,IAAI,gBAAiBlF,EAAMsW,WAAYtW,EAAMuW,OAAO,CAAClM,QAAS,QAASqM,UAAW,iBAAkBtU,UAAWJ,EAAQilB,YAAarkB,aAAW,wB,wBC7F5JskB,I,OA7BCC,gBAAK,SAAAnnB,GAAU,IAAD,EAC0BA,EAA9C6mB,QAAWO,EADS,EACTA,OAAwB1R,GADf,EACD2R,eADC,EACe3R,MAG3C,OAUE,cATA,CASA,OAAKtS,MAAO,CAACiH,QAAQ,OAAQzI,MAAO,QAApC,UACI,qBAAKwB,MAAO,CAACT,MAAO,wBAAyB0H,QAAQ,OAAQzI,MAAO,MAAOH,OAAQ,gBAAnF,SACK2lB,IAEL,qBAAKhkB,MAAO,CAACqD,SAAS,WAAY7E,MAAO,OAAQC,SAAW,OAAQwI,QAAQ,OAAQid,UAAW,YAAc/b,UAAW,QAAxH,SACEmK,W,wDCPK6R,GAbK,SAAAvnB,GAClB,OACE,cAAC,KAAD,CAAMoC,UAAU,yBAAyBgB,MAAOpD,EAAMwnB,eAAtD,SACE,cAAC,KAAD,CAAOhL,MAAOiL,KAAMC,uBAAwBpX,YAAatQ,EAAMsQ,iB,UCgB/DlN,GAAQ,CACVukB,mBAAoB,CAChBlhB,SAAU,QACV4D,QAAS,OACT7H,WAAY,SACZolB,iBAAmB,SACnBjhB,OAAS,QACTrF,OAAO,KACPM,MAAO,MACPgJ,WAAW,OACX5J,YAAY,OACZa,SAAU,OACVC,OAAO,KAEX+lB,YAAY,CACRphB,SAAU,WACV4D,QAAS,OACT7H,WAAY,SACZjB,KAAO,KACPK,MAAO,OACPgJ,WAAW,OACX5J,YAAY,OACZa,SAAU,OACVC,OAAO,KAEXT,IAAM,CACFoF,SAAW,WACXpF,IAAM,QAKRV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJuJ,QAAS,OACT,YAAa,CACXO,WAAY/J,EAAMI,QAAQ,SA2InB6mB,gBARS,SAAAtoB,GAAU,IACxBuoB,EAAavoB,EAAbuoB,SAER,MAAO,CAAErf,SADYlJ,EAAMwD,KAAnB0F,SACWqf,cAKmB,CAAEC,mBC/LR,SAAA7d,GAAM,OAAI,SAAAnF,GAC1CA,EAAS,CAAEtF,KAAM+D,IAEjB,IAAMwkB,EAAS,IAAIC,KAAJ,UCVU,WACzB,IAEIC,EAAW,QAQf,MAN0B,WAJTjoB,OAAO6I,SAIXof,WACXA,EAAW,UAGIA,EAAW,qBDCgBC,GAA7B,iBAAmDje,EAAnD,MAcf,OAZA8d,EAAOI,OAAQ,EAIfpjB,QAAQC,IAAI,kCAAkC+iB,GAE9CA,EAAOK,OAAS,SAAAlgB,GAAK,OAAInD,QAAQC,IAAI,wBACrC+iB,EAAOM,QAAU,SAAAngB,GAAK,OAAInD,QAAQC,IAAI,iBAAkBkD,IACxD6f,EAAOO,UAAY,SAAApgB,GAAK,OAAIpD,EAAS,CAAEtF,KAAMgE,EAAkBgC,QAAS,CAAEqiB,SAAUU,KAAKC,MAAMtgB,EAAMnF,UAErGglB,EAAOU,QAAU,SAAAvgB,GAAK,OAAInD,QAAQC,IAAI,2BAE/B+iB,KD8KMH,EAtIF,SAAA9nB,GAET,IAAMgC,EAAUrB,KAEZioB,EAAa1oB,OAAO6I,SAAS+W,KACjC7a,QAAQC,IAAI,cAAe0jB,GAC3B,IAGMC,EAHUD,EAAWpO,MAAM,KACT,GAAGA,MAAM,KACT,GAAGA,MAAM,KACV,GAGjBsO,EAAiB,WACnB,IAAIC,EAAUC,SAASC,cAAc,aACjCF,IAEFA,EAAQG,UAAYH,EAAQI,aAAeJ,EAAQI,aAAe,GAEpElkB,QAAQC,IAAI,SAlBE,EAqBUwC,oBAAS,GArBnB,mBAqBb0hB,EArBa,aAsBU1hB,oBAAS,IAtBnB,mBAsBb2hB,EAtBa,aAuBU3hB,mBAAS,KAvBnB,mBAuBbmf,EAvBa,KAuBJyC,EAvBI,OAwBgB5hB,mBAAS,MAxBzB,mBAwBb6hB,EAxBa,KAwBDC,EAxBC,OA6BoExpB,EAAhF+nB,SAAYA,EA7BA,EA6BAA,SAAmB0B,EA7BnB,EA6BUL,QAAmCpB,GAAuBhoB,EAAlC0I,SAAkC1I,EAAvBgoB,oBACzD0B,EAA8B1pB,EAA9B0pB,KAAMC,EAAwB3pB,EAAxB2pB,aAGR3mB,GAHgChD,EAAV4pB,OAGf9f,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,KAAKC,KAAKC,WAElD+U,qBAAU,WACNsR,GAAcA,EAAWM,QACzBL,EAAcxB,EAAmBa,MAChC,CAACa,IASJzb,WAAW6a,EAAe,KAsC9B,OACI,eAAC,IAAMgB,SAAP,WAEE,qBAAK1mB,MAAO,CAAEuD,OAAQgjB,EAnIN,KAmIhB,SAjCEF,EACA,mCACJ,cAACpnB,EAAA,EAAD,CAAMe,MAAOA,GAAM/B,IAAKiB,WAAS,EAACC,QAAQ,SAA1C,SACI,qBAAMH,UAAWJ,EAAQlB,KAAzB,SACI,cAACmf,GAAA,EAAD,UAMH8H,EAAS/a,OAGV,mCACF,sBAAK5K,UAAU,WAAf,UACE,cAAC,KAAD,CACEA,UAAU,4BACV2nB,WAAW,aACXC,WAAYjC,EACZkC,WAAY,SAAApD,GAAO,OAAI,cAAC,GAAD,CAAqCA,QAASA,GAAhCA,EAAQxd,GAAGyL,eAK/CsU,GAAWC,GAAW,qBAAKjnB,UAAU,oBAAf,SAAmC,cAAC,KAAD,WAdnC,cAAC,GAAD,CAAakO,YAAY,GAAGkX,eAAgB,CAAE0C,YAAa,OA2BpF,cAAC7nB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SAEA,qBAAKa,MAAOA,GAAMukB,mBAAlB,SACI,qBAAKvkB,MAAOA,GAAMykB,YAAlB,SACQ,cAAC,GAAD,CACA1d,OAAQnK,EAAMmK,OACduW,WAAY1gB,EAAM0gB,WAClB0B,OAAQpiB,EAAMoiB,OACdyE,QAASA,EACTC,aAAcwC,EACdvC,cA9DM,WAChBwC,IACFA,EAAWY,KAAK1B,KAAK2B,UAAU,CAAEC,QAAS,cAAepnB,KAAM,CAAEyS,KAAMmR,EAASO,OAAQpkB,EAAK0F,aAC7F4gB,EAAW,IACXrb,WAAW6a,EAAe,OA2DdxS,SAAYtW,EAAMsW,SAClBC,OAAQvW,EAAMuW,OACd4P,QAASnmB,EAAMmmB,QACfa,SAAUhnB,EAAMgnB,uB,OGvKrB,SAASsD,GAAYtqB,GAAQ,IAElCuqB,EAAuBvqB,EAAvBuqB,WAAYlG,EAAWrkB,EAAXqkB,OAEFva,aAAY,SAACtK,GAAD,OAAWA,EAAMgrB,aAyB/C,OAvBAvS,qBAAU,WAER,OAAIsS,GAA4C,IAA9BlG,EAAOE,YAAYvX,QACnC/H,QAAQC,IAAI,yCAEZqlB,EAAWE,YAAW,GAEf,WACLF,EAAWE,YAAW,KAKlBF,GAA2C,GAA7BlG,EAAOE,YAAYvX,QACvC/H,QAAQC,IAAI,yCAEZqlB,EAAWG,OAEJ,WACLH,EAAWI,cANV,IASJ,CAACJ,IAEF,qBAAKnoB,UAAU,iBC1BnB,IAoGewoB,gBApGO,SAAC,GAQhB,IAPLvG,EAOI,EAPJA,OACAhB,EAMI,EANJA,UAGAiB,GAGI,EALJ/M,KAKI,EAJJsT,UAII,EAHJvG,iBACAC,EAEI,EAFJA,YAEI,EADJ7D,WAIuB9D,uBAAY,SAACqG,EAAcC,GAChDje,QAAQC,IAAI,kBAGZ,IAAMie,EAAYC,OAAOH,GAGzBhe,QAAQC,IAAI,uCAAeie,GAC3Ble,QAAQC,IAAI,uCAAege,GAEvBA,GACFG,EACGC,kBAAkB,CAAE5N,KAAMwN,GAAWC,GACrCpkB,MAAK,SAACwkB,GACDA,EAAWC,gBACbve,QAAQC,IAAI,iBAAmBge,EAAU,iBAGzCje,QAAQC,IAAI,yBAA2Bge,EAAU,aAGpDvd,OAAM,SAACC,GACNX,QAAQC,IAAI,iCAGjB,IAeH,OACE,mCACE,sBAAK9C,UAAU,mBAAf,UAEE,qBAAKA,UAAU,uBAAf,SAOE,cAACkoB,GAAD,CACEC,WAAYjG,EACZD,OAAQA,MAGZ,qBAAKjiB,UAAU,gBAAf,SACGmiB,EAAYvY,KAAI,SAAChJ,GAAD,OACf,qBAAKZ,UAAU,wBAAf,SAaE,cAACkoB,GAAD,CAAaC,WAAYvnB,EAAKunB,WAAYlG,OAAQA,KAbRrhB,EAAK8nB,kB,iFCzB7D,IAAMC,GAAcC,cAAW,SAACnqB,GAAD,MAAY,CACvCoqB,MAAO,CACHjqB,YAAaH,EAAMI,QAAQ,GAC3BW,MAAO,GACP+E,OAAQ,GACVtF,IAAK,GACLM,aAAc,OACdkF,OAAO,aAAD,OAAehG,EAAMwF,QAAQC,WAAWC,OAC9CjD,QAAS,YARK0nB,CAUdE,MAEA9nB,GAAQ,CACV+nB,YAAa,CACT9gB,QAAS,eACTzI,MAAO,OACP6E,SAAU,QACVE,OAAQ,QAIZykB,YAAa,CACT3kB,SAAS,WACT5E,SAAU,OACV+U,UAAW,OACXhV,MAAO,OACP+E,OAAQ,OACRtF,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,OACRC,gBAAiB,WAGrB2pB,YAAa,CACT5kB,SAAU,WACVmQ,UAAW,MACXjQ,OAAQ,KACR/E,MAAO,QAIX0pB,YAAa,CACT7kB,SAAU,WACVE,OAAQ,MACR/E,MAAO,QAGX2pB,eAAgB,CACZ9kB,SAAU,WACV9E,aAAc,oBACdL,OAAQ,KACRqF,OAAQ,OACR/E,MAAO,OACPF,gBAAiB,UACjBI,OAAO,KAGX0pB,MAAO,CACH/kB,SAAU,WACV7E,MAAO,OACP+E,OAAQ,QAGZ8kB,IAAK,CACD7pB,MAAO,MACP2B,SAAU,MACVD,QAAS,gBACTX,MAAO,yBAGX+oB,IAAK,CACD9pB,MAAO,KACP0B,QAAS,cAEbqoB,MAAQ,CACJ/gB,WAAY,QACZ5J,YAAa,UAEjB4qB,UAAY,CACRroB,SAAW,QAEfsoB,UAAY,CACRllB,OAAQ,SAGZmlB,UAAW,CACPzhB,QAAS,aACT0hB,cAAe,SACfplB,OAAQ,QAEZka,OAAQ,CACJ7f,YAAa,MACb0N,MAAO,SAGXgP,SAAU,CACN9b,MAAQ,OAGZoqB,WAAa,CACTvlB,SAAU,WACVpF,IAAK,UAGTuK,MAAQ,CACJ9E,UAAW,0BACXD,OAAQ,kBACRnF,gBAAgB,SAGpBuqB,SAAW,CACPtqB,aAAa,OACb8E,SAAS,WACTpF,IAAK,MACLG,MAAO,MACPI,MAAO,MACP+E,OAAQ,MACRL,WAAW,2BACX+D,QAAS,OACT7H,WAAY,SACZ+H,eAAgB,SAChB5H,MAAO,SAEXupB,YAAc,CACVvqB,aAAa,OACb8E,SAAS,WACTpF,IAAK,MACLG,MAAO,QACPI,MAAO,MACP+E,OAAQ,MACRjF,gBAAgB,2BAChB2I,QAAS,OACT7H,WAAY,SACZ+H,eAAgB,UAEpB4hB,QAAU,CACNvhB,WAAY,MACZhJ,MAAO,QACP+E,OAAQ,QACRU,gBAAiB,6BACjBE,eAAgB,UAChB2J,iBAAkB,cAQpBmT,GAAS+H,KAASC,aAAa,CAAEC,MAAO,MAAOC,KAAM,QACrDlJ,GAAYmJ,KAASC,eAFb,oCA6VCC,GAtVK,SAAC1sB,GACjB,IAAMiC,EAAUC,cAChB+C,QAAQC,IAAI,oBAAqBlF,GAIjC,IAAMgF,EAAW7B,cAGXwpB,EAAW,uCAAG,WAAMC,GAAN,mBAAApkB,EAAA,6DACVpD,EAAU,CACZ,cAAiB,SAAWqC,aAAa1C,OAErC9B,EAAO,CACT4pB,YAAc7sB,EAAM0gB,WACpBoM,SAAWF,GAEf3nB,QAAQC,IAAI,0BAA2BjC,GARzB,SASIqC,IAAMsD,KACtB,oCAAoC5I,EAAMmK,OAAO,eACjDlH,EACA,CAACmC,QAAQA,IAZG,OASRyD,EATQ,OAcd5D,QAAQC,IAAI2D,EAAI5F,MAdF,2CAAH,sDAiBX8pB,EAAc,uCAAG,WAAMC,GAAN,mBAAAxkB,EAAA,6DACbpD,EAAU,CACZ,cAAiB,SAAWqC,aAAa1C,OAErC9B,EAAO,CACT6nB,IAAMkC,GAEV/nB,QAAQC,IAAI,8BAA+BjC,GAP1B,SAQCqC,IAAM2nB,IACtB,oCAAoCjtB,EAAMmK,OAAO,cAAcnK,EAAM0gB,WACrEzd,EACA,CAACmC,QAAQA,IAXM,OAQXyD,EARW,OAajB5D,QAAQC,IAAI2D,EAAI5F,MAbC,2CAAH,sDAgBdiqB,EAAa,uCAAG,gCAAA1kB,EAAA,6DACZpD,EAAU,CACZ,cAAiB,SAAWqC,aAAa1C,OAErC9B,EAAO,GAJG,SAKEqC,IAAMoG,MACtB,oCAAoC1L,EAAMmK,OAAO,eAAenK,EAAM0gB,WACtEzd,EACA,CAACmC,QAAQA,IARK,OAKVyD,EALU,OAUhB5D,QAAQC,IAAI2D,EAAI5F,MAVA,2CAAH,qDA1CQ,EAwDCyE,mBAAS,CAACuD,UAAY,uBAxDvB,mBAwDpB8L,EAxDoB,KAwDZC,EAxDY,OAyDDtP,mBAAS,CAACuD,UAAY,uBAzDrB,mBAyDpBkiB,EAzDoB,KAyDbC,EAzDa,OA0DC1lB,mBAAS,CAACuD,UAAY,uBA1DvB,mBA0DpBoiB,EA1DoB,KA0DZC,EA1DY,OA2DH5lB,mBAAS,CAAC2C,QAAQ,SA3Df,mBA2DpB4M,EA3DoB,KA2DdC,EA3Dc,OA6DHxP,mBAAS,IA7DN,mBA6DpBgiB,EA7DoB,KA6Dd6D,EA7Dc,OA8DH7lB,oBAAS,GA9DN,mBA8DpBK,EA9DoB,KA8DdC,EA9Dc,OAgEeN,oBAAS,GAhExB,mBAgEpB8lB,EAhEoB,KAgELC,EAhEK,OAiEW/lB,oBAAS,GAjEpB,mBAiEpBgmB,EAjEoB,KAiEPC,EAjEO,OAmEKjmB,oBAAS,GAnEd,mBAmEpBkmB,EAnEoB,KAmEVC,EAnEU,KAyErBC,EAAqB,SAAC1lB,EAAOC,GACpB,cAAXA,GAGAolB,GAAiB,IAOfM,GAAmB,SAAC3lB,EAAOC,GAClB,cAAXA,GAGAslB,GAAe,IAIfK,GAAW,qBACTC,GAAWnkB,aAAY,SAAAtK,GAAK,OAAIA,EAAM6hB,iBAAgB,CAAC2M,KAC3CC,GAAS3M,SACnB2M,GAAShrB,KAAKC,OAAOgrB,SAASC,uBAEtCH,GAAWC,GAAS3M,QACf2M,GAAShrB,KAAKC,OAAOyd,YAAY3T,OAAS,SACzC,qBAGN,IAkBIohB,GAXEjmB,GAAc,SAACC,EAAOC,GACxBwlB,GAAY,GAEZ5f,WAAW/N,OAAO6I,SAASuL,QAAQ,SAAU,KAE9B,cAAXjM,GAGJL,GAAQ,IArHe,GAyHGN,qBAzHH,qCCtMhB,SAAkB2c,GAC/Bpf,QAAQC,IAAI,YACZ,IAAMmpB,EAAQ,mCAFyB,EAIO3mB,mBAAS,IAJhB,mBAIhC4c,EAJgC,KAIfgK,EAJe,OAKL5mB,oBAAS,GALJ,mBAKhCmjB,EALgC,KAKrB0D,EALqB,OAMD7mB,mBAAS,IANR,mBAMhC6c,EANgC,KAMnBiK,EANmB,KAOjCC,EAAY3kB,aAAY,SAACtK,GAAD,OAAWA,EAAMgrB,aAEzCxlB,EAAW7B,cATsB,SAWxBurB,IAXwB,2EAWvC,4BAAAlmB,EAAA,sEACgC4jB,KAASuC,2BACrCC,mCAFJ,cACQC,EADR,OAIEP,EAAmBO,GAJrB,kBAKSA,GALT,4CAXuC,kEAmBvC,WAAoBC,EAAS/pB,EAAOse,EAAW+K,EAAYhM,GAA3D,eAAA5Z,EAAA,yDACEvD,QAAQC,IAAI,QAEPmf,EAHP,iEAKgCqK,IALhC,cAKQG,EALR,gBAMQxK,EAAO0K,KAAKV,EAAOS,EAAS/pB,GANpC,wBASQse,EACL7c,MAAM,CAAEzB,MAAO,KAAM+lB,IAAK1H,OAAOiB,EAAOyG,OACpC/rB,MAAK,WACJkG,QAAQC,IAAI,uCAEbS,OAAM,SAACsD,GACNhE,QAAQC,IAAI,mCAAoC+D,MAfxD,yBAmBQoa,EAAU2L,GAAG,0BAA0B,SAACC,EAAU5mB,GACtDpD,QAAQC,IACN,kCAAoC+pB,EAAW,YAAc5mB,MArBnE,yBA0BQ+lB,EAAWW,OA1BnB,yBA6BQ1L,EAAU2L,GAAG,mBAAmB,SAACE,EAAKC,GAExClqB,QAAQC,IACN,gCAAkCiqB,EAAS,gBAAkBD,EAAIxZ,MAIlD,SAAbwZ,EAAIxZ,MACNzQ,QAAQC,IAAI,aAEZmf,EAAO+K,QAAQP,GACfvK,EAAgBqG,OAChBrG,EAAgBmG,YAAW,IAEL,aAAbyE,EAAIxZ,MACbzQ,QAAQC,IAAI,iBAEZmf,EAAOgL,YACP/K,EAAgBoG,QAEM,YAAbwE,EAAIxZ,MACbzQ,QAAQC,IAAI,oCACZoqB,KAGArqB,QAAQC,IAAI,6BAA8BgqB,MAtDlD,YA4DM9M,EA5DN,wBA6DInd,QAAQC,IAAI,wBA7DhB,UA8DUF,EAAS,CAACtF,KAAM,YAAagG,QAAS,SA9DhD,yBA+DU2e,EAAO+K,QAAQP,GA/DzB,uCAkEI5pB,QAAQC,IAAI,yBAlEhB,UAmEUF,EAAS,CAACtF,KAAM,aAnE1B,QAsEEuF,QAAQC,IAAI,gBACZqpB,GAAa,GAvEf,6CAnBuC,+BA6FxBe,IA7FwB,2EA6FvC,sBAAA9mB,EAAA,6DACM8b,IACFA,EAAgBqG,OAChBrG,EAAgBuF,SAMlB2E,EAAe,IACfD,GAAa,GAVf,SAaQlK,EAAOiL,QAbf,4CA7FuC,sBAiJvC,OApCArX,qBAAU,WACR,GAAKoM,EAAL,CACAmK,EAAenK,EAAOE,aAEtB,IAAMgL,EAAmB,uCAAG,WAAOvsB,EAAMwsB,GAAb,SAAAhnB,EAAA,sEACpB6b,EAAOoL,UAAUzsB,EAAMwsB,GADH,OAI1BhB,GAAe,SAACjK,GAAD,OAAiBmL,MAAMC,KAAKtL,EAAOE,gBAJxB,2CAAH,wDAOnBqL,EAAwB,SAAC5sB,GAC7BwrB,GAAe,SAACjK,GAAD,OAAiBmL,MAAMC,KAAKtL,EAAOE,iBAG9CsL,EAAmB,SAAC7sB,GACxBwrB,GAAe,SAACjK,GAAD,OAAiBmL,MAAMC,KAAKtL,EAAOE,iBAG9CuL,EAAiB,SAAC9sB,GACtBwrB,GAAe,SAACjK,GAAD,OAAiBmL,MAAMC,KAAKtL,EAAOE,iBAQpD,OALAF,EAAO2K,GAAG,iBAAkBO,GAC5BlL,EAAO2K,GAAG,mBAAoBY,GAC9BvL,EAAO2K,GAAG,cAAea,GACzBxL,EAAO2K,GAAG,YAAac,GAEhB,WACLzL,EAAO0L,IAAI,iBAAkBR,GAC7BlL,EAAO0L,IAAI,mBAAoBH,GAC/BvL,EAAO0L,IAAI,cAAeF,GAC1BxL,EAAO0L,IAAI,YAAaD,OAEzB,CAACzL,IAEG,CACLC,kBACAuG,YACAyE,QACAP,KArJqC,oDAsJrCxK,cACAkK,aDiLIuB,CAAS3L,KANTC,GA5HuB,GA4HvBA,gBACAgL,GA7HuB,GA6HvBA,MACAP,GA9HuB,GA8HvBA,KAEAxK,IAhIuB,GA+HvBsG,UA/HuB,GAgIvBtG,aACAkK,GAjIuB,GAiIvBA,UA0EJ,OArEAxW,qBAAU,WACN,IAAMgY,EAAYC,aAAY,WAC1BlrB,EAASyb,GAAkBzgB,EAAM0gB,aACjC1b,EAASmrB,GAAgBnwB,EAAMmK,WAChC,KAkBH,GAjBAikB,GAAa/K,GAAU+M,cAAcpwB,EAAM0gB,YAC3CqO,GAAK/uB,EAAM0gB,WAAY,KAAM2C,GAAW+K,GAAYpuB,EAAMoiB,QAC1DgM,GAAWY,GAAG,kBAAkB,SAACnI,EAASwJ,GACtCprB,QAAQC,IAAR,kBAAuB2hB,EAAvB,kBAAwCwJ,IAExChN,GAAUiN,SACVhB,KACApC,IACAqD,cAAcN,GA5ClBhrB,QAAQC,IAAI,mCAAW0oB,GACvB5lB,GAAQ,MA8CJhI,EAAMoiB,OACNnU,YAAW,WAAK0e,EAAYtI,GAAOyG,OAAO,KAE1C7c,YAAW,WAAK8e,EAAe1I,GAAOyG,OAAO,KAG7C9qB,EAAMoiB,OACV,CACI,IAAMoO,EAAUvuB,EAAQwuB,MAAM,4DAC9B,OAAO,WACHxrB,QAAQC,IAAI,0BAAYlF,EAAMoiB,QAE9BgM,GAAWsC,YAAY,CAAEhb,KAAM,YAAa3W,MAAK,WAEzCkG,QAAQC,IAAI,sBACbS,OAAM,SAAAC,GAELX,QAAQC,IAAI,yBAGpBme,GAAUiN,SACVhB,KACApC,IACAqD,cAAcN,GACdO,IAGAviB,WAAW/N,OAAO6I,SAASuL,QAAQ,SAAU,MAOjD,IAAMkc,EAAUvuB,EAAQwuB,MAAM,4DAC9B,OAAO,WACHxrB,QAAQC,IAAI,uFAA4B0oB,GAExCQ,GAAWkB,QACXjM,GAAUiN,SACVhB,KACApC,IACAqD,cAAcN,GACdO,IAGAviB,WAAW/N,OAAO6I,SAASuL,QAAQ,SAAU,QAGtD,CAACrS,IAKA,qCACA,sBAAKmB,MAAOA,GAAM+nB,YAAlB,UACI,sBAAK/nB,MAAOA,GAAMgoB,YAAlB,UACI,qBAAKhoB,MAAOA,GAAMioB,YAAlB,SACI,wBAAOjoB,MAAOA,GAAMooB,MAApB,UACI,+BACI,oBAAKmF,QAAQ,IAAIvuB,UAAU,eAAegB,MAAOA,GAAMqoB,IAAvD,SAA8DzrB,EAAM4wB,YACpE,oBAAKC,QAAQ,IAAb,SACI,sBAAKztB,MAAOA,GAAMyd,OAAlB,UACA,qBACIzd,MAAOA,GAAM6oB,SACbppB,QAAS,WAAKZ,EAAQa,KAAK,UAF/B,SAIQ,sBACAV,UAAU,eACVgB,MAAO,CAACG,SAAU,SAFlB,4BAIR,qBACAH,MAAOA,GAAM8oB,YADb,SAGI,cAAC,mBAAD,CACI4E,OAjJZ,WACpBnD,GAAe,IAiJiBjY,KAAMxV,OAAO6I,SAAS+W,KAF1B,SAIA,qBAAK1c,MAAOA,GAAM+oB,sBAQ9B,+BACI,oBAAI/oB,MAAOA,GAAMsoB,IAAjB,SACI,qBAAKtpB,UAAU,WAAWqK,IAAI,uBAElC,oBAAIrJ,MAAO,CAACT,MAAM,4BAA4BP,UAAU,YAAxD,SAAqE4rB,aAKjF,sBAAK5qB,MAAOA,GAAMkoB,YAAlB,UACI,qBAAKloB,MAAO,CAACqD,SAAS,WAAYE,OAAO,OAAzC,SACI,qBAAKvE,UAAU,gBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,6BACA,cAAC2oB,GAAD,CAAagG,aAAc,cAAC,KAAD,IAAYpuB,MAAM,QAA7C,SACI,cAAC,GAAD,CAAQuN,SAAUlQ,EAAMkQ,SAAUwS,UAAW1iB,EAAMmQ,gBAGvD,oBAAI/N,UAAU,WAAd,SACI,sBAAMgB,MAAO,CAACT,MAAO,yBAAyBP,UAAU,YAAxD,SAAqEpC,EAAMkQ,oBAK3F,qBAAK9M,MAAO,CAACqD,SAAS,WAAYE,OAAO,MAAO0D,QAAQ,OAAQ7H,WAAY,UAA5E,SAEQ,8BACK,cAAC,GAAD,CACA2H,OAAQnK,EAAMmK,OACdiY,OAAQpiB,EAAMoiB,OACdiC,OAAQA,GACRhB,UAAWA,GACX9L,KAAMkX,GACNnK,gBAAiBA,GACjBC,YAAaA,GACb7D,WAAY1gB,EAAM0gB,oBAOnC,sBAAKtd,MAAOA,GAAMmoB,eAAlB,UACI,qBAAKnpB,UAAU,oBACf,cAAC,GAAD,CAAM+H,OAAQnK,EAAMmK,OAAQiY,OAAQpiB,EAAMoiB,OAAQ1B,WAAY1gB,EAAM0gB,WAAYyF,QAASiH,EAAU9W,SAAYU,EAAWgQ,SAAYsG,EAAW/W,OAAQW,EAASwS,KAAMA,EAAMC,aAAa,SAASC,OAAQ,kBAAI2D,EAAQ,eAKnOvtB,EAAMoiB,OACP,sBAAKhf,MAAOiqB,EAAQjrB,UAAU,aAA9B,UACI,cAAC,GAAD,CAAiB+H,OAAQnK,EAAMmK,OAAQuW,WAAY1gB,EAAM0gB,WAAYsG,SAAYsG,EAAW/W,OAAQW,IACpG,cAACxU,EAAA,EAAD,CAAYU,MAAOA,GAAM4oB,WAAYnpB,QAAS,WAAKyqB,EAAU,CAACriB,UAAY,uBAAwBiM,EAAQ,CAACL,QAAS,IAAKH,UAAW,iBAAkBzI,YAAW,WAAKiJ,EAAQ,CAAC7M,QAAS,WAAW,MAAOzH,aAAW,gBAArN,SACI,cAAC,KAAD,CAAiBW,SAAS,eAIlC,sBAAKH,MAAO+pB,EAAO/qB,UAAU,YAA7B,UACI,mBAAGgB,MAAO,CAACT,MAAO,kBAAmBY,SAAU,MAAOkD,SAAS,WAAYlF,KAAK,KAAMD,OAAO,MAAOQ,OAAO,KAC3GM,UAAU,YADV,mHAGA,cAAC,GAAD,CAAa8jB,kBApOK,WACtBuH,GAAiB,IAmOsCtjB,OAAQnK,EAAMmK,OAAQgc,QAAWiH,EAAU7W,OAAQW,OAG1G,sBAAK9T,MAAO2T,EAAQ3U,UAAU,aAA9B,UACI,cAAC,GAAD,CAAc+H,OAAQnK,EAAM0gB,WAAYpK,SAAYU,EAAWT,OAAQW,IACvE,cAACxU,EAAA,EAAD,CAAYU,MAAOA,GAAM4oB,WAAYnpB,QAAS,WAAKmU,EAAU,CAAC/L,UAAY,uBAAwBiM,EAAQ,CAACL,QAAS,IAAKH,UAAW,iBAAkBzI,YAAW,WAAKiJ,EAAQ,CAAC7M,QAAS,WAAW,MAAOzH,aAAW,gBAArN,SACI,cAAC,KAAD,CAAiBW,SAAS,eAIlC,qBAAKH,MAAO6T,EAAM7U,UAAU,oBAG5B,cAACqH,EAAA,EAAD,CAAUrG,MAAO,CAACqD,SAAU,QAASnF,OAAO,OAAQyG,KAAMA,EAAM2B,iBAAkB,IAAMC,QAASxB,GAAjG,SACA,cAACtC,EAAA,EAAD,CAAO8D,QAASxB,GAAa/E,MAAOA,GAAMwI,MAAOhC,SAAS,UAA1D,SACI,uBAAMxG,MAAO,CAACT,MAAM,SAApB,gCAAmC3C,EAAMkQ,SAAzC,SAAmD,uBAAnD,uEAIJ,qBAAK9N,UAAU,cAAf,SACI,cAAC,GAAD,CACIiiB,OAAQA,GACRhB,UAAWA,GACX9L,KAAMkX,GACNnK,gBAAiBA,GACjBC,YAAaA,GACb7D,WAAY1gB,EAAM0gB,eAG1B,cAACjX,EAAA,EAAD,CAAUrG,MAAO,CAACqD,SAAU,QAASnF,OAAO,OAAQyG,KAAMylB,EAAe9jB,iBAAkB,IAAMC,QAASmkB,EAA1G,SACI,cAACjoB,EAAA,EAAD,CAAO8D,QAASmkB,EAAoB1qB,MAAO,CAAE0D,UAAW,0BAA2BD,OAAQ,kBAAmBnF,gBAAgB,SAAUkI,SAAS,UAAjJ,SACI,sBAAMxG,MAAO,CAAET,MAAM,SAArB,yDAIR,cAAC8G,EAAA,EAAD,CAAUrG,MAAO,CAACqD,SAAU,QAASnF,OAAO,OAAQyG,KAAM2lB,EAAahkB,iBAAkB,KAAMC,QAASokB,GAAxG,SACI,cAACloB,EAAA,EAAD,CAAO8D,QAASokB,GAAkB3qB,MAAO,CAAE0D,UAAW,0BAA2BD,OAAQ,kBAAmBnF,gBAAgB,SAAUkI,SAAS,UAA/I,SACI,sBAAMxG,MAAO,CAAET,MAAM,SAArB,4D,SEjhBVhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJuJ,QAAS,OACTzI,MAAQ,MACRC,SAAU,OACV8E,OAAQ,QAEVqqB,QAAS,CACP3mB,QAAS,OACTmP,cAAe,UAEjB/O,QAAS,CACP6b,KAAM,WACNvf,WAAY,GAEhBkqB,MAAO,CACHrvB,MAAO,OACP4d,WAAY,gCAEd0R,SAAU,CACR7mB,QAAS,OACT7H,WAAY,SACZ2P,YAAatR,EAAMI,QAAQ,GAC3BmN,cAAevN,EAAMI,QAAQ,IAE/BkwB,SAAU,CACRxqB,OAAQ,GACR/E,MAAO,IAETP,IAAM,CACFoF,SAAW,QACXpF,IAAK,WAIL+B,GAAQ,CACZwD,UAAY,CACRvF,IAAM,MAENwF,OAAQ,kBACRlF,aAAc,OACdmF,UAAW,wBACXC,WAAY,MACZqH,cAAe,MACfvM,SAAW,OACXD,MAAQ,OACR+E,OAAS,SACTF,SAAW,SAEfO,gBAAkB,CACdP,SAAU,WACVpF,IAAM,MACNK,gBAAiB,QACjBC,aAAc,OACdgB,MAAO,SAEXyuB,QAAU,CACRzqB,OAAQ,QACR/E,MAAO,MACPF,gBAAiB,QACjBoF,UAAW,wBACX2Q,YAAa,QACb9V,aAAc,OACdgB,MAAO,SAETsE,SAAW,CACPN,OAAQ,QACR/E,MAAO,MACPF,gBAAiB,UACjBoF,UAAW,wBACX2Q,YAAa,UACb9V,aAAc,OACdgB,MAAO,SAEX0uB,QAAU,CACR1qB,OAAQ,QACR/E,MAAO,MACPF,gBAAiB,UACjBoF,UAAW,wBACX2Q,YAAa,UACb9V,aAAc,OACdgB,MAAO,UAsFIioB,gBAlFE,SAAC5qB,GAChB,IAAMgC,EAAUrB,KAEVsB,GADQqvB,eACEpvB,eAHU,EAIFwF,mBAAS,GAJP,mBAInB6K,EAJmB,KAIbgf,EAJa,KAMpBC,EAAU,WACZC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IAC5C7yB,MAAK,SAAS8yB,GACb5sB,QAAQC,IAAI,4BACZqsB,EAAQ,MAET5rB,OAAM,SAASsD,GACdhH,EAAQa,KAAK,SAInB,OACE,mCAEJ,cAACT,EAAA,EAAD,CAAMD,UAAWJ,EAAQX,IAAKiB,WAAS,EAACC,QAAQ,SAAhD,SACI,cAACsN,GAAA,EAAD,CAAMzM,MAAOA,GAAMwD,UAAnB,SACE,qBAAKxE,UAAWJ,EAAQgvB,QAAxB,SACE,eAAClhB,GAAA,EAAD,CAAa1N,UAAWJ,EAAQyI,QAAhC,UACE,cAAC0C,GAAA,EAAD,CAAYC,UAAU,KAAKrH,QAAQ,KAAnC,SACG/F,EAAMkQ,WAERlQ,EAAMoiB,OACP,oBAAGhgB,UAAU,eAAb,cACIpC,EAAMkQ,SADV,gBACsB,uBADtB,gDAEGqC,EAAM,6EAAmB,qCAAE,+FAC5B,wBAAQnP,MAAOA,GAAMguB,QAASvuB,QAAS2uB,EAAvC,gCAGF,oBAAGpvB,UAAU,eAAb,cACIpC,EAAMkQ,SADV,gBACsB,uBADtB,gDAEGqC,EAAM,6EAAmB,qCAAE,+FAC5B,wBAAQnP,MAAOA,GAAMguB,QAASvuB,QAAS2uB,EAAvC,gCAGJ,gCACGvsB,QAAQC,IAAIlF,EAAMoiB,QAChBpiB,EAAMoiB,OACH7P,EACI,wBACA1P,QAAS,WACLZ,EAAQa,KAAK,CACTiN,SAAW,gBACXC,OAAQ,WAAahQ,EAAMmK,OAAS,eAAiBnK,EAAM0gB,WAC3DlhB,MAAQ,CACJsyB,UAAW,EACX1P,QAAS,EACTlS,SAAWlQ,EAAMkQ,SACjBC,UAAWnQ,EAAMmQ,cAK7B/M,MAAOA,GAAMiuB,QAdb,4CAiBJ,6BAEA9e,EACA,wBACAnP,MAAOA,GAAM6D,SACbpE,QAAS,kBAAI7C,EAAM+xB,QAAQ,IAAInvB,aAAW,aAF1C,0BAMA,8CCzIDovB,GApBc,SAAChyB,GAE1BiF,QAAQC,IAAI,6BAA8BlF,EAAM8xB,UAFZ,MAIZpqB,mBAAS1H,EAAM8xB,UAJH,mBAI7B/C,EAJ6B,KAIvBgD,EAJuB,KAUpC,OAJA9sB,QAAQC,IAAI6pB,GAIPA,GAKD9pB,QAAQC,IAAI,OAAO6pB,GACZ,cAAC,GAAD,CAAa6B,UAAW5wB,EAAM4wB,UAAWzmB,OAAQnK,EAAMmK,OAAQ+F,SAAUlQ,EAAMkQ,SAAUwS,UAAW1iB,EAAMmQ,UAAWuQ,WAAY1gB,EAAM0gB,WAAY0B,OAAQpiB,EAAMoiB,WALxKnd,QAAQC,IAAI,QAAS6pB,GACd,cAAC,GAAD,CAAU5kB,OAAQnK,EAAMmK,OAAQuW,WAAY1gB,EAAM0gB,WAAYxQ,SAAUlQ,EAAMkQ,SAAUC,UAAWnQ,EAAMmQ,UAAW4hB,QAASA,EAAS3P,OAAQpiB,EAAMoiB,WCQpJ6P,GA1BO,SAACjyB,GACnBiF,QAAQC,IAAI,yBAEZ,IAQIwb,EAREvW,EAASnK,EAAMmK,OACf8J,EAAWnK,aAAY,SAAAtK,GAAK,OAAIA,EAAMyM,QAAQhJ,QAChDivB,EAAgB,GAQpB,IANAje,EAASjI,KAAI,SAACC,GACVimB,EAAa,uBAAOA,GAAP,CAAsBjmB,EAAQgE,iBAO3CyQ,EAAa7T,KAAKslB,MAAsB,MAAhBtlB,KAAKulB,WACa,GAAtCF,EAAclkB,QAAQ0S,KAO9B,OAHAzb,QAAQC,IAAI,iBAAkBwb,GAC9Bzb,QAAQC,IAAI,sBAAuBlF,GAE5B,cAAC,GAAD,CAAsBkQ,SAAUlQ,EAAMkQ,SAAUC,UAAWnQ,EAAMmQ,UAAWhG,OAAQA,EAAQuW,WAAYA,EAAY0B,QAAQ,KC2DxHiQ,GA7Ee,SAACryB,GACXkC,cAAhB,IADqC,EAEXwF,qBAFW,mBAE9B4qB,EAF8B,KAEvBC,EAFuB,KAIrCttB,QAAQC,IAAIlF,GACZ,IAAMwyB,EAAcxyB,EAAM6Z,WAAWyY,MAAMG,OAAOjzB,MAC9CkzB,EAAkB,IAAI9Y,gBAAgB5Z,EAAM6Z,WAAW9Q,SAASiH,OAAO8J,MAAM,IACjF7U,QAAQC,IAAIlF,GACZiF,QAAQC,IAAIstB,GAEZ,IAAMroB,EAASuoB,EAAgBntB,IAAI,UAE7Bqb,EAAO9W,aAAY,SAAAtK,GAAK,OAAIA,EAAMwD,KAAKC,QACvC0vB,EAAW/R,EAAI1d,OAAQ0d,EAAI1d,OAAOwF,SAAW,GAWnD,OATAuP,qBAAU,WACN3S,IAAMC,IAAI,yCAAyC4E,GAAQpL,MACvD,SAAC8J,GAC6B,YAAtBA,EAAI5F,KAAKwC,UACT8sB,EAAS1pB,EAAI5F,KAAKC,aAGhC,CAACiH,IAEKqoB,GACJ,IA5BK,OA6BD,IAAM9R,EAAagS,EAAgBntB,IAAI,cACvC,GAAI+sB,EACJ,CAAC,IAAD,EACUlQ,EAAUuQ,IAAaL,EAAMjlB,cACnC,OAAO,cAAC,GAAD,CAAsBujB,UAAW0B,EAAMpxB,MAAOgP,SAAUoiB,EAAMjlB,cAAe8C,UAAWmiB,EAAM5lB,mBAAoBvC,OAAQA,EAAQuW,WAAYA,EAAYoR,SAAQ,UAAE9xB,EAAM6Z,WAAW9Q,SAASvJ,aAA5B,aAAE,EAAiCsyB,SAAU1P,OAAQA,IAE7N,OAAO,8DAEhB,IApCQ,UAqCJ,OAAIkQ,EACO,cAAC,GAAD,CAAe1B,UAAW0B,EAAMpxB,MAAOgP,SAAUoiB,EAAMjlB,cAAe8C,UAAWmiB,EAAM5lB,mBAAoBvC,OAAQA,IAClH,8DAEhB,QACI,OACI,8DCxCT,ICPQ,YAACyoB,EAAkBC,GAA6B,IAUvDC,EAAoB,SAAC9yB,GAGzB,IAAM+yB,EAAatrB,aAAaurB,QAAQ,SAcxC,OATA/a,qBAAU,YACH8a,GAAcF,GACjB7yB,EAAMiC,QAAQa,KAAK,CACfiN,SAAW,SACX/G,OAAShJ,EAAM+I,SAASgH,SAAW/P,EAAM+I,SAASiH,WAGvD,IAGD,cAAC4iB,EAAD,CAAkB/Y,WAAY7Z,KAIlC,OAAO8yB,GC4BMG,GArCH,WAER,IAAMjuB,EAAW7B,cACX4B,EAAQ0C,aAAaurB,QAAQ,SAYnC,OAXGjuB,IACCC,EAASF,GAAYC,IACrBC,EAASgF,GAAmBjF,KAGhCC,EAAS+E,MAOL,qCAGA,cAAC,IAAD,CAAOmpB,OAAK,EAACC,KAAK,QAAQ/lB,UAAWgmB,GAAKtf,IAAsB,KAChE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOof,OAAK,EAACC,KAAK,SAAS/lB,UAAW5F,KACtC,cAAC,IAAD,CAAO0rB,OAAK,EAACC,KAAK,IAAI/lB,UAAW5F,KACjC,cAAC,IAAD,CAAO0rB,OAAK,EAACC,KAAK,kBAAkB/lB,UAAWgmB,GAAKf,IAAuB,KAE3E,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,iBAAiB/lB,UAAWgmB,GAAKzZ,IAAwB,KAC3E,cAAC,IAAD,CAAOuZ,OAAK,EAACC,KAAK,oBAAoB/lB,UAAWgmB,GAAKjX,IAAe,KACrE,cAAC,IAAD,CAAO+W,OAAK,EAACC,KAAK,yBAAyB/lB,UAAWgmB,GAAK7W,IAAY,KACvE,cAAC,IAAD,CAAO4W,KAAK,IAAI/lB,UAAWvD,QAE/B,cAAC,IAAD,CAAOqpB,OAAK,EAACC,KAAK,oBAAoB/lB,UAAWgmB,GAAK7S,IAAc,KACpE,cAAC,IAAD,CAAO2S,OAAK,EAACC,KAAK,UAAU/lB,UAAWgmB,GAAKC,IAAiB,S,2BCjD/DC,GAAe,CACjBC,SAAS,EACTjS,SAAU,EACV1b,OAAO,EACP3C,KAAM,IAkCKD,GA9BF,WAAmC,IAAlCxD,EAAiC,uDAAzB8zB,GAAc7zB,EAAW,uCAC3C,OAAQA,EAAOC,MACX,KAAKiE,EACD,OAAO,2BACAnE,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAEf,KAAKhC,EACD,IAAM4vB,EAAW/zB,EAAOiG,QAAQzC,KAChC,OAAO,2BACAzD,GADP,IAEI+zB,SAAS,EACTjS,SAAS,EACTre,KAAMuwB,IAEd,KAAK3vB,EACD,OAAO,2BACArE,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAKf,QACI,OAAOpG,IClCb8zB,GAAe,CACjBC,SAAS,EACT3tB,OAAO,EACP3C,KAAM,IAmCKgJ,GAhCQ,WAAmC,IAAlCzM,EAAiC,uDAAzB8zB,GAAc7zB,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAK2E,GACD,OAAO,2BACA7E,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAEf,KAAKtB,GACD,IAAMmvB,EAAch0B,EAAOiG,QAAQzC,KACnC,OAAO,2BACAzD,GADP,IAEI+zB,SAAS,EACTtwB,KAAMwwB,IAEd,KAAKlvB,GACD,OAAO,2BACA/E,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAEf,KAAKxB,GACD,OAAO,2BACA5E,EAAMA,EAAMwkB,WAAU,SAAArY,GAAC,OAAIA,EAAExB,SAAW1K,EAAO0K,YADtD,IAEIupB,OAASj0B,EAAOk0B,YAGxB,QACI,OAAOn0B,ICpCb8zB,GAAe,CACnBC,SAAS,EACT3tB,OAAO,EACP3C,KAAM,IAmCOmR,GAhCG,WAAmC,IAAlC5U,EAAiC,uDAAzB8zB,GAAc7zB,EAAW,uCAClD,OAAQA,EAAOC,MACb,KAAK8E,GACH,OAAO,2BACFhF,GADL,IAEE+zB,SAAS,EACT3tB,OAAO,IAEX,KAAKnB,GACH,IAAMgvB,EAAch0B,EAAOiG,QAAQzC,KACnC,OAAO,2BACFzD,GADL,IAEE+zB,SAAS,EACTtwB,KAAMwwB,IAEV,KAAK/uB,GACH,OAAO,2BACFlF,GADL,IAEE+zB,SAAS,EACT3tB,OAAO,IAQX,QACE,OAAOpG,ICnCLo0B,GAAgB,CACpB7L,SAAU,GACVqB,SAAS,EACTxjB,MAAO,ICWIiuB,GAlBG,WAAmC,IAAlCr0B,EAAiC,uDAF/B,GAEoBC,EAAW,uCAElD,OAAOA,EAAOC,MACZ,IAAK,YAGH,OAFAuF,QAAQC,IAAI,kBAAmBzF,EAAOiG,SACtClG,EAAQC,EAAOiG,QAGjB,IAAK,WAEH,OADAlG,EAXe,GAcjB,QACE,OAAOA,ICTP8zB,GAAe,CACjBhS,SAAS,EACTiS,SAAU,EACV3tB,OAAO,EACP3C,KAAM,IAkCKsa,GA9BM,WAAmC,IAAlC/d,EAAiC,uDAAzB8zB,GAAc7zB,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKuE,EAED,OADAgB,QAAQC,IAAI,WACL,2BACA1F,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAEf,KAAK1B,EAED,OADAe,QAAQC,IAAI,YAAazF,EAAOiG,QAAQzC,MACjC,2BACAzD,GADP,IAEI8hB,SAAS,EACTiS,SAAS,EACT3tB,OAAO,EACP3C,KAAMxD,EAAOiG,QAAQzC,OAE7B,KAAKkB,GACD,OAAO,2BACA3E,GADP,IAEI8hB,SAAS,EACTiS,SAAS,EACT3tB,OAAO,IAEf,QACI,OAAOpG,IClCb8zB,GAAe,CACjBhS,SAAS,EACTiS,SAAU,EACV3tB,OAAO,EACP3C,KAAM,IAkCKoe,GA9BQ,WAAmC,IAAlC7hB,EAAiC,uDAAzB8zB,GAAc7zB,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKiF,GAED,OADAM,QAAQC,IAAI,0BACL,2BACA1F,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAEf,KAAKhB,GAED,OADAK,QAAQC,IAAI,2BAA4BzF,EAAOiG,QAAQzC,MAChD,2BACAzD,GADP,IAEI8hB,SAAS,EACTiS,SAAS,EACT3tB,OAAO,EACP3C,KAAMxD,EAAOiG,QAAQzC,OAE7B,KAAK4B,GACD,OAAO,2BACArF,GADP,IAEI8hB,SAAS,EACTiS,SAAS,EACT3tB,OAAO,IAEf,QACI,OAAOpG,IClCb8zB,GAAe,CACjBC,SAAS,EACT3tB,OAAO,EACP3C,KAAM,IA8BKkR,GA1BE,WAAmC,IAAlC3U,EAAiC,uDAAzB8zB,GAAc7zB,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKoE,EACD,OAAO,2BACAtE,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAEf,KAAK7B,EACD,IAAM+vB,EAAcr0B,EAAOiG,QAC3B,OAAO,2BACAlG,GADP,IAEI+zB,SAAS,EACTtwB,KAAM6wB,IAEd,KAAK9vB,EACD,OAAO,2BACAxE,GADP,IAEI+zB,SAAS,EACT3tB,OAAO,IAEf,QACI,OAAOpG,ICZJu0B,GAZKC,2BAAgB,CAChCC,UACAjxB,QACAmR,YACAlI,WACAmI,aACA2T,SLLa,WAAoC,IAAnCvoB,EAAkC,uDAA1Bo0B,GAAen0B,EAAW,uCAChD,OAAQA,EAAOC,MACb,KAAK8D,EACH,OAAO,2BAAKhE,GAAUC,EAAOiG,SAC/B,KAAKjC,EACH,OAAO,2BAAKjE,GAAZ,IAAmB4pB,SAAS,EAAMxjB,MAAO,KAC3C,KAAKlC,EACH,OAAO,uCAAKlE,GAAUC,EAAOiG,SAA7B,IAAsC0jB,SAAS,EAAOxjB,MAAO,KAC/D,QACE,OAAOpG,IKHXq0B,aACAtW,gBACA8D,oB,UCLJ/b,IAAMU,SAASC,eAAiB,YAChCX,IAAMU,SAASE,eAAiB,cAIhC,IAAMguB,GAAQC,uBAAYJ,GAAaK,2BAAgBC,OAEvDC,IAASxc,OACL,cAAC,IAAMyc,WAAP,UACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,GAAD,UAIZlL,SAASwL,eAAe,SAM5B51B,K","file":"static/js/main.8f67ec18.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// actions 액션 타입\r\nconst INCREMENT = 'counterReducer/INCREMENT';\r\nconst DECREMENT = 'counterReducer/DECREMENT';\r\n// 이 패턴에서 따를 규칙은, 액션 타입을 만들때 reducer/ACTION_TYPE 의 형식으로 만들어야 합니다.\r\n\r\n// action creator 액션 생성자\r\nexport const increment = () => ({ type : INCREMENT }); \r\nexport const decrement = () => ({ type : DECREMENT });\r\n\r\nconst initialState = 0;\r\n\r\n//리듀서\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return state + 1;\r\n        case DECREMENT:\r\n            if (state > 0){\r\n                return state - 1;\r\n            } else {\r\n                return state;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport ExitButton from '@material-ui/icons/PowerSettingsNew';\r\nimport LoginButton from '@material-ui/icons/MeetingRoom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Alert from '@material-ui/icons/Notifications';\r\nimport { Person, Home } from '@material-ui/icons';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Apps';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst [MyPageIcon, HomeIcon] = [Person, Home];\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"up\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: \"2%\",\r\n        left : \"0\",\r\n        right: \"0\",\r\n        margin : \"auto\",\r\n        backgroundColor: \"#eb4e27\",\r\n        borderRadius: \"15px\", \r\n        width: \"90%\",\r\n        maxWidth: \"44em\",\r\n        zIndex: \"1\"\r\n      },\r\n  }));\r\n  \r\n\r\nconst NavOfGuest = (props) => { // 지금은 쓰지 않는다\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n                <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n                    <HomeIcon/>\r\n                </IconButton>\r\n                <IconButton  color=\"inherit\" aria-label=\"login\" onClick={()=>{\r\n                        history.push('/login');\r\n                    }}>\r\n                    <LoginButton/>\r\n                </IconButton>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n\r\n// const Logout = async() => {\r\n//   const headers = {\r\n//     'Authorization': 'Token ' + localStorage.token\r\n//   }\r\n//   const data = {}\r\n//   const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n//   // window.location.replace('/')\r\n// }\r\n\r\nconst NavOfUser = (props) => {\r\n    \r\n    const user = props.user.data.detail;\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n            <table style={{borderSpacing : \"1.5em 0px\"}}>\r\n                <tr>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"menu\">\r\n                            <HomeIcon onClick={() => {\r\n                            history.push('/');}} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"mypage\">\r\n                            <MyPageIcon onClick={ () => {\r\n                            history.push(\"/mypage\");\r\n                            } }/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    {/* <td >\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"logout\">\r\n                        <ExitButton onClick={()=> {\r\n                          Logout()\r\n                          localStorage.clear()\r\n                          window.location.replace('/')\r\n                          }}/>\r\n                         </IconButton>\r\n                    </Grid>\r\n                    </td> */}\r\n                </tr>                \r\n                <tr>\r\n                    <td style={{fontSize : \"0.5em\"}}>Home</td>\r\n                    <td style={{fontSize : \"0.5em\"}}>Mypage</td>\r\n                    {/* <td style={{fontSize : \"0.5em\"}}>Logout</td> */}\r\n                </tr>                \r\n            </table>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n\r\nexport {\r\n    NavOfGuest,\r\n    NavOfUser,\r\n}","// MESSAGES ACTIONS TYPES\r\nexport const ON_MESSAGES_VALUE_CHANGE = 'ON_MESSAGES_VALUE_CHANGE';\r\nexport const ON_MESSAGES_READING = 'ON_MESSAGES_READING';\r\nexport const ON_MESSAGES_READ = 'ON_MESSAGES_READ';\r\n\r\n// USER ACTIONS TYPES\r\nexport const USER_GET_PENDING = 'USER_GET_PENDING';\r\nexport const USER_GET_SUCCESS = 'USER_GET_SUCCESS';\r\nexport const USER_GET_FAILURE = 'USER_GET_FAILURE';\r\nexport const GIVEUSER = 'user/GIVEUSER';\r\n\r\n// ALL USERS ACTIONS TYPES\r\nexport const ALL_USERS_GET_PENDING = 'ALL_USERS_GET_PENDING';\r\nexport const ALL_USERS_GET_SUCCESS = 'ALL_USERS_GET_SUCCESS';\r\nexport const ALL_USERS_GET_FAILURE = 'ALL_USERS_GET_FAILURE';\r\n\r\n// Question List Types\r\nexport const QUESTIONLIST_GET_PENDING = 'questionlist/QUESTIONLIST_GET_PENDING';\r\nexport const QUESTIONLIST_GET_SUCCESS = 'questionlist/QUESTIONLIST_GET_SUCCESS';\r\nexport const QUESTIONLIST_GET_ERROR = 'questionlist/QUESTIONLIST_GET_ERROR';\r\n// SESSION ACTIONS TYPES\r\nexport const SETLIVE = 'session/setlive';\r\nexport const SESSION_GET_PENDING = 'SESSION_GET_PENDING';\r\nexport const SESSION_GET_SUCCESS = 'SESSION_GET_SUCCESS';\r\nexport const SESSION_GET_FAILURE = 'SESSION_GET_FAILURE';\r\n// MY_SESSION ACTIONS TYPES\r\nexport const MY_SETLIVE = 'mySession/setlive';\r\nexport const MY_SESSION_GET_PENDING = 'MY_SESSION_GET_PENDING';\r\nexport const MY_SESSION_GET_SUCCESS = 'MY_SESSION_GET_SUCCESS';\r\nexport const MY_SESSION_GET_FAILURE = 'MY_SESSION_GET_FAILURE';\r\n\r\n// Entered Session Types\r\nexport const ENTEREDSESSION_GET_PENDING = 'enteredSession/ENTEREDSESSION_GET_PENDING';\r\nexport const ENTEREDSESSION_GET_SUCCESS = 'enteredSession/ENTEREDSESSION_GET_SUCCESS';\r\nexport const ENTEREDSESSION_GET_ERROR = 'enteredSession/ENTEREDSESSION_GET_ERROR';\r\n","import {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction userGetApi(token){\r\n    const config = {\r\n                headers: { Authorization: 'Token ' + token }\r\n            }\r\n    return axios.get('https://www.ask2live.me/api/user/read', config)\r\n}\r\n\r\nexport const giveUser = (given) => ({ type : GIVEUSER, user : given });\r\n\r\nexport const getUserInfo = token => dispatch => {\r\n    console.log('-----getUserInfo start-----')\r\n    // dispatch({type: USER_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: USER_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: USER_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, {useState, memo} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoginButton from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport \"../../styles/style.css\";\r\nimport {getUserInfo} from \"../../actions/UserActions\";\r\nimport { SignalCellularNoSimOutlined } from '@material-ui/icons';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .MuiTextField-root': {\r\n      width: '25ch',\r\n    },\r\n    '& > *': {\r\n    },\r\n  },\r\n  list: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst style = {\r\n    login : {\r\n        position : \"absolute\",\r\n        top : \"43%\",\r\n    },\r\n    loginWrapper : {\r\n        position : \"fixed\",\r\n        backgroundColor : \"white\",\r\n        width : \"100%\",\r\n        height : \"100%\",\r\n    },\r\n    loginCard : {\r\n        top : \"20%\",\r\n        // backgroundColor: \"skyblue\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"15px\",\r\n        boxShadow: \"1px 1px 2px 2px black\",\r\n        paddingTop: \"1em\",\r\n        maxWidth : \"23em\",\r\n        width : \"16em\",\r\n        height : \"20em\",\r\n        position : \"fixed\",\r\n    },\r\n    loginBtnWrapper : {\r\n        position: \"absolute\",\r\n        top : \"88%\",\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    loginBtn : {\r\n\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    infoIcon : {\r\n        color :\"grey\",\r\n        position: \"absolute\",\r\n        top: \"88%\",\r\n        right: \"4%\",\r\n        cursor: \"pointer\",\r\n    },\r\n    logo : {\r\n        height: \"2.3em\",\r\n        width : \"2.3em\", \r\n        backgroundImage:\"url('/static/logo.png')\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"contain\",\r\n    }\r\n}\r\n\r\nconst LoginPage = (props) => { \r\n    const history = useHistory();\r\n    if (localStorage.token) {\r\n      history.push('/main')\r\n    }\r\n\r\n    const [loginId, setLoginId] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [openTwo, setOpenTwo] = useState(false);\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleClickTwo = () => {       \r\n        setOpenTwo(true);\r\n    };\r\n    \r\n    const handleCloseTwo = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpenTwo(false);\r\n    };\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    /*\r\n    axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n    */\r\n    const Login = async({loginId, loginPassword}) => {\r\n      let dataToSubmit = {\r\n        username : loginId,\r\n        password : loginPassword\r\n      }\r\n      axios.post('https://www.ask2live.me/api/user/login', \r\n      dataToSubmit,\r\n      ).then((res) => {\r\n        console.log(\"res\", res)\r\n        window.localStorage.setItem('token', res.data.detail.token)\r\n        dispatch(getUserInfo(res.data.detail.token));\r\n        console.log(res);\r\n        if (props.location.before)\r\n            history.push(props.location.before)\r\n        else\r\n            history.push('/main')\r\n      }).catch(\r\n        (err) => handleClick())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={style.loginWrapper}>\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.loginCard}>\r\n                        <Grid container justify=\"center\">\r\n                             <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">ASK</p>\r\n                             {/* <div style={{display:\"flex\", paddingBottom: \"4px\", alignItems: \"center\"}}>\r\n                                 <ContactSupportIcon style={{fontSize:40}}/>\r\n                            </div> */}\r\n                            <div style={style.logo}>\r\n                            </div>\r\n\r\n                            <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">LIVE</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginBottom:\"0\",fontSize : \"0.8em\"}}>궁금한 점을 자유롭게 물어보고</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginTop: \"8px\", fontSize : \"0.8em\"}}>라이브로 생생한 답변을 들어보세요!</p>   \r\n                        </Grid>\r\n                        <div style={style.login}>\r\n                            <Grid container justify=\"center\">\r\n                                <TextField \r\n                                size=\"1em\"\r\n                                style= {{marginBottom : \"1em\"}}\r\n                                id=\"outlined-search\" label=\"닉네임\" type=\"search\" variant=\"outlined\"\r\n                                onChange={(event) => setLoginId(event.target.value)}\r\n                                />\r\n                                <TextField \r\n                                id=\"outlined-search\" label=\"패스워드\" type=\"password\" variant=\"outlined\"\r\n                                onChange={(event) => setLoginPassword(event.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </div>\r\n                \r\n                        <Grid container justify=\"center\">\r\n                            <div style={style.loginBtnWrapper}>\r\n                                <button style={style.loginBtn} onClick={() => Login({loginId, loginPassword})}>\r\n                                    <span style={{fontSize: \"1.2em\"}} className=\"BMJUA\">로그인</span>\r\n                                </button>\r\n                                {/* <button type=\"button\" onClick={() => loginMatch(loginId)}/> */}\r\n                            </div>\r\n                        </Grid>\r\n                        <InfoIcon \r\n                        onClick={handleClickTwo}\r\n                        style={style.infoIcon}/>\r\n                    </div>      \r\n                </Grid>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                    이미 존재하는 아이디입니다.\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar \r\n                style={{position:\"fixed\", top: \"80%\"}}\r\n                open={openTwo} autoHideDuration={6000} onClose={handleCloseTwo}>\r\n                    <Alert \r\n                    style={{backgroundColor:\"black\"}}\r\n                    onClose={handleCloseTwo} severity=\"error\">\r\n                    중복되지 않은 닉네임으로<br/>\r\n                    회원가입과 동시에 로그인이<br/>\r\n                    가능합니다!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default LoginPage","import React, { Component, useCallback } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { combineReducers } from 'redux';\r\nimport { NavOfGuest, NavOfUser } from '../components/Nav';\r\nimport LoginPage from '../components/onBoard/LoginPage';\r\n\r\n/* async, await 사용하면 데이터는 가져와지나\r\nError: Objects are not valid as a React child (found: [object Promise]). If you meant to render a collection of children, use an array instead.\r\n에러 발생\r\n*/\r\nconst NavContainer = () => {\r\n    const user = useSelector(state => state.user);\r\n    const history = useHistory()\r\n\r\n    if (user.data.detail){\r\n        return <NavOfUser user={user}/>\r\n    }else{\r\n        return <NavOfGuest user={user}/> //지금은 사용하지 않음\r\n    }\r\n        \r\n};\r\n\r\nexport default NavContainer\r\n\r\n","import {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n    MY_SESSION_GET_PENDING,\r\n    MY_SESSION_GET_SUCCESS,\r\n    MY_SESSION_GET_FAILURE,\r\n  } from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nexport const setLive = (given_holeId, given_livestate) => ({ type : SETLIVE, holeId: given_holeId,  livestate: given_livestate});  //\r\n\r\nfunction sessionGetApi(){\r\n    return axios.get('https://www.ask2live.me/api/hole')\r\n}\r\n\r\nfunction userSessionGetApi(token){\r\n    const config = {\r\n        headers: {Authorization: 'Token ' + token}\r\n    }\r\n    return axios.get('https://www.ask2live.me/api/user/read/hole',\r\n        config\r\n    )\r\n}\r\n\r\nexport const getSessionInfo = () => dispatch => {\r\n    console.log('-----getSessionInfo start-----')\r\n    dispatch({type: SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return sessionGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\nexport const getUserSessionInfo = token => dispatch => {\r\n    console.log('-----getUserSessionInfo start-----')\r\n    dispatch({type: MY_SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userSessionGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: MY_SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: MY_SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(holeId){\r\n    return axios.get('https://www.ask2live.me/api/hole/' + holeId + '/questions');\r\n}\r\n\r\nconst getQuestionlist = holeId => dispatch => {\r\n    console.log('-----getQuestionlist-----')\r\n    dispatch({type: QUESTIONLIST_GET_PENDING}); // ��û�� ���۵Ǿ��ٴ� ���� �˸�\r\n\r\n    // ��û ����\r\n    return getApi(holeId).then(\r\n        (response) => {\r\n            console.log(response);\r\n            dispatch({ type: QUESTIONLIST_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: QUESTIONLIST_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getQuestionlist;\r\n","import React, {useState} from \"react\";\r\nimport { getSessionInfo } from '../../actions/SessionActions'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport Moment from \"react-moment\"\r\n\r\nimport { Progress, Badge } from 'antd';\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"../../styles/style.css\"\r\nimport getQuestionlist from \"../../actions/QuestionListActions\";\r\nimport { Block } from \"@material-ui/icons\";\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { CardActions } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      flexGrow: 1,\r\n      justifyContent : \"center\",\r\n      maxWidth:\"40em\",\r\n      \r\n      \"& > *\": {\r\n        margin: \"0 1em 1em 1em\",\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(40)\r\n      }\r\n    },\r\n    paper: {\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      paddingTop: \"0.5em\",\r\n      maxWidth: \"20em\",\r\n      minWidth: \"17em\",\r\n      cursor:\"pointer\",\r\n\r\n    },\r\n    title: {\r\n      width: \"100%\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      // paddingBottom: \"1em\"\r\n    },\r\n    content: {\r\n      width: \"80%\",\r\n      position: \"relative\",\r\n      top: \"5px\",\r\n\r\n      // display: \"inline-Block\",\r\n    },\r\n    date: {\r\n      position: \"relative\",\r\n      top: \"10px\",\r\n      display: \"inline-Block\",\r\n    },\r\n    work_field: {\r\n      fontSize:\"xx-small\",\r\n      marginLeft: \"1em\",\r\n    },\r\n    wish: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questions: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questionIcon : {\r\n      marginLeft: \"2.5em\"\r\n    },\r\n    avatarWrapper : {\r\n      display: \"table\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      transform: \"translate(0,-4.9em)\",\r\n    },\r\n    avatar : {\r\n      width: theme.spacing(14),\r\n      height: theme.spacing(14),\r\n      // opacity: 0.7,\r\n      \r\n    },\r\n    check : {\r\n      position: \"absolute\",\r\n      paddingTop: \"80px\",\r\n    },\r\n\r\n    chipGrid : {\r\n      width: \"100%\",\r\n      position: \"absolute\",\r\n      paddingTop: \"110px\"\r\n    },\r\n    progress : {\r\n      \r\n    },\r\n    wishButton : {\r\n      width:\"80%\",\r\n      height: \"35px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: '#F24822', \r\n      marginTop: '7px',\r\n    },\r\n\r\n\r\n\r\n  }));\r\n\r\nconst onClickWish = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n}\r\n\r\nconst onClickWishCancel = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wishcancel\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log('onClickWishCacel 응답 받음', response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  });;\r\n}\r\n\r\nconst CurrentReserveSessionsCards = ({currentReserveSessions}) => {\r\n  console.log(\"컴포넌트 시작 Enter : CurrentReserveSessionsCards\")\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.user)\r\n    let i = 0;\r\n    return (\r\n        <>\r\n        {console.log(\"렌더링 시작\")}\r\n        <div className={classes.root}>\r\n            {currentReserveSessions.map((session) => (\r\n                <>\r\n                {console.log(session)}\r\n                <Paper className={classes.paper} onClick={() => {\r\n                  history.push('/preQuestions/'+session.id)\r\n                  dispatch(getQuestionlist(session.id))\r\n                }}>\r\n                <Grid container justify=\"center\">\r\n                  <Progress \r\n                    className={classes.progress}\r\n                    strokeWidth=\"5\"\r\n                    type=\"dashboard\"\r\n                    strokeColor=\"#F24822\"\r\n                    gapDegree = \"85\"\r\n                    width={140}\r\n                    format={percent => {\r\n                      if(percent == 100){\r\n                        return(\r\n                          <>\r\n                          <div className={classes.avatarWrapper}>\r\n                            <Avatar className={classes.avatar} src={`https://www.ask2live.me${session.host_profile_image}`} />\r\n                          </div>\r\n                          <CheckIcon size=\"large\" style={{fontSize: \"40\",  position:\"absolute\", top:\"32\", left:\"52\"}} color='error'/>\r\n                          {/* <span className=\"NanumGothic3\" style={{color: \"red\", fontSize: \"\"}}>성공!</span> */}\r\n                          </>\r\n                        )\r\n                      }else{\r\n                        return(\r\n                          <>\r\n                          {/* {percent} Days */}\r\n                          <div className={classes.avatarWrapper}>\r\n                            <Avatar className={classes.avatar} src={`https://www.ask2live.me${session.host_profile_image}`} />\r\n                          </div>\r\n                          {/* <div className=\"NotoSans3\" style={{fontSize:\"large\", position:\"absolute\", transform:\"translate(1em, -3em)\"}}>안녕안녕</div> */}\r\n                          </>\r\n                        )}\r\n                      \r\n                      }}\r\n                    success = {{strokeColor:\"blue\"}}\r\n                    percent={(session.hole_reservations) ? \r\n                            Math.ceil(\r\n                              session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                              session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0}/>\r\n                        {/* <CircularProgressWithLabel \r\n                          key={session.id} \r\n                          session = {session}\r\n                          value={(session.hole_reservations) ? \r\n                            Math.ceil(\r\n                              session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                              session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0} \r\n                          current={(session.hole_reservations) ? session.hole_reservations.guests.length  : 0 }\r\n                          dispatch = {dispatch}/> */}\r\n                          <Grid container className={classes.chipGrid} justify=\"center\" alignItems=\"center\">\r\n                            <Chip \r\n                              size=\"small\"  \r\n                              color=\"default\" \r\n                              label={<>\r\n                            <span className=\"NanumGothic3\">{session.hole_reservations.target_demand == 0? \r\n                              100 : Math.ceil(session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100)}%달성</span></>} \r\n                            />\r\n                          </Grid>\r\n                          \r\n                        <Grid justify=\"flex-start\" className={classes.content}>\r\n                            <span className=\"NanumGothic4\">\r\n                                {session.title}\r\n                            </span>\r\n                            <Typography variant='caption' component=\"div\" color=\"textSecondary\">\r\n                            {session.host_username? session.host_username : \"익명\"} \r\n                            <span className={classes.work_field}>\r\n                            {session.host_work_company? session.host_work_company : \" \"}\r\n                            {session.host_work_field? \" | \"+session.host_work_field : \" \"}\r\n                            </span>\r\n                            </Typography>\r\n                            <Grid item className={classes.date}>\r\n                            <Typography variant='caption' component=\"p\" >\r\n                              <span className=\"NanumGothic3\">{`예정일자 `}</span>\r\n                            <Moment format=\"MM.DD hh:mm\">\r\n                              {session.reserve_date}\r\n                            </Moment>\r\n                            </Typography>\r\n                            \r\n\r\n                            <Grid container alignItems=\"stretch\" >\r\n                            <div style={{color:\"#F24822\", paddingTop:\"0.4em\"}}><FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon></div>\r\n                            <p className={classes.wish} >\r\n                            <span className=\"NanumGothic3\">찜 {session.hole_reservations.guests.length}/{session.hole_reservations.target_demand}</span>\r\n                            </p>\r\n                            <div className={classes.questionIcon} style={{color:\"#F24822\", paddingTop:\"0.5em\"}}><CommentIcon fontSize=\"small\"></CommentIcon></div>\r\n                            <p className={classes.questions}>\r\n                            <span className=\"NanumGothic3\">질문 {session.count_questions}개</span>\r\n                            </p>\r\n                            </Grid>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                          <Button \r\n                          className={classes.wishButton}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          clickable='true' \r\n                          startIcon={<FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon>}\r\n                          onClick={() => {\r\n                            if(Object.keys(user.data).length === 0){\r\n                              alert('로그인이 필요합니다.')\r\n                            }else{\r\n                              session.hole_reservations.guests.indexOf(user.data.detail.id) === -1 ?\r\n                            <>\r\n                            {onClickWish(session.id)}\r\n                            {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                            </>\r\n                            : \r\n                            <>\r\n                            {onClickWishCancel(session.id)}\r\n                            {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                            </>}\r\n                            }\r\n                            }\r\n                            \r\n                            >{Object.keys(user.data).length != 0 && session.hole_reservations.guests.indexOf(user.data.detail.id) != -1 ? \"취소하기\" : \"찜하기\"}</Button>\r\n                          </Grid>\r\n                        <div>\r\n                        </div>\r\n                        </Grid>\r\n                </Paper>\r\n\r\n                <br/>\r\n            </>\r\n            ))\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrentReserveSessionsCards;","import { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport EnterIcon from '@material-ui/icons/MeetingRoom';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    padding :\"0px\",\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"0 3px 5px 1px #3B568C\",\r\n    backgroundColor : \"rgba(255,255,255,1)\",\r\n    cursor : \"pointer\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(11),\r\n    height: theme.spacing(11),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n        paddingRight: \"5px\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        marginTop: \"8px\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 6px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        marginBottom : \"3px\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"6em\",\r\n        height : \"6em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -2.1em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -1em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst OtherLiveSessionsCards = ({otherLiveSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>?</span>;\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {otherLiveSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card \r\n            key={session.livehole_id} \r\n            className={classes.root}\r\n            >\r\n                <CardContent \r\n                onClick={()=>{\r\n                    if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                    }else{\r\n                    history.push({\r\n                        pathname: \"/session/live\",\r\n                        search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                        state : {\r\n                            hostName : session.host_username,\r\n                            hostImage : session.host_profile_image,\r\n                        }\r\n                })\r\n                }}}\r\n                style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                    <div style={style.profileimage}>\r\n                        <div className={classes.avatarRoot}>\r\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/reigns/1.jpg\" className={classes.large} />\r\n                        </div>\r\n                        <div style={style.livelogo1_back}/>\r\n                        <div style={style.livelogo1}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTime}>\r\n                        <PeopleIcon style={{marginRight : \"3px\", padding:\"0px\"}} fontSize=\"small\"/>\r\n                        <span\r\n                        className=\"NanumGothic3\"\r\n                        style={{marginRight: \"2px\", fontSize: \"13px\", color: \"black\"}}>\r\n                            {session.count_participant}명\r\n                        </span>\r\n                        <span \r\n                        className=\"fontGradi NanumGothic3\"\r\n                        style={{fontSize: \"0.7em\", color: \"#D95032\"}}>\r\n                        <Moment format=\" · mm분 전 시작\">\r\n                            {toDate(session.reserve_date) - now}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {/* {session.title.indexOf(\" \") > 7 ? \r\n                                session.title.splice(7, 0, \" \")\r\n                                :\r\n                                null                            \r\n                                } */}\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company} |\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n               \r\n                \r\n                </CardContent>\r\n                    <div \r\n                    style={{position: \"absolute\", transform:\"translate(2.8em, -3.5em)\"}}>\r\n             \r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n\r\n                \r\n                    </div>\r\n            </Card>\r\n  \r\n   \r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OtherLiveSessionsCards;\r\n","import { useHistory } from 'react-router';\r\nimport React from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../styles/style.css\";\r\nimport \"../../App.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 250,\r\n      height: 250,\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n      float :\"left\",\r\n      margin:\"10px 10px\",\r\n    },\r\n    media: {\r\n        cursor: \"pointer\",\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    cardContent: {\r\n        height: \"30px\"\r\n    },\r\n    cookieWrapper: {\r\n        display : \"block\",\r\n        width: \"6.3em\",\r\n        height: \"6.3em\",\r\n        marginLeft: \"1em\",\r\n        backgroundPosition : \"center center\",\r\n        backgroundSize: \"100%\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        overflow: \"hidden\",\r\n\r\n        \r\n    },\r\n    useCookie: {\r\n        margin: \"auto\",\r\n        backgroundImage: \"url('/static/cookieMould.png')\",\r\n        backgroundPosition : \"center center\",\r\n        backgroundSize: \"100%\",\r\n        width: \"6.3em\",\r\n        height : \"6.3em\",\r\n        overflow: \"hidden\",\r\n    },\r\n    living : {\r\n        background: \"url('/static/living.gif') no-repeat\",\r\n        width : \"17px\",\r\n        height: \"17px\",\r\n        backgroundSize: \"contain\",\r\n        position:\"absolute\",\r\n        transform : \"translate(13.2em, -13.7em)\",\r\n    }\r\n  }));\r\n  \r\n\r\nconst style = {\r\n    contentWrapper : {\r\n        // backgroundColor : \"skyblue\",\r\n        width : \"13.5em\",\r\n        height : \"6em\",\r\n        margin : \"0.7em 1.05em 1.05em 1.05em\",\r\n    },\r\n    contentTime : {\r\n        // backgroundColor : \"pink\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n    },\r\n    contentTitle : {\r\n        // backgroundColor : \"coral\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n        whiteSpace : \"\"\r\n    },\r\n    contentName : {\r\n        // backgroundColor : \"yellow\",\r\n        width : \"13.5em\",\r\n        height : \"1em\",\r\n        marginBottom : \"3px\"\r\n    },\r\n    contentWork : {\r\n        // backgroundColor : \"green\",\r\n        width : \"13.5em\",\r\n        height : \"1em\",\r\n    },\r\n    live2 : {\r\n        display: \"inline-block\",\r\n        backgroundImage : \"url('/static/Live_2.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        width : \"40px\",\r\n        height : \"28px\",\r\n    },\r\n\r\n}\r\n\r\nconst MyLiveSessionsCard = ({session}) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    \r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n  return (\r\n    <>\r\n    {/* <div className=\"padding\" onClick={() => {history.push({\r\n        pathname: \"/session?state=mylive&i_r_d=\"+ session.roomId + \"&channelNum=\" + session.channelNum\" \r\n    })}}> */}\r\n    <div \r\n    onClick={()=>{\r\n                history.push({\r\n                    pathname: \"/session/live\",\r\n                    search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                    state : {\r\n                        hostName : session.host_username,\r\n                        hostImage : session.host_profile_image,\r\n                    }\r\n            })}}\r\n    style={{cursor:\"pointer\"}}>\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n            <br/>\r\n            <div\r\n            style={{backgroundImage: \"url('/static/live_IU2.png')\"}}\r\n            className={classes.cookieWrapper}\r\n\r\n            ><div className={classes.useCookie}></div> </div>\r\n            <div style={style.contentWrapper}>\r\n                <div style={style.contentTime}>\r\n                    <Grid container alignItems=\"center\">\r\n\r\n                    <div\r\n                    style={style.live2}\r\n                    />\r\n                    <span\r\n                    style={{fontSize:\"0.8em\"}}\r\n                    className=\"NanumGothic3\"\r\n                    >\r\n                        {session.count_participant}명\r\n                    </span>\r\n                    <span \r\n                    className=\"NanumGothic3\"\r\n                    style={{fontSize: \"0.8em\", color:\"rgba(0, 0, 0, 0.4)\", margin : \"0px 3px\"}}>\r\n                        ·\r\n                    </span>\r\n                    <span className=\"fontGradi BMJUA\" style={{fontSize:\"0.9em\"}}>\r\n                        <Moment format=\"mm분 전 시작\">\r\n                             {toDate(session.reserve_date) - now}\r\n                        </Moment>\r\n                    </span>\r\n                    </Grid>\r\n                </div>\r\n                <div style={style.contentTitle}>\r\n                    <span className=\"BMDOHYEON\" style={{fontSize:\"1em\"}}>\r\n                        {session.title}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentName}>\r\n                    <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                        {session.host_username}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentWork}>\r\n                    <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company} |\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {/* <CardMedia\r\n            className={classes.media}\r\n            image={\"/static/live_IU.png\"}\r\n            title={session.title}\r\n            onClick={()=>{\r\n                history.push(\"/session/live?roomId=\" + session.livehole_id + \"&channelNum=\" + session.livehole_id)\r\n            }}\r\n            /> */}\r\n            {/* <div \r\n             <CardHeader\r\n            avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {session.host_username}\r\n                </Avatar>\r\n            }\r\n            action={\r\n                <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n                </IconButton>\r\n            }\r\n            title={session.title}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"mm분 전 시작\">\r\n                {toDate(session.reserve_date) - now}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <div className=\"centered\">\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {session.description}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent> \r\n             <CardActions disableSpacing>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n            </IconButton>\r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon/>\r\n            </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography paragraph>\r\n                    라이브 중\r\n                </Typography>\r\n            </CardContent>\r\n            </Collapse> */}\r\n        <div className={classes.living}/>\r\n        </Card>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MyLiveSessionsCards = ({myLiveSessions}) => {\r\n    return (\r\n        <>\r\n            {myLiveSessions.map((session) => (\r\n                <>\r\n                <MyLiveSessionsCard session={session} />\r\n                </>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyLiveSessionsCards;","import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport \"../../App.css\"\r\nimport \"../../styles/style.css\"\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    height: \"11.5em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    borderRadius: \"0px\",\r\n    boxShadow: \"0 0 0 0\",\r\n    backgroundColor : \"rgba(255,255,255,0)\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(11),\r\n    height: theme.spacing(11),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 0px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"6em\",\r\n        height : \"6em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -2.1em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -1em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst HostConfirmedSessionsCards = ({hostConfirmedSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n    const [reserveDate, setReserveDate] = useState(\"시작\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {hostConfirmedSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card key={session.livehole_id} className={classes.root}>\r\n                <CardContent style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                <div style={style.profileimage}>\r\n                     <div className={classes.avatarRoot}>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/reigns/2.jpg\" className={classes.large} />\r\n                    </div>\r\n                </div>\r\n                <div style={style.buttonWrapper}>\r\n                    <div \r\n                    style={{posision: \"absolute\",width:\"5em\", paddingLeft:\"0.9em\",marginTop:\"1.2em\"}}>\r\n                    <Grid container justify=\"center\">\r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            setReserveDate(<>\r\n                                <Moment format=\"MM월 DD일 A h:mm\">\r\n                                     {toDate(session.reserve_date)}\r\n                                </Moment>\r\n                                </>);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n                    </Grid>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentTime}>\r\n                        <span \r\n                        className=\"NanumGothic3 fontGradi\"\r\n                        style={{fontSize: \"0.9em\", color: \"black\"}}>\r\n                        <Moment format=\"MM.DD A h:mm\">\r\n                            {toDate(session.reserve_date)}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company} |\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle} <br/>\r\n                    <span className=\"BMJUA\">시작 :</span> {reserveDate}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nexport default HostConfirmedSessionsCards;","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    balloonWhite : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/Balloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    balloonColor : {\r\n        backgroundImage: \"url('/static/BalloonColor.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    mike : {\r\n        position : \"absolute\",\r\n        width :\"2em\", \r\n        height: \"2em\", \r\n        margin:\"0.7em 0em 0.5em 0.6em\",\r\n        backgroundImage: \"url('/static/mike.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize : \"contain\",\r\n        transform :\"translate(1.5em, 0.3em)\",\r\n    }\r\n}\r\n\r\n\r\nconst SessioinCreateButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={props.noMyLive? \r\n                {backgroundColor: \"white\"}\r\n                :\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push(\"/createSession\");\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>Live Q&A을 개설해서</p>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>경험을 나누어 보세요</p>\r\n                        <p\r\n                        className=\"NanumGothic4\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(개설하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        props.noMyLive?\r\n                        style.balloonColor\r\n                        :\r\n                        style.balloonWhite\r\n                        }>\r\n                        <div\r\n                        style={style.mike}/>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       flexGrow: 1,\r\n//       padding: theme.spacing(2),\r\n//     },\r\n//   }));\r\n\r\n\r\n// const style = {\r\n//     button : {\r\n//         position: 'relative',\r\n//         width: '60%',\r\n//         minWidth : \"19em\",\r\n//         marginBottom: '20px',\r\n//         backgroundColor: \"rgb(255,255,255)\",\r\n//         border : \"3px solid #F24822\"\r\n//     },\r\n//     buttonIcon: {\r\n//         fontSize: 30,\r\n//         color: 'white',\r\n//         backgroundColor: '#F24822',\r\n//         borderRadius: '50%',\r\n//     },\r\n//     buttonText: {\r\n//         align: 'left',\r\n//         fontSize: '1em',\r\n//         margin: '8px',\r\n//     },\r\n// }\r\n\r\n\r\n\r\n\r\n{/* <>\r\n<div className={classes.root}>\r\n    <Grid container justify=\"center\">\r\n      <Button\r\n        style={style.button}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        endIcon={<AddIcon style={style.buttonIcon} />}\r\n        onClick={() => {\r\n          history.push(\"/createSession\");\r\n        }}\r\n      >\r\n        <div style={style.buttonText} align=\"left\" className=\"NanumGothic3\">\r\n          Live Q&A를 개설해서\r\n          <br></br>\r\n          경험을 함께 나누어보세요\r\n        </div>\r\n      </Button>\r\n    </Grid>\r\n  </div>\r\n  </> */}\r\n\r\n\r\nexport {SessioinCreateButton}\r\n","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    profileBalloon : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/profileBalloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n}\r\n\r\n\r\nconst ProfileEditButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push({\r\n                    pathname :\"/mypage/\" + props.user.data.detail.username,\r\n                    state : props.user.data.detail\r\n                    });\r\n\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={\r\n                            {color: \"white\", margin : \"-3px 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>프로필 완성하셨나요?</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>프로필을 완성하면</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"2px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>많은 관심을 끌 수 있어요!</p>\r\n                        <p\r\n                        className=\"NanumGothic3\"\r\n                        style={\r\n                            {color: \"white\", margin : \"4px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(프로필 편집하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        style.profileBalloon\r\n                        }>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEditButton","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useSelector } from 'react-redux';\r\nimport {MyLiveSessionsCards, OtherLiveSessionsCards, CurrentReserveSessionsCards, HostConfirmedSessionsCards} from '../components/sessionCard' \r\nimport {SessioinCreateButton} from '../components/SessionCreateButton';\r\nimport  ProfileEditButton from \"../components/ProfileEditButton\";\r\n// material-ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../App.css\"\r\nimport { Opacity } from '@material-ui/icons';\r\n\r\nlet myLiveSessions = []\r\nlet otherLiveSessions = []\r\nlet currentReserveSessions = []\r\nlet hosts = []\r\nlet hostConfirmedSessions = []\r\n\r\nconst style = {\r\n    mainLogo : {\r\n        backgroundImage : \"url('/static/LogoWhite.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        width : \"8em\",\r\n        height : \"3em\",\r\n        margin : \"0.5em 0 0 1.5em\"\r\n    },\r\n    mainOragne: {\r\n        position : \"absolute\",\r\n        backgroundColor: \"#eb4e27\",\r\n        height : \"15em\",\r\n        width: \"100%\",\r\n        zIndex : \"-1\",\r\n        overflow: \"hidden\",\r\n    },\r\n    descript: {\r\n        fontSize: \"1.2em\",\r\n        color: \"white\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    descript2: {\r\n        fontSize: \"1.2em\",\r\n        color: \"#1C418C\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    cookie1: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"3em\",\r\n        right : \"-2.5em\",\r\n    },\r\n    cookie2: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"-1.5em\",\r\n        width: \"2em\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        left : \"60%\",\r\n    },\r\n    button : {\r\n        position: 'relative',\r\n        width: '80%',\r\n        marginBottom: '20px',\r\n    },\r\n    buttonIcon: {\r\n        fontSize: 30,\r\n        fontColor: 'black',\r\n        backgroundColor: '#C0C0C0',\r\n        borderRadius: '50%',\r\n        marginLeft: '150%',\r\n    },\r\n    buttonText: {\r\n        align: 'left',\r\n        fontSize: '80%',\r\n        margin: '8px',\r\n        marginLeft: '-20%',\r\n        fontWeight: 900,\r\n    },\r\n    swiperLeft : {\r\n        backgroundImage: \"url('/static/toLeft.png')\",\r\n    },\r\n    swiperLeftHidden : {\r\n        display : \"none\"\r\n    },\r\n    swiperRight: {\r\n        backgroundImage: \"url('/static/toRight.png')\"\r\n    },\r\n    swiperRightHidden : {\r\n        display : \"none\"\r\n    },\r\n    logOut : {\r\n        position :\"absolute\",\r\n        transform:\"translate(-2em, -3em)\",\r\n        right: \"0%\",\r\n        color: \"white\",\r\n        cursor:\"pointer\",\r\n    }\r\n}\r\n\r\n    \r\nconst SessionCardContainer = (props) => {\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    const user = useSelector(state => state.user);\r\n    const sessions = useSelector(state => state.session.data);\r\n    const history = useHistory();\r\n    const allUsersData = useSelector(state => state.allUsers);\r\n    const mySession = useSelector(state => state.mySession.data);\r\n    // console.log('allUsers.data.data.detail', allUsersData.data.data.detail);\r\n\r\n    const wrapperCnt = (cnt) => {\r\n        let defaultSize = 270;\r\n        const rst = cnt * defaultSize;\r\n        return rst.toString() + \"px\";\r\n    }\r\n\r\n    if(user.error){\r\n        localStorage.clear()\r\n        window.location.replace('/')\r\n    }\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        let userDetail;\r\n        if(user.data.detail){\r\n            userDetail = user.data.detail\r\n        }else{\r\n            userDetail = {id:-1} // 반찬고 >_<\r\n        }\r\n        myLiveSessions = []\r\n        otherLiveSessions = []\r\n        currentReserveSessions = []\r\n        hostConfirmedSessions = []\r\n        hosts = []\r\n\r\n        sessions.map((session) => {\r\n            console.log(session)\r\n            if (session.status == \"DOING\" && session.hole_reservations && (session.hole_reservations).guests.indexOf(userDetail.id) != -1) {\r\n                myLiveSessions = [...myLiveSessions, session];\r\n                console.log(\"myLiveSEssion:\",myLiveSessions)\r\n            }\r\n            else if (session.status == \"DOING\") {\r\n                otherLiveSessions = [...otherLiveSessions, session];\r\n                console.log(\"otherLiveSessions\",otherLiveSessions)\r\n            }\r\n            else if (session.hole_reservations && session.hole_reservations.status==\"HOST_CONFIRMED\"){\r\n                hostConfirmedSessions = [...hostConfirmedSessions, session];\r\n                console.log(\"hostConfirmedSessions\",hostConfirmedSessions)\r\n            }else{\r\n                currentReserveSessions = [...currentReserveSessions, session];\r\n                console.log(\"currentReserveSessions\",currentReserveSessions)\r\n            }\r\n        })\r\n    }\r\n\r\n    if(Object.keys(allUsersData.data).length != 0){\r\n        const allUsers = allUsersData.data.data.detail;\r\n        allUsers.map((candidate) => {\r\n            if(candidate.hole_open_auth === true){\r\n                hosts = [...hosts, candidate]\r\n            }\r\n        })\r\n    }\r\n\r\n    const [swiperCnt, setSwiperCnt] = useState(1);\r\n\r\n    const leftBtnTrigger = () => {\r\n        if (swiperCnt == 1){\r\n            return style.swiperLeftHidden\r\n        }\r\n        else \r\n            return style.swiperLeft\r\n    }\r\n    const rightBtnTrigger = () => {\r\n        if (myLiveSessions.length == 1 || swiperCnt == myLiveSessions.length)\r\n            return style.swiperRightHidden\r\n        else\r\n            return style.swiperRight\r\n    }\r\n\r\n    const swipping = () => {\r\n        const where = swiperCnt == 1 ? \"0\" : ((swiperCnt - 1) * -270).toString() \r\n        return \"translate(\" + where.toString(where) + \"px, 0)\"\r\n    } \r\n\r\n    const Logout = async() => {\r\n        const headers = {\r\n          'Authorization': 'Token ' + localStorage.token\r\n        }\r\n        const data = {}\r\n        const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n        // window.location.replace('/')\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={style.mainOragne}>\r\n            <div style={style.cookie1} className=\"helloCookie\"/>\r\n        </div>\r\n        <br></br>\r\n        <div style={style.mainLogo}/>\r\n        <span \r\n        className=\"BMJUA\" \r\n        style={style.logOut}\r\n        onClick={()=> {\r\n            Logout()\r\n            localStorage.clear()\r\n            window.location.replace('/')\r\n            }}\r\n        >로그아웃</span>\r\n            {\r\n                myLiveSessions.length == 0 ?\r\n                <>\r\n                <br/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                어서오세요!<br/>\r\n                ASK2LIVE를 즐겨보세요!\r\n                </div>\r\n                </>\r\n                :\r\n                <>\r\n                <div\r\n                style={{\r\n                    backgroundImage: \"url('/static/mainLive.png')\",\r\n                    backgroundSize : \"contain\",\r\n                    backgroundRepeat : \"no-repeat\",\r\n                    width: \"25px\",\r\n                    height :\"25px\",\r\n                    marginLeft : \"1.5em\",\r\n                }}/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                찜했던<br/>\r\n                Live Q&A가 시작했어요!\r\n                </div>\r\n                </>\r\n            } \r\n        \r\n        <br/>\r\n\r\n \r\n\r\n            { myLiveSessions.length != 0 ?\r\n            <> \r\n                <Grid container justify=\"center\">\r\n                    <div className=\"myLiveWrapper\">\r\n                        <div className=\"myLive\" style={{display:\"block\", height: \"300px\", width: wrapperCnt(myLiveSessions.length), transform: swipping()}}>\r\n                            <MyLiveSessionsCards myLiveSessions={myLiveSessions} />\r\n                        </div>\r\n                        <div\r\n                        style={leftBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev - 1)\r\n                        }}\r\n                        className=\"swiperLeft\"/>\r\n                        <div\r\n                        style={rightBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev + 1)\r\n                        }}\r\n                        className=\"swiperRight\"/>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : <></>\r\n            }\r\n\r\n        <br></br>\r\n        <SessioinCreateButton noMyLive={myLiveSessions.length == 0}/>\r\n\r\n\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">LIVE 중인 Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { otherLiveSessions.length != 0 ? <OtherLiveSessionsCards otherLiveSessions={otherLiveSessions}/> : <p>라이브 중인 다른 세션이 없어요</p> }\r\n        </Grid>\r\n    \r\n        <br/>\r\n        <ProfileEditButton user={user}/>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">다가오는 LIVE Q&A</p>\r\n\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hostConfirmedSessions.length != 0 ? <HostConfirmedSessionsCards hostConfirmedSessions={hostConfirmedSessions}/> : <p>예정된 다른 세션이 없어요</p> }\r\n        </Grid>\r\n\r\n        <div className=\"center divider\">\r\n            <Divider variant=\"middle\"/>\r\n        </div>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">오픈 신청중인 LIVE Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { currentReserveSessions.length != 0 ? <CurrentReserveSessionsCards currentReserveSessions={currentReserveSessions} setFlag={setFlag}/> : <p>요청 받고있는 다른 세션이 없어요</p>}\r\n        </Grid>\r\n\r\n        {/* <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hosts.length != 0 ? <HostCards hosts={hosts}/> : <p>등록된 호스트가 없어요</p>}\r\n        </Grid> */}\r\n\r\n        \r\n        </>\r\n\r\n    \r\n    )\r\n};\r\n\r\nexport default SessionCardContainer\r\n","import { useHistory } from \"react-router\";\r\nimport React from \"react\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    maxWidth: \"70em\",\r\n  },\r\n  profile: {\r\n    flexGrow: 1,\r\n    // paddingLeft: theme.spacing(2),\r\n    // paddingRight: theme.spacing(2),\r\n    maxWidth: \"50em\",\r\n    // margin: \"5%\",\r\n    display: \"flex\",\r\n    height: 80,\r\n    alignItems: \"center\",\r\n    // justifyContent: 'center',\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\n\r\nconst ProfileGate = (props) => {\r\n  // if(!props.location.state) history.push('/mypge');\r\n    console.log(\"profileGate\", props.user.detail);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const goToDetail = () => {\r\n        console.log('onClick');\r\n        history.push({\r\n            pathname: '/mypage/' + props.user.detail.username,\r\n            state: props.user.detail});\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>My</h2>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        <Card className={classes.profile}>\r\n          <CardActionArea onClick={goToDetail}>\r\n\r\n            <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src={`https://www.ask2live.me${props.user.detail.profile_image}`}\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<Typography variant=\"body1\" style={{ fontWeight: 800 }}>{props.user.detail.username}</Typography>}\r\n              // subheader=\"September 14, 2016\"\r\n            />\r\n\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileGate;\r\n","import { useHistory } from \"react-router\";\r\n\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst style = {\r\n  root: {\r\n    height: \"7%\",\r\n    left: 0,\r\n    right: 0,\r\n    position: \"fixed\",\r\n    margin: \"auto\",\r\n    maxWidth: \"73em\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    backgroundColor: \"#fff8ef\",\r\n    borderBottom: \"2px solid\",\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n  borderbox: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  text: {\r\n    transform: \"translate(0, 1px)\",\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nconst MypageNav = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div style={style.root}>\r\n        <IconButton\r\n          style={{ position: \"absolute\", left: 0, height: \"100%\" }}\r\n          aria-label=\"back\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n        <div style={style.borderbox}>\r\n          <span style={style.text}>{props.text}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageNav;\r\n","import React, { useCallback } from \"react\";\r\nimport ProfileGate from \"./ProfileGate\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { SessioinCreateButton } from \"../SessionCreateButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    maxWidth: \"70em\",\r\n  },\r\n  my: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    // color: theme.palette.text.secondary,\r\n    backgroundColor: \"lightgray\",\r\n  },\r\n  myBottomCard: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\n\r\nconst MyPage = (props) => {\r\n  const classes = useStyles();\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필\"} />\r\n      <Grid container justify=\"center\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item className={classes.my} xs={12}>\r\n              <ProfileGate user={props.user}/>\r\n            </Grid>\r\n          </Grid>\r\n          <h3>Live QnA</h3>\r\n        </div>\r\n      </Grid>\r\n          <SessioinCreateButton />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import axios from \"axios\";\r\n\r\nexport const postSessionToReserve = async(session) => {\r\n  console.log(\"-----postSessionToReserve start-----\");\r\n\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  const res = await axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + session.id + \"/hostconfirm\",\r\n    data,\r\n    config,\r\n  );\r\n  console.log(\"hole reserved: \", res);\r\n};\r\n","import { postSessionToReserve } from '../../actions/SessionToReserveActions';\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { getUserSessionInfo } from '../../actions/SessionActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  paper: {\r\n    position: \"absolute\",\r\n    bottom: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"20px 20px 0 0 \",\r\n    zIndex : \"3\",\r\n  },\r\n  title: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font2: {\r\n    color: \"#030916\",\r\n    fontSize: \"1em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font3: {\r\n    fontSize: \"1em%\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    margin: \"3% 5% 0 0\",\r\n  },\r\n};\r\n\r\nconst SessionConfirm = (props) => {\r\n  console.log(\"SessionConfirm\");\r\n  const { session, goListUp, goDark, handleClick } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <>\r\n    <Paper style={style.paper} elevation={1}>\r\n      <div className=\"BMDOHYEON\" style={style.title}>\r\n        {/* <Typography variant=\"h3\"  gutterBottom> */}\r\n        오픈 확정하기\r\n        {/* </Typography> */}\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font}>\r\n        {Date(session.reserve_date).substring(0, 21)}에 예정된 <br></br>\"\r\n        {session.title}\"의 스케쥴을 확정하시겠어요?\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font2}>\r\n        스케줄을 확정하면 '찜하기' 버튼을 누른 유저에게\r\n        <br></br>\r\n        알림이 전송됩니다!\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <Button\r\n            style={style.button}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              goListUp({ transform: \"translate(0, 100%)\" });\r\n              goDark({ animation: \"golight 0.7s\" });\r\n              setTimeout(() => {\r\n                goDark({ display: \"none\" });\r\n              }, 700);\r\n            }}\r\n          >\r\n            <div style={style.font3} color=\"030916\">\r\n              취소하기\r\n            </div>\r\n          </Button>\r\n\r\n          <Button\r\n            style={style.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => \r\n              {\r\n                postSessionToReserve(session);\r\n                handleClick();\r\n              }}\r\n              >\r\n            <div style={style.font3} color=\"030916\">\r\n              확정하기\r\n            </div>\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SessionConfirm };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport Moment from \"react-moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"8em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    float: \"left\",\r\n    width: \"5em\",\r\n    height: \"5em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"5em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n      boxShadow: \"2px 2px 2px 2px #D95032\",    // 섀도우 색\r\n      border: \"solid 1px white\",    // 테두리 색\r\n      backgroundColor:\"black\"      // 배경색\r\n  }\r\n}\r\n\r\nconst MypageLiveSession = (props) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const { session, setFlag } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {       \r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = async(event, reason) => {\r\n    await dispatch(getUserSessionInfo(localStorage.token))\r\n    setListUp({ transform: \"translate(0, 100%)\" });\r\n    setDark({ animation: \"golight 0.7s\" });\r\n    setTimeout(() => {\r\n    setDark({ display: \"none\" });\r\n    }, 700);\r\n    history.replace(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    const res = await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n    console.log(\"hole deleted: \", res);\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"30em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n          <br></br>\r\n\r\n          <div\r\n            style={{ backgroundImage: \"url('/static/live_IU2.png')\" }}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n\r\n          <CardHeader\r\n            style={{ padding: \"10px 8px 0 8px\" }}\r\n            title={<Typography variant=\"body1\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM.DD hh시 mm분\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>\r\n                }\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          <CardContent style={{padding: 0}}>\r\n            <CardActions style={{paddingLeft: 0}}>\r\n              {session.status != \"DONE\" && user.id === parseInt(session.host) && (\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setListUp({ transform: \"translate(0, 50%)\" });\r\n                    setDark({ animation: \"godark 0.7s\" });\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    예약 확정하기\r\n                  </Typography>\r\n                </Button>\r\n              )}\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {onDelete()}\r\n                      {setTimeout(\r\n                        () => dispatch(getUserSessionInfo(localStorage.token)),\r\n                        200\r\n                      )}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    삭제하기\r\n                  </Typography>\r\n                </Button>\r\n                \r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      <div style={listup} className=\"hiddenlist\" maxWidth=\"\">\r\n        <SessionConfirm\r\n          session={session}\r\n          goListUp={setListUp}\r\n          goDark={setDark}\r\n          handleClick={handleClick}\r\n        />\r\n      </div>\r\n      <div style={dark} className=\"mypagelayerfordark\"></div>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", bottom: \"50%\" }}\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          <span style={{ color: \"white\" }}>Live Q&A 생성 완료!</span>\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageLiveSession;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Moment from \"react-moment\";\r\n\r\n\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"8em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    border: 'solid',\r\n    borderColor: '#D95032',\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    float: \"left\",\r\n    width: \"5em\",\r\n    height: \"5em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"5em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst MypageConfirmedSession = ({ session }) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n\r\n  const onChangeDoing = async(session, user) => {\r\n    console.log(\"ChangeDoing\")\r\n    console.log(session.id)\r\n    console.log(user)\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    const data = {\r\n      \r\n      channel_num : String(session.id) + '123',\r\n      host_uid : user.id,\r\n      \r\n    }\r\n    const res = await axios.post(\r\n      \"https://www.ask2live.me/api/hole/\" + session.id + \"/live/create\",\r\n      data,\r\n      config,\r\n    );\r\n\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    // await postSessionDelete(session);\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    const res = await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n    console.log(\"hole deleted: \", res);\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"30em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n          <br></br>\r\n\r\n          <div\r\n            style={{ backgroundImage: \"url('/static/live_IU2.png')\" }}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n\r\n          <CardHeader\r\n            style={{ padding: \"10px 8px 0 8px\" }}\r\n            title={<Typography variant=\"body1\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM.DD hh시 mm분\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          <CardContent style={{padding:0}}>\r\n            <CardActions style={{ paddingLeft:0 }}>\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    history.push({\r\n                        pathname: \"/session/reserve\",\r\n                        search: \"?holeId=\" + session.id,\r\n                    })\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    라이브하기\r\n                  </Typography>\r\n                </Button>\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {onDelete()}\r\n                      {setTimeout(\r\n                        () => dispatch(getUserSessionInfo(localStorage.token)),\r\n                        200\r\n                      )}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    삭제하기\r\n                  </Typography>\r\n                </Button>\r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageConfirmedSession;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Mypage from \"../components/mypage/Mypage\";\r\n// import Profile from '../components/mypage/Profile';\r\nimport SessionCardContainer from \"./SessionCardContainer\";\r\nimport MypageLiveSession from \"../components/mypage/MypageLiveSession\";\r\nimport MypageConfirmedSession from \"../components/mypage/MypageConfirmedSession\";\r\nimport { getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport { getUserInfo } from \"../actions/UserActions\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// material-ui\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"70em\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    width: \"100%\",\r\n    maxWidth: \"70em\",\r\n    paddingLeft: theme.spacing(4),\r\n    borderBottom: \"solid thin\",\r\n    marginBottom: \"2%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  listcenter: {\r\n    left: 0,\r\n    right: 0,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  alert: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    zIndex: 2,\r\n    maxWidth: \"25em\",\r\n    size: \"large\",\r\n  },\r\n};\r\n\r\nconst MyPageContainer = (props) => {\r\n  console.log(\"컴포넌트 실행!\");\r\n\r\n  const [flag, setFlag] = useState({ display: \"none\" });\r\n  const [render, setRender] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector((state) => state.user.data);\r\n  const sessions = useSelector((state) => state.mySession.data);\r\n  const wishSessions = useSelector((state) => state.mySession.data);\r\n\r\n  console.log(\"세션 :\", sessions);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.token\r\n    console.log(\"useEffect\");\r\n    dispatch(getUserInfo(token));\r\n    dispatch(getUserSessionInfo(token));\r\n    setRender(true);\r\n  }, [render]);\r\n\r\n  let myLiveSessions = [];\r\n  let myDoneSessions = [];\r\n  let myWishSessions = [];\r\n  let myConfirmSessions = [];\r\n  if (Object.keys(sessions).length != 0) {\r\n    sessions.detail.my_hole.map((session) => {\r\n      if (\r\n        session.status === \"NOT_START\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        if (session.reservation_status === \"HOST_CONFIRMED\") {\r\n          myConfirmSessions = [...myConfirmSessions, session];\r\n        } else {\r\n          myLiveSessions = [...myLiveSessions, session];\r\n        }\r\n      } else if (\r\n        session.status === \"DONE\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        myDoneSessions = [...myDoneSessions, session];\r\n      }\r\n    });\r\n  }\r\n\r\n  if (Object.keys(wishSessions).length != 0) {\r\n    wishSessions.detail.wish_hole.map((session) => {\r\n      myWishSessions = [...myWishSessions, session];\r\n    });\r\n  }\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const [openDone, setOpenDone] = useState(true);\r\n  const [openWish, setOpenWish] = useState(true);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const handleConfirmClick = () => {\r\n    setOpenConfirm(!openConfirm);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickDone = () => {\r\n    setOpenDone(!openDone);\r\n  };\r\n\r\n  const handleClickWish = () => {\r\n    setOpenWish(!openWish);\r\n  };\r\n\r\n  if (!user.detail || !sessions.detail) return <p>로딩중...</p>;\r\n\r\n  return (\r\n    <>\r\n      <Mypage user={user} />\r\n\r\n\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <div\r\n          style={{ display: \"inline-block\", width: \"100%\", maxWidth: \"73em\" }}\r\n        >\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleConfirmClick}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <SendIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"진행 확정된 Live\" />\r\n            {openConfirm ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openConfirm} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myConfirmSessions.length != 0 &&\r\n                myConfirmSessions.map((session) => (\r\n                  <>\r\n                    <MypageConfirmedSession\r\n                      session={session}\r\n                    />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleClick}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <DraftsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"모집 중인 Live\" />\r\n            {open ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myLiveSessions.length != 0 &&\r\n                myLiveSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleClickDone}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"진행한 Live\" />\r\n            {openDone ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openDone} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myDoneSessions.length != 0 &&\r\n                myDoneSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleClickWish}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"찜했던 Live\" />\r\n            {openWish ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openWish} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myWishSessions.length != 0 &&\r\n                myWishSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n        </div>\r\n      </Grid>\r\n\r\n      <div\r\n        style={{\r\n          height: \"4em\",\r\n          width: \"100%\",\r\n          marginBottom: \"4%\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPageContainer;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport axios from \"axios\";\r\nimport { getSessionInfo, getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport MypageNav from \"../components/mypage/MypageNav\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    // fontFamily: \"BMJUA\"\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#EF4D57\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    fontSize: '0.8em'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#EF4D57\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert: {\r\n    boxShadow: \"2px 2px 2px 2px #D95032\", // 섀도우 색\r\n    border: \"solid 1px white\", // 테두리 색\r\n    backgroundColor: \"black\", // 배경색\r\n  },\r\n};\r\n\r\nconst SessionCreateContainer = (props) => {\r\n\r\n  let urlSearchParams = new URLSearchParams(\r\n    props.routerInfo.location.search.slice(1)\r\n  );\r\n  const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleValid, setTitleValid] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionValid, setDescriptionValid] = useState(false);\r\n  const [reserveDate, setReserveDate] = useState(\"\");\r\n  const [reserveDateValid, setReserveDateValid] = useState(false);\r\n  const [count, setCount] = useState(0)\r\n\r\n  const toDate = (reserve_date) => {\r\n    let date = new Date(reserve_date);\r\n    return date;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (holeId) {\r\n      axios\r\n        .get(\"https://www.ask2live.me/api/hole/read/\" + holeId)\r\n        .then((res) => {\r\n          const session = res.data.detail;\r\n          console.log(session)\r\n          setTitle(session.title);\r\n          setDescription(session.description);\r\n          let date = session.reserve_date.split(\":\");\r\n          setReserveDate(date[0] + \":\" + date[1]);\r\n          setCount(session.hole_reservations.target_demand);\r\n        });\r\n    }\r\n  }, [holeId]);\r\n\r\n  const [open, setOpen] = useState(0);\r\n  const [disable, setDisable] = useState(false)\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onIncrease = () => setCount(count + 1);\r\n  const onDecrease = () => count > 0 ? setCount(count - 1) : null;\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = (event, reason) => {\r\n    history.push(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const onClick = async () => {\r\n    setDisable(true)\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    console.log(localStorage.token);\r\n\r\n    const data = {\r\n      title: title,\r\n      description: description,\r\n      reserve_date: reserveDate,\r\n      target_demand: count,\r\n    };\r\n    console.log(data);\r\n    if (holeId) {\r\n      await axios\r\n        .patch(\r\n          \"https://www.ask2live.me/api/hole/update/\" + holeId,\r\n          data,\r\n          config\r\n        )\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    } else {\r\n      await axios\r\n        .post(\"https://www.ask2live.me/api/hole/create\", data, config)\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {holeId ? (\r\n        <MypageNav text={\"Live Q&A 수정하기\"} />\r\n      ) : (\r\n        <MypageNav text={\"Live Q&A 만들기\"} />\r\n      )}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        {/* <CssBaseline /> */}\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <AssignmentIcon />\r\n          </Avatar>\r\n\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"body1\"\r\n            butterBottom\r\n            style={{ fontFamily: \"BMJUA\" }}\r\n          >\r\n            세션 정보를 입력하세요\r\n          </Typography>\r\n          {/* <Typography variant=\"subtitle1\" gutterBottom>\r\n                    세션 정보를 입력하세요\r\n                </Typography> */}\r\n          <div className={classes.form}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"title\"\r\n              label=\"session title\"\r\n              name=\"title\"\r\n              error={titleValid}\r\n              helperText={titleValid ? \"제목을 입력해 주세요\" : \"\"}\r\n              // autoComplete=\"title\"\r\n              placeholder=\"세션 제목을 입력해주세요\"\r\n              autoFocus\r\n              value={title}\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 20)\r\n                  alert(\"제목은 20자 이내로 입력이 가능합니다!\");\r\n                setTitle(e.target.value.substring(0, 20));\r\n                setTitleValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              // variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              error={reserveDateValid}\r\n              helperText={reserveDateValid ? \"예약 일자를 입력해 주세요\" : \"\"}\r\n              id=\"reserveDate\"\r\n              label=\"Live Q&A 진행 예정일\"\r\n              name=\"reserveDate\"\r\n              type=\"datetime-local\"\r\n              // autoComplete=\"title\"\r\n              autoFocus\r\n              value={reserveDate}\r\n              // defaultValue={reserveDate}\r\n              onChange={(e) => {\r\n                setReserveDate(e.target.value);\r\n                let cur_date = new Date();\r\n                console.log(reserveDate);\r\n                console.log(\"설정한시간\", toDate(reserveDate).getTime());\r\n                console.log(\"현재시간\", cur_date.getTime());\r\n                console.log(\r\n                  (toDate(reserveDate).getTime() - cur_date.getTime()) / 1000\r\n                );\r\n                setReserveDateValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            <Grid\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <AccountCircleIcon /> &nbsp; 목표 인원 수\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                  // margin=\"normal\"\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={count}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              name=\"description\"\r\n              placeholder=\"소개글을 입력해주세요\"\r\n              error={descriptionValid}\r\n              helperText={\r\n                descriptionValid ? \"어떤 내용의 Q&A인지 설명해 주세요\" : \"\"\r\n              }\r\n              value={description}\r\n              label=\"Live Q&A 짧은 소개\"\r\n              type=\"password\"\r\n              id=\"description\"\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 200)\r\n                  alert(\"소개는 200자 이내로 입력이 가능합니다!\");\r\n                setDescription(e.target.value.substring(0, 200));\r\n                setDescriptionValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            {holeId ? (\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                onClick={onClick}\r\n                disabled={disable}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                onClick={onClick}\r\n                disabled={disable}\r\n              >\r\n                Live Q&A 만들기\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", bottom: \"50%\" }}\r\n        open={open}\r\n        autoHideDuration={1500}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          {holeId ? (\r\n            <span style={{ color: \"white\" }}>Live Q&A 수정 완료!</span>\r\n          ) : (\r\n            <span style={{ color: \"white\" }}>Live Q&A 생성 완료!</span>\r\n          )}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SessionCreateContainer;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport \"../../styles/style.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { getUserInfo } from \"../../actions/UserActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontSize: \"1.5em\",\r\n    top: \"8%\",\r\n    left: \"5%\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform:\"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  editWrapper: {\r\n    height: \"7%\",\r\n    left: 0,\r\n    right: 0,\r\n    position: \"fixed\",\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n    maxWidth: \"73em\",\r\n    top: 0,\r\n    zIndex: 1,\r\n    pointerEvents: \"none\",\r\n  },\r\n  editBtn: {\r\n    pointerEvents:\"auto\",\r\n    position: \"absolute\",\r\n    right:0,\r\n    height: \"100%\",\r\n    fontFamily: \"BMJUA\",\r\n    fontSize: \"1em\",\r\n    transform: \"translate(0, 1px)\",\r\n  },\r\n};\r\n\r\nconst ProfileDetail = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  console.log(\"PROPS\", props);\r\n  const user = props.routerInfo.location.state;\r\n\r\n  let profile = {};\r\n  useEffect(() => {\r\n    dispatch(getUserInfo(localStorage.token));\r\n  });\r\n\r\n  if (props.routerInfo.location.state.host) {\r\n    const host = props.routerInfo.location.state.host;\r\n    console.log(\"host : \", host);\r\n    if (!host.work_company.length)\r\n      host.work_company = \" \";\r\n    if (!host.work_field.length) host.work_field = \" \";\r\n\r\n    profile = {\r\n      username: host.username,\r\n      profile_image: host.profile_image,\r\n      work_company: host.work_company,\r\n      work_field: host.work_field,\r\n      bio: host.bio,\r\n    };\r\n  } else {\r\n    if (!user.work_company.length)\r\n      user.work_company = \" \";\r\n    if (!user.work_field.length) user.work_field = \" \";\r\n    profile = {\r\n      username: user.username,\r\n      profile_image: user.profile_image,\r\n      work_company: user.work_company,\r\n      work_field: user.work_field,\r\n      bio: user.bio,\r\n    };\r\n  }\r\n\r\n  let editFlag = false;\r\n  if(user.username === profile.username) editFlag = true\r\n\r\n  const goToEdit = () => {\r\n    console.log(\"click\");\r\n    history.push({\r\n      pathname: `${profile.username}/edit`,\r\n      state: user});\r\n  }\r\n  if (!user || !profile) return<p> 로딩중 </p>\r\n\r\n  return (\r\n    <>\r\n        <MypageNav text={\"프로필\"} editFlag={editFlag} />\r\n        {user.username === profile.username && (\r\n          <>\r\n          <div style={style.editWrapper}>\r\n            <Button onClick={goToEdit} style={style.editBtn}>\r\n              <span>편집</span>\r\n            </Button>\r\n          </div>\r\n          </>\r\n        )}\r\n\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n          <div>\r\n            <p className={classes.username}>{profile.username}</p>\r\n            <Avatar\r\n              className={classes.avatar}\r\n              aria-label=\"recipe\"\r\n              src={`https://www.ask2live.me${profile.profile_image}`}\r\n            ></Avatar>\r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            [근무 회사] {profile.work_company}\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            [일하는 분야] {profile.work_field}\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n                \r\n              <p style={{marginTop: 0}}>\r\n                {profile.bio}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDetail;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { SettingsInputAntenna } from \"@material-ui/icons\";\r\n\r\nimport \"../../styles/style.css\";\r\n\r\nimport axios from \"axios\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { getUserInfo, updateUserInfo } from \"../../actions/UserActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontSize: \"1.5em\",\r\n    top: \"8%\",\r\n    left: \"5%\",\r\n    // top: \"12%\",\r\n    // left: \"6.6%\",\r\n    maxWidth: \"6em\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  buttonGroup: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    left: 0,\r\n    right: 0,\r\n    bottom: \"5.5%\",\r\n    margin: \"auto\",\r\n    justifyContent: \"center\",\r\n  },\r\n  file: {\r\n    fontWeight: \"bold\",\r\n    position: \"absolute\",\r\n    top: \"23%\",\r\n    right: 0,\r\n    overflow: \"hidden\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    padding: \"3px\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n  },\r\n};\r\n\r\nconst MypageEdit = (props) => {\r\n  console.log(\"MypageEdit\");\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = props.routerInfo.location.state;\r\n\r\n  console.log(user);\r\n\r\n  const [image, setImage] = useState({});\r\n  const [inputs, setInputs] = useState({\r\n    username: user.username,\r\n    profile_image: \"https://www.ask2live.me\" + user.profile_image,\r\n    work_field: user.work_field,\r\n    work_company: user.work_company,\r\n    bio: user.bio,\r\n  });\r\n\r\n  const { username, profile_image, work_field, work_company, bio } = inputs;\r\n\r\n  const dispatch = useDispatch();\r\n  const onChange = useCallback((e) => {\r\n    console.log(\"e.target.name\", e.target.name);\r\n    if (e.target.name === \"image\") {\r\n      setImage({\r\n        profile_image: e.target.files,\r\n      });\r\n      console.log(\"e.target.files\", e.target.files);\r\n    } else {\r\n      const { name, value } = e.target;\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value,\r\n      });\r\n    }\r\n  });\r\n\r\n  const onClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + localStorage.token,\r\n      },\r\n    };\r\n    const data = {\r\n      work_field: work_field,\r\n      username: username,\r\n      work_company: work_company,\r\n      bio: bio,\r\n    };\r\n    console.log(\"data\", data);\r\n    const formData = new FormData();\r\n    formData.append(\"work_field\", data.work_field);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"work_company\", work_company);\r\n    formData.append(\"bio\", bio);\r\n\r\n    if (Object.keys(image).length != 0) {\r\n      formData.append(\"profile_image\", image.profile_image[0]);\r\n    }\r\n\r\n    console.log(\"====DATA====\", formData);\r\n    const resPatch = await axios.patch(\r\n      \"https://www.ask2live.me/api/user/update\",\r\n      formData,\r\n      config\r\n    );\r\n    console.log(\"업데이트 성공~\", resPatch.data);\r\n    dispatch(getUserInfo(localStorage.token));\r\n    const resGet = await axios.get(\r\n      \"https://www.ask2live.me/api/user/read\",\r\n      config\r\n    );\r\n    console.log(\"업데이트 유저 불러오기\", resGet);\r\n    console.log(\"====DATA====\", formData);\r\n\r\n    history.push({\r\n      pathname: \"/mypage/\" + username,\r\n      state: resGet.data.detail,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필 편집\"} />\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n          <div>\r\n            <p className={classes.username}>\r\n              <input\r\n                // className={classes.username}\r\n                style={{\r\n                  fontSize: \"1em\",\r\n                  maxWidth: \"6.9em\",\r\n                  border: \"none\",\r\n                  fontFamily: \"BMDOHYEON\",\r\n                  // borderBottom: \"1px solid\",\r\n                  backgroundColor: \"#FFEBE8\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                required\r\n                error\r\n                defaultValue={username}\r\n                placeholder=\"이름을 입력해주세요\"\r\n                name=\"username\"\r\n                onChange={onChange}\r\n              />\r\n            </p>\r\n\r\n            <Avatar\r\n              className={classes.avatar}\r\n              aria-label=\"recipe\"\r\n              src={profile_image}\r\n            ></Avatar>\r\n            <input\r\n              style={style.file}\r\n              type=\"file\"\r\n              name=\"image\"\r\n              // accept=\"image/*\"\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            <input\r\n              // className={classes.work_company}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                // borderBottom: \"1px solid\",\r\n                backgroundColor: \"#FFEBE8\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              defaultValue={work_company}\r\n              placeholder=\"회사 이름을 입력해주세요\"\r\n              name=\"work_company\"\r\n              onChange={onChange}\r\n            />\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            <input\r\n              // className={classes.work_field}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                color: \"grey\",\r\n                backgroundColor: \"#FFEBE8\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              defaultValue={work_field}\r\n              placeholder=\"일하시는 분야를 입력해주세요\"\r\n              name=\"work_field\"\r\n              onChange={onChange}\r\n            />\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n              {/* <p style={{marginTop: 0}}> */}\r\n              <textarea\r\n                className=\"bioWrapper\"\r\n                style={{\r\n                  border: \"none\",\r\n                  width: \"89%\",\r\n                  height: \"80%\",\r\n                  // backgroundColor: \"#F2AC57\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                defaultValue={bio}\r\n                placeholder=\"소개를 입력해주세요\"\r\n                name=\"bio\"\r\n                onChange={onChange}\r\n              />\r\n              {/* </p> */}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={style.buttonGroup}>\r\n            <Button\r\n              style={style.button}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <span color=\"030916\">\r\n                취소하기\r\n              </span>\r\n            </Button>\r\n\r\n            <Button\r\n              style={style.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={onClick}\r\n            >\r\n              <span color=\"030916\">\r\n                확정하기\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageEdit;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport getQuestionlist from '../../actions/QuestionListActions';\r\n\r\nconst MyQuestionCards = () => {\r\n  let [myQuestions, setMyQuestions] = useState([])\r\n\r\n  const user = useSelector(state => state.user)\r\n  const questions = useSelector(state => state.questionlist)\r\n  console.log('user', user.data.detail)\r\n  console.log('questionsList', questions.data.detail)\r\n  \r\n  const userId = user.data.detail.id\r\n  const questionsList = questions.data.detail\r\n\r\n  if(Object.keys(questionsList).length != 0){\r\n    questionsList.map((question) => {\r\n      const questionAuthor = parseInt(question.user)\r\n      console.log(questionAuthor)\r\n        if(userId === questionAuthor){\r\n          myQuestions = [...myQuestions, question]\r\n        }\r\n    })\r\n  }\r\n  console.log(myQuestions)\r\n\r\n  return (\r\n    <>\r\n      {myQuestions.length === 0 ? \r\n        <div>질문을 등록해주세요</div> :\r\n        \r\n        myQuestions.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst MyQuestionSend = ({session}) => {\r\n  const [ask, setAsk] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const postApi = async(isVoice, askValue) =>  {\r\n    const headers = {\r\n        'Authorization': 'Token ' + localStorage.token\r\n      }\r\n      const data = {\r\n          is_answered: false,\r\n          is_voice: isVoice,\r\n          question: askValue,\r\n      };\r\n      console.log(data);\r\n      const res = await axios.post(\r\n        \"https://www.ask2live.me/api/hole/\"+session.id + \"/question/create\",\r\n        data,\r\n        {headers:headers}\r\n      );\r\n      dispatch(getQuestionlist(session.id))\r\n}\r\n  return (\r\n    <>\r\n    \r\n    <div style={{paddingBottom:\"1em\"}}>\r\n    <input\r\n    type=\"text\"\r\n    maxLength=\"60\"\r\n    value={ask}\r\n    style={style.insert}\r\n    placeholder=\"최대 글자수는 60자입니다.\"\r\n    onChange={(e) => setAsk(e.target.value)}\r\n    />\r\n    <div style={style.submitbtn}>\r\n    <IconButton \r\n        onClick={()=>{\r\n          postApi(false, ask); setAsk(\"\")\r\n          \r\n          }} \r\n        className={classes.iconButton} \r\n        aria-label=\"send\">\r\n        <SendIcon/>\r\n    </IconButton>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst QuestionCard = ({question}) => {\r\n    const classes = useStyles();\r\n    console.log(question)\r\n    return(\r\n        <>\r\n        <Card key={question.id} className={classes.card}>\r\n        <CardHeader\r\n            subheader={question.user_username}/>\r\n        <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {question.question}\r\n        </Typography>\r\n        </CardContent>\r\n        </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//Tab 관련 로직\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: \"1000\",\r\n    backgroundColor: \"#E2D8CF\",\r\n    paddingBottom: \"3em\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n\r\n  submitbtn : {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      float: \"right\",\r\n      right: \"3px\",\r\n      width: \"10%\",\r\n      top: \"2.4em\",\r\n      height: \"2.4em\",\r\n      zIndex: \"2\",\r\n  },\r\n  insert : {\r\n      top: \"3.2em\",\r\n      left : \"9px\",\r\n      height: \"2em\",\r\n      width:\"86%\",\r\n      borderBottom : \"1px solid\",\r\n      borderTop: \"0px\",\r\n      borderLeft : \"0\",\r\n      borderRight: \"0\",\r\n  }\r\n\r\n}\r\n\r\nconst PreQuestionNav = ({session}) => {\r\n  const classes = useStyles();\r\n  const questions = useSelector(state => state.questionlist)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor:\"gray\"}}>\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n        >\r\n          <LinkTab label=\"등록된 질문\" href=\"/drafts\" {...a11yProps(0)} />\r\n          <LinkTab label=\"질문하기\" href=\"/trash\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      {questions.data.detail.length === 0 ? \r\n        <div>질문을 등록해주세요</div> :\r\n        \r\n        questions.data.detail.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <MyQuestionSend session={session} />\r\n        <MyQuestionCards questions={questions} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreQuestionNav","import React, {useEffect, useState} from \"react\";\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PreQuestionNav from './PreQuestionNav'\r\nimport MypageNav from '../mypage/MypageNav'\r\nimport getQuestionlist from \"../../actions/QuestionListActions\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      display: 'flex',\r\n      maxWidth: \"70em\",\r\n      minWidth: \"18em\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    card: {\r\n        maxWidth: \"30em\",\r\n    }\r\n  }));\r\n\r\nconst circleStyle={\r\n    backgroundColor:\"#E2D8CF\",\r\n    width : \"77px\",\r\n    height : \"77px\",\r\n    borderRadius: \"38px\",\r\n  }\r\n\r\n  function CircularProgressWithLabel(props) {\r\n      const session = props.session\r\n      console.log(session)\r\n    return (\r\n      <Button \r\n        style={circleStyle}>\r\n      <Box position=\"relative\" display=\"inline-flex\">\r\n        <div style={{color:\"#D95032\", width:\"100%\"}}>\r\n        <CircularProgress thickness=\"3\" size=\"5rem\" variant='determinate' color='inherit'  {...props} /></div>\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n             <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Chip size=\"small\" variant=\"outlined\" label={`\r\n                ${session.hole_reservations.target_demand == 0? \r\n                    100 : Math.ceil(session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100)}%`} />\r\n            </Grid>\r\n        </Box>\r\n      </Box>\r\n      </Button>\r\n  \r\n    );\r\n  }\r\n\r\nconst SessionDetail = ({session}) => {\r\n  const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    if(session === undefined){\r\n      return(\r\n        <>\r\n        로딩중\r\n        </>\r\n      )\r\n    }\r\n    \r\n    \r\n    return(\r\n        <>\r\n        <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={9} className={classes.paper}>\r\n          {session.title}<br/>\r\n          {session.reserve_date}<br/>\r\n          찜 {session.hole_reservations.guests.length} / {session.hole_reservations.target_demand}\r\n          {session.hole}\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <CircularProgressWithLabel \r\n            className={classes.paper}\r\n            key={session.id} \r\n            session = {session}\r\n            value={(session.hole_reservations) ? \r\n              Math.ceil(\r\n                session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0} \r\n            current={(session.hole_reservations) ? session.hole_reservations.guests.length  : 0 }\r\n        />\r\n        </Grid>\r\n        \r\n      </Grid>\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ListPreQuestions = ({questions, session}) => {\r\n    console.log('qestions', questions)\r\n    return(\r\n        <>\r\n        <PreQuestionNav session={session}/>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst PreQuestions = () => {\r\n    const dispatch = useDispatch()\r\n    const questions = useSelector(state => state.questionlist)\r\n    const sessions = useSelector(state => state.session.data)\r\n    let targetSession = {};\r\n\r\n    const href = window.location.href\r\n    const sessionId = parseInt(href.split('/')[4])\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        sessions.map((session) => {\r\n          console.log('DEBUG22',session)\r\n            if(sessionId === session.id){\r\n                targetSession = {...targetSession, session}\r\n            }\r\n        })\r\n      }\r\n    useEffect(() => {\r\n      if(Object.keys(questions.data).length === 0){\r\n        dispatch(getQuestionlist(sessionId))\r\n      }\r\n    })\r\n    \r\n    return (\r\n            <>\r\n        <MypageNav text={'Live Q&A 상세'} />\r\n        \r\n        <SessionDetail session={targetSession.session}/>\r\n\r\n        {Object.keys(questions.data).length > 0 ? <ListPreQuestions questions={questions} session={targetSession.session}/> : null}\r\n\r\n        </>\r\n    )\r\n  \r\n}\r\nexport default PreQuestions;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(channelNum){\r\n    return axios.get('https://www.ask2live.me/api/hole/live/read/' + channelNum);\r\n}\r\n\r\nconst getEnteredSession = channelNum => dispatch => {\r\n    console.log('-----getEnteredSession-----')\r\n    dispatch({type: ENTEREDSESSION_GET_PENDING}); \r\n\r\n\r\n    return getApi(channelNum).then(\r\n        (response) => {\r\n            console.log(response);\r\n            dispatch({ type: ENTEREDSESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ENTEREDSESSION_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getEnteredSession;","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      margin: \"3%\",\r\n      maxWidth: \"50em\",\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    },\r\n    cardContent: {\r\n      height: \"30px\",\r\n    },\r\n    cookieWrapper: {\r\n      float: \"left\",\r\n      marginLeft: \"2%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      overflow: \"hidden\",\r\n    },\r\n    useCookie: {\r\n      float: \"left\",\r\n      margin: \"auto\",\r\n      backgroundImage: \"url('/static/cookieMould.png')\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      overflow: \"hidden\",\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    participant : {\r\n        width: \"100%\",\r\n        maxWidth: \"30em\",\r\n        padding: \"10px\",\r\n    },\r\n    tmp: {\r\n        float: \"left\",\r\n        marginLeft : \"2%\",\r\n    },\r\n    follow: {\r\n        float : \"right\",\r\n        width: \"5em\",\r\n        height:\"5em\",\r\n        backgroundColor:\"pink\",\r\n    }\r\n}\r\n\r\nconst Participant = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\">\r\n                <Card style={style.participant} className={classes.root}>\r\n                    <div\r\n                        style={{ backgroundImage: \"url('/static/live_IU2.png')\" }}\r\n                        className={classes.cookieWrapper}\r\n                    >\r\n                        <div className={classes.useCookie}></div>\r\n                    </div>\r\n                    <div style={style.tmp}>\r\n                        <p style={{marginBottom:\"5px\"}}>{props.nickName}</p>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {props.workCompany ? \r\n                            <>\r\n                             {props.workCompany} |\r\n                            </>\r\n                             : null}\r\n                            {props.workField ? \r\n                            <>\r\n                             {props.workField}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !props.workCompany && !props.workField ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                    {/* <div style={style.follow}>follow</div> */}\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Participant;","import React, {useState, useEffect} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Participant from \"./Participant\"\r\nimport axios from \"axios\"\r\n\r\nconst style = {\r\n    participantlist : {\r\n        width: \"100%\",\r\n        paddingTop: \"1.5em\",\r\n        borderRadius : \"15px\",\r\n    }\r\n}\r\n\r\nconst ParticipantList = (props) => {\r\n\r\n    const participants = useSelector(state => state.enteredSession);\r\n\r\n\r\n    return (\r\n        <>\r\n        <p className=\"NanumGothic3\" style={{position:\"absolute\", marginTop: \"1.5em\"}}>\r\n            {participants.arrived?\r\n                participants.data.detail.participant.length+\"명이 듣고 있어요\"\r\n                :\r\n                <></>\r\n            }\r\n        </p>\r\n            <Paper style={style.participantlist} elevation={0}>\r\n                <br/>\r\n                <div style={{position:\"absolute\", height:\"100%\", width:\"100%\", overflow:\"auto\"}}>\r\n                    {participants.arrived ? \r\n                        participants.data.detail.participant.map((participant) => \r\n                        <Participant \r\n                        nickName={participant.username}\r\n                        workField={participant.work_field}\r\n                        workCompany={participant.work_company}\r\n                        profileImage={participant.profile_image_url}/>)\r\n                        : \r\n                        <p>로딩중</p>}\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ParticipantList;","import React from \"react\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst style = {\r\n    cloud : {\r\n        display : \"inline-block\",\r\n        backgroundColor : \"white\",\r\n        borderRadius : \"20px\",\r\n        margin: \"0 0 0.6em 1em\",\r\n        padding: \"0.4em 0.8em\",\r\n        fontSize: \"0.9em\"\r\n    },\r\n    audience1 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,1)\"\r\n    },\r\n    audience2 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,0.6)\"\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  }));\r\n\r\nconst StringQuestion = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let questionStr = props.userQuestion;\r\n\r\n    let maxNum = 23;\r\n    let dst;\r\n    let questionStrAry = []\r\n    \r\n    while (true)\r\n    {\r\n        if (questionStrAry.length === 2)\r\n            break;\r\n        if (questionStr.length <= maxNum)\r\n        {\r\n            questionStrAry.push(questionStr)\r\n            break;\r\n        }\r\n    \r\n        dst = questionStr.lastIndexOf(\" \", maxNum);\r\n    \r\n        if (dst == -1)\r\n        {\r\n            questionStrAry.push(questionStr.substring(0, maxNum - 1))\r\n            questionStr = questionStr.slice(maxNum);\r\n        }\r\n        else\r\n        {\r\n            questionStrAry.push(questionStr.substring(0, dst))\r\n            questionStr = questionStr.slice(dst + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{margin: \"0em 0em 0.5em 1em\", display:\"flex\"}}>\r\n            <Avatar src={props.hostImage} className={classes.small}/>\r\n            <span style={style.audience1} className=\"NanumGothic\">{props.userNickName}</span>\r\n            <span style={style.audience2} className=\"NanumGothic\">님의 질문</span>\r\n            {props.isHost?\r\n            <button\r\n            onClick={()=>{props.onAnswered(props.currentQuestionId)}}\r\n            >완료</button>\r\n            :\r\n            <></>\r\n            }\r\n        </div>\r\n        {console.log(questionStrAry)}\r\n        {\r\n            questionStrAry.map((questionUnit) => \r\n            <>\r\n                <p style={style.cloud} className=\"BMJUA\">{questionUnit}</p><br/>\r\n            </>\r\n            )\r\n        }\r\n\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default StringQuestion;","import React from \"react\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9),\r\n        zIndex:\"1\",\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst style = {\r\n    circle : {\r\n        border : \"solid 1px rgba(255, 255, 255, .3)\",\r\n        borderRadius : \"100%\",\r\n    }\r\n}\r\n\r\nconst UserAvatar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <div style={style.circle}>\r\n            <div className={classes.root}>\r\n                <Avatar alt={props.hostName} src={props.imageLink} className={classes.large}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserAvatar\r\n\r\n\r\n\r\n","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport Avatar from \"../Avatar\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport \"../../styles/style.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent:\"center\",\r\n        '& > *': {\r\n          margin: theme.spacing(0),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst VoiceQuestion = (props) => {\r\n    console.log(\"무야호\", props)\r\n    const classes = useStyles();\r\n    const [click, setClick] = useState(false)\r\n    const [clickStyle, setClickStyle] = useState({zIndex:\"1\", backgroundColor:\"#63BF8B\"})\r\n\r\n    const sendP2PMessage = useCallback((recipientUID, peerMsg) => {\r\n        console.log(\"sendP2PMessage\");\r\n    \r\n        // An RtmMessage object.\r\n        const remoteUID = String(recipientUID);\r\n    \r\n\r\n        // p2p message\r\n        console.log(\"리모트 UID: \", remoteUID);\r\n        console.log(\"리모트 msg: \", peerMsg);\r\n    \r\n        if (peerMsg) {\r\n          (props.rtmClient)\r\n            .sendMessageToPeer({ text: peerMsg }, remoteUID)\r\n            .then((sendResult) => {\r\n              if (sendResult.hasPeerReceived) {\r\n                console.log(\"peer recieved \" + peerMsg + \" successfully\");\r\n\r\n              } else {\r\n                console.log(\"peer did not recieved \" + peerMsg + \" unlog\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"RTM message recieved err\");\r\n            });\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n        <div style={{position:\"absolute\", width:\"100%\", display:\"flex\", justifyContent:\"center\", top:\"0\"}}>\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <Avatar alt={props.userNickName} src={props.imageLink} className={classes.large}/>\r\n                </div>\r\n                <div className={classes.root}>\r\n                 <p style={{color:\"rgba(255,255,255,0.6)\"}}>{props.userNickName}</p>\r\n                </div>\r\n                <div className={classes.root}>\r\n                {props.isHost?\r\n                <>\r\n                <button\r\n                disabled={click}\r\n                style={clickStyle}\r\n                onClick={()=>{setClickStyle({zIndex:\"1\", backgroundColor:\"grey\"});setClick(true); sendP2PMessage(props.userUid, \"host\")}}\r\n                >\r\n                    <span style={{color:\"black\"}} className=\"BMJUA\">연결</span>\r\n                </button>\r\n                <button\r\n                style={{zIndex:\"1\",backgroundColor:\"white\"}}\r\n                onClick={()=>{\r\n                    sendP2PMessage(props.userUid, \"audience\")\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setTimeout(() => {\r\n                        setClick(false);\r\n                        setClickStyle({zIndex:\"1\", backgroundColor:\"#63BF8B\"});\r\n                    }, 4000);\r\n                }}\r\n                >\r\n                <span style={{color:\"black\"}} className=\"BMJUA\">다음</span>\r\n                </button>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"voiceCircle\"/> \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VoiceQuestion;","import React, {useState, useCallback} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport StringQuestion from \"./StringQuestion\";\r\nimport VoiceQuestion from \"./VoiceQuestion\";\r\n\r\nconst style = {\r\n    wait : {\r\n        top: \"40%\",\r\n        position: \"absolute\",\r\n        color : \"rgba(255,255,255,0.7)\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        width:\"100%\",\r\n    }\r\n}\r\n\r\nconst CurrentQuestion = (props) => {\r\n    \r\n    const questionPatchApi = async(questionId) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: true,\r\n          };\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/question/update/\"+questionId,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n    const forQuestionidx = useCallback((questionList) => {\r\n        return questionList.findIndex((question => question.is_answered == false))\r\n    })\r\n\r\n\r\n    const questionResponse = useSelector(state => state.questionlist)\r\n\r\n    if (questionResponse.arrived)\r\n    {\r\n        let questionList = questionResponse.data.detail\r\n        if (questionList.length == 0) \r\n            return (\r\n                <>\r\n                <div style={style.wait}>\r\n                 <p>질문이 없습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        let questionIdx = forQuestionidx(questionList);\r\n        //이걸 매번 돌리기엔 비효율적.. useEffect를 쓰면 될까??\r\n        if (questionIdx == -1)\r\n            return (\r\n                <>\r\n                <div style={style.wait} className=\"BMJUA\">\r\n                <p>모든 질문이 답변되었습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        else \r\n        {\r\n            const onAnswered = (questionId) => {\r\n                questionPatchApi(questionId);\r\n            } \r\n\r\n            let currentQuestion = questionList[questionIdx];\r\n            let userNickName = currentQuestion.user_username;\r\n            let isVoice = currentQuestion.is_voice;\r\n            let userUid = currentQuestion.user_uid;\r\n\r\n            if (isVoice)\r\n                return (\r\n                <>\r\n                <VoiceQuestion \r\n                userUid={userUid} \r\n                userNickName={userNickName} \r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered} \r\n                currentQuestionId={currentQuestion.id}\r\n                client={props.client}\r\n                rtmClient={props.rtmClient}\r\n                host={props.host}\r\n                localAudioTrack={props.localAudioTrack}\r\n                remoteUsers={props.remoteUsers}\r\n                channelNum={props.channelNum}\r\n                />\r\n                </>\r\n                )\r\n\r\n            else {\r\n                let userQuestion = currentQuestion.question;\r\n                return (\r\n                <StringQuestion userNickName={userNickName} userQuestion={userQuestion} isHost={props.isHost} onAnswered={onAnswered} currentQuestionId={currentQuestion.id}/>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    else return (\r\n        <>\r\n        <div style={style.wait}>\r\n            <p> 로딩중 </p>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n\r\n    // if (questionResponse.arrived)\r\n    // {\r\n    //     let questionList = questionResponse.data.detail\r\n    //     if (questionList.length == questionNum) \r\n    //         return <p>질문이 없습니다.</p>\r\n    //     else if (questionList.length != questionNum)\r\n    //     {\r\n    //         let currentQuestion = questionList[questionNum];\r\n    //         let userNickName = currentQuestion.user_nickname;\r\n    //         let isVoice = currentQuestion.is_voice;\r\n    //         if (isVoice)\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userNickName} 음성 질문입니다</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         else {\r\n    //             let userQuestion = currentQuestion.question;\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userQuestion}</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         }\r\n    //     }\r\n    // }\r\n   \r\n}\r\n\r\n\r\nexport default CurrentQuestion","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"100%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n        display: \"\",\r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        float: \"left\",\r\n        height: theme.spacing(10),\r\n        // height: \"70px\",\r\n        borderRadius : \"15px\",\r\n      },\r\n    },\r\n    myPaper : {\r\n        border : \"3px solid white\",\r\n        boxShadow: \"0px 0px 2px 3px black\"\r\n    },\r\n    otherPaper: {\r\n        border : \"2px solid black\",\r\n    }\r\n  }));\r\n\r\nconst style = {\r\n    card : {\r\n        borderRadius : \"15px 15px 0 0\",\r\n        backgroundColor: \"#D95032\",\r\n        height: \"1.5rem\",\r\n        // height: \"20px\",\r\n        padding: \"0.3rem\",\r\n        // padding: \"3px\",\r\n    },\r\n\r\n}\r\n\r\nexport default function SimplePaper(props) {\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n    <>\r\n    {props.isFirst?\r\n    <div style={{marginLeft: \"10px\", marginBottom:\"10px\"}}>\r\n     <div style={{borderRadius:\"100%\", display:\"inline-block\", backgroundColor:\"#d95032\", width:\"10px\", height:\"10px\"}}></div>\r\n    <span className=\"CookieRun\" style={{marginLeft: \"8px\",marginBottom:\"10px\"}}>\r\n       지금 답변중!</span>\r\n    </div>\r\n    :\r\n    null\r\n    }\r\n    <div className={classes.root}>\r\n    <Paper className={props.myQuestion? classes.myPaper : classes.otherPaper} style={props.isVoice? {backgroundColor:\"#D95032\"} : null} elevation={2} >\r\n        <div style={style.card}>\r\n            <p style={{margin:\"4px 0 0 4px\", padding :\"0\"}}className=\"BMDOHYEON\">{props.userName}</p>\r\n        </div>\r\n            <p style={{margin:\"4px 0 0 8px\", padding :\"0\"}}className=\"NanumGothic2\">{props.value}</p>\r\n    </Paper>\r\n    </div>\r\n    {props.isFirst? \r\n    <>\r\n    <div style={{width:\"100%\", borderBottom:\"1px solid rgba(0, 0, 0, 0.5)\"}}/>\r\n    <br/>\r\n    </>\r\n    :\r\n    null\r\n    }\r\n    </>\r\n);\r\n}","import React, { useState }from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BorderColor } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Question from \"./Question\"\r\nimport \"../../styles/style.css\" \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: \"95%\",\r\n      '& > *': {\r\n        overflow: \"hidden\",\r\n        margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: theme.spacing(10),\r\n        // height: \"75px\",\r\n        backgroundColor: \"rgba(192, 0, 0, 0)\",\r\n      },\r\n      zIndex: \"3\",\r\n    },\r\n    border: {\r\n        borderRadius: \"15px\",\r\n        padding : \"0.5em\",\r\n        // padding : \"3px\",\r\n    }\r\n  }));\r\n\r\nexport default function QuestionSwiper(props) {\r\n\r\n    const classes = useStyles();\r\n    const [transStyle, setTransStyle] = useState({\r\n        transform : \"translate(0, 0)\",\r\n    })\r\n\r\n    // const handleTrans = () => {\r\n    //     setTransStyle\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.root}>\r\n        <Paper className={classes.border} elevation={0}>\r\n            <Grid style={transStyle} className=\"trans\" container justify=\"center\">\r\n                <Question isHost={props.isHost} userName=\"미\" value=\"무\" nextmove={()=>{setTransStyle({transform : \"translate(0, -6em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"어\" value=\"야\" nextmove={()=>{setTransStyle({transform : \"translate(0, -12em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"캣\" value=\"호\" nextmove={()=>{setTransStyle({transform : \"translate(0, -18em)\"})}}/>\r\n            </Grid>\r\n    \r\n        </Paper>\r\n        </div>\r\n        </>\r\n    );\r\n}","import { useSelector } from \"react-redux\" \r\nimport React, { useState }from 'react';\r\nimport Question from \"./Question\";\r\nimport axios from \"axios\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst style ={\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        bottom: \"90%\",\r\n        width: \"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\n\r\nconst QuestionList = (props) => {\r\n\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid black\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    const questionAry = useSelector(state => state.questionlist)\r\n    const myName = useSelector(state => state.user.data.detail.username)\r\n    console.log(myName);\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{setClick2(); setClick1({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">등록된 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{setClick1(); setClick2({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">답변된 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        \r\n        {click1 ?\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ? \r\n            questionAry.data.detail.map((questionInfo) =>\r\n                questionInfo.is_answered ?\r\n                    null\r\n                :\r\n                    questionInfo.user_username === myName?\r\n                    <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}\r\n                    isFirst={questionInfo === questionAry.data.detail[questionAry.data.detail.findIndex((value) => value.is_answered === false)]}/>\r\n                    :\r\n                    <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}\r\n                    isFirst={questionInfo === questionAry.data.detail[questionAry.data.detail.findIndex((value) => value.is_answered === false)]}/>\r\n            )\r\n\r\n            : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        :\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ? \r\n            questionAry.data.detail.map((questionInfo) =>\r\n                questionInfo.is_answered ?\r\n                    questionInfo.user_username === myName?\r\n                    <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}/>\r\n                    :       \r\n                    <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}/>\r\n                :\r\n                    null\r\n            )\r\n\r\n            : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionList","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport useSelection from \"antd/lib/table/hooks/useSelection\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        maxWidth: \"42em\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"95%\",\r\n      bottom: \"0%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: theme.spacing(10),\r\n        // height: \"70px\",\r\n        borderRadius : \"15px\",\r\n      },\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    paper : {\r\n        position: \"absolute\",\r\n        bottom:\"0%\",\r\n        width: \"100%\",\r\n        height : \"100%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"20px 20px 0 0 \"\r\n    },\r\n    questionbutton : {\r\n        position: \"absolute\",\r\n        top: \"-4%\",\r\n        right: \"-2%\",\r\n    },\r\n    card : {\r\n        paddingTop:\"4px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        maxWidth:\"42em\",\r\n        borderRadius : \"15px 15px 0 0\",\r\n        backgroundColor: \"#D95032\",\r\n        height: \"1.7em\",\r\n        // height: \"20px\",\r\n        zIndex:\"8\",\r\n        // padding: \"3px\",\r\n    },\r\n    submitbtn : {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        float: \"right\",\r\n        right: \"5px\",\r\n        width: \"10%\",\r\n        top: \"2.4em\",\r\n        height: \"2.4em\",\r\n        zIndex: \"2\",\r\n    },\r\n    insert : {\r\n        position:\"absolute\",\r\n        top: \"3.2em\",\r\n        left : \"10px\",\r\n        height: \"2em\",\r\n        width:\"86%\",\r\n        borderBottom : \"1px solid\",\r\n        borderTop: \"0px\",\r\n        borderLeft : \"0\",\r\n        borderRight: \"0\",\r\n    }\r\n}\r\n\r\nconst Questioning = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ask, setAsk] = useState(\"\")\r\n    const [voice, setVoice] = useState(true)\r\n    const [queStyle, setQueStyle] = useState({opacity: \"1\"})\r\n\r\n    const myInfo = useSelector(state => state.user);\r\n\r\n\r\n\r\n    const pressEnter = (e) => {\r\n        if (e.key == 'Enter'){\r\n            postApi(false, ask);\r\n            setAsk(\"\")\r\n            props.openQuestionAlert();\r\n            props.goQueUp({transform : \"translate(0, 100%)\"});\r\n            props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n        }\r\n    }\r\n\r\n    const voiceClick = () => {\r\n        if (voice)\r\n        {\r\n            setQueStyle({opacity: \"0\", display : \"none\"}) \r\n            // setTimeout((()=>setQueStyle({display: \"none\"})),1000)\r\n        }\r\n        else\r\n            setQueStyle({opacity: \"1\"})\r\n            // setTimeout((()=>setQueStyle({display:\"flex\"})),1000)\r\n        setVoice(prevVoice => !prevVoice)\r\n    }\r\n\r\n    const postApi = async(isVoice, askValue) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: false,\r\n              is_voice: isVoice,\r\n              question: askValue,\r\n          };\r\n          console.log(data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId + \"/question/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Paper style={style.paper} elevation={1}>\r\n            <Grid container justify=\"center\">\r\n                <div className={classes.root}>\r\n                    <Paper elevation={2} >\r\n                        <div style={style.card}>\r\n                            {\r\n                                myInfo.arrived?\r\n                                <span\r\n                                style={{marginLeft: \"10px\"}}\r\n                                className=\"BMJUA\"\r\n                                >{myInfo.data.detail.username}</span>\r\n                                :\r\n                                <span> 로딩중 </span>\r\n                            }\r\n                            <div style={{float:\"right\"}}>\r\n                                <span className=\"BMJUA\" style={{fontSize: \"1em\"}}> 텍스트로 질문하실래요? </span>\r\n                                <Checkbox\r\n                                    style={{color: \"black\", right : \"3px\", padding: \"0\"}}\r\n                                    size=\"small\"\r\n                                    inputProps={{ 'aria-label': 'checkbox with small size' }}\r\n                                    onClick={voiceClick}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div style={queStyle} className=\"QuestioningWrapper\">\r\n                            <p className=\"NanumGothic3\" style={{transform:\"translate(0, 15px)\", color: \"white\", marginLeft: \"1em\", fontSize:\"0.8em\"}}>차례가 되면 호스트가 음성 권한을 부여합니다.</p>\r\n                        </div>\r\n                        <input\r\n                        type=\"text\"\r\n                        maxLength=\"60\"\r\n                        value={ask}\r\n                        style={style.insert}\r\n                        placeholder=\"최대 글자수는 60자입니다.\"\r\n                        onChange={(e) => setAsk(e.target.value)}\r\n                        onKeyPress={pressEnter}\r\n                        />\r\n                        <div style={style.submitbtn}>\r\n                        <IconButton \r\n                            onClick={()=>{\r\n                                if (voice)\r\n                                {\r\n                                    postApi(true, \"(음성 질문입니다)\"); \r\n                                    setAsk(\"\");\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }\r\n                                else \r\n                                    postApi(false, ask); setAsk(\"\")\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }} \r\n                            className={classes.iconButton} \r\n                            aria-label=\"send\">\r\n                            <SendIcon/>\r\n                        </IconButton>\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </Grid>\r\n        <IconButton style={style.questionbutton} onClick={()=>{props.goQueUp({transform : \"translate(0, 100%)\"}); props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{props.goDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n            <CloseQuestioning fontSize=\"large\" />\r\n        </IconButton>\r\n        </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questioning","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\";\r\n\r\nimport ParticipantsButton from '@material-ui/icons/Group';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport QuestionListButton from '@material-ui/icons/FormatListBulleted';\r\nimport QuestionButton from '@material-ui/icons/ContactSupport';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { SportsRugbySharp } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n    border: \"1px solid rgba(255, 255, 255, 0.5)\",\r\n    boxShadow: \"none\",\r\n    width: \"100%\",\r\n    height: \"2.5em\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  root2: {\r\n    padding: '0 0 0 10px',\r\n    margin : \"0\",\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n    boxShadow: \"none\",\r\n    Width : \"6em\",\r\n    height: \"2.5em\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    // backgroundColor: \"#D95032\",\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n    flex: 1,\r\n  },\r\n  divider: {\r\n    height: 35,\r\n    margin: 4,\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    questioningBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        marginRight:\"5px\", \r\n        backgroundImage:\"url('/static/questionPlus.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      },\r\n    questionListBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/questionList.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n    participantBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/participant.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n}\r\n\r\nexport default function CustomizedInputBase(props) {\r\n\r\n    const dispatch = useDispatch();\r\n   const classes = useStyles();\r\n  const pressEnter = (e) => {\r\n      if (e.key == 'Enter'){\r\n          props.goMessageSend();\r\n      }\r\n  }\r\n  return (\r\n      <>\r\n    <Paper className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"내용 입력하기\"\r\n        value={props.message}\r\n        onChange={(e) =>\r\n          {\r\n            if(e.target.value.length > 100)\r\n              alert('100자 이내로 입력이 가능합니다')\r\n            props.goSetMessage(e.target.value.substring(0, 100))}\r\n          }\r\n        onKeyPress={pressEnter}\r\n      />\r\n        <IconButton onClick={props.goMessageSend} aria-label=\"send\">\r\n        <SendIcon style={{color:\"white\"}}/>\r\n      </IconButton>\r\n    </Paper>\r\n    <Paper className={classes.root2}>\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      {props.isHost?\r\n        <IconButton\r\n        style={style.participantBtn}\r\n        aria-label=\"participants\" \r\n        onClick={()=>{dispatch(getEnteredSession(props.channelNum)); props.goUserUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}}>\r\n        </IconButton>\r\n      :\r\n      <IconButton \r\n      onClick={()=>{props.goQueUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton} aria-label=\"question\"\r\n      style={style.questioningBtn}\r\n      >\r\n        {/* <QuestionButton/> */}\r\n      </IconButton>\r\n      }\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      <IconButton \r\n      style={style.questionListBtn}\r\n      onClick={()=>{console.log(\"press button\"); props.goListUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton2} aria-label=\"question_list\">\r\n        {/* <QuestionListButton/> */}\r\n      </IconButton>\r\n    </Paper>\r\n    </>\r\n  );\r\n}","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Comment, Tooltip } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Message = memo(props => {\r\n  const { message: { sender, sent_timestamp, text } } = props;\r\n\r\n\r\n  return (\r\n    // <Comment\r\n    //   style={{ paddingBottom: 0 }}\r\n    //   content={<>\r\n    //   <span \r\n    //   style={{display:\"inline-block\", width: \"6em\"}}>{sender}\r\n    //   </span>\r\n    //   <span style={{wordBreak: \"break-all\" , textAlign: 'left' }}>{text}</span>\r\n    //   </>}\r\n    // />\r\n    <div style={{display:\"flex\", width: \"100%\"}}>\r\n        <div style={{color: \"rgba(255,255,255,0.5)\", display:\"flex\", width: \"7em\", margin: \"0 1em 15px 0\"}}>\r\n            {sender}\r\n        </div>\r\n        <div style={{position:\"relative\", width: \"100%\", maxWidth : \"37em\", display:\"flex\", wordBreak: \"break-all\" , textAlign: 'left' }}>\r\n         {text}\r\n        </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Empty, Card } from 'antd';\r\n\r\nconst EmptyScreen = props => {\r\n  return (\r\n    <Card className='empty-screen-container' style={props.containerStyle}>\r\n      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={props.description} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nEmptyScreen.propTypes = {\r\n  description: PropTypes.string,\r\n  containerStyle: PropTypes.object\r\n}\r\n\r\nexport default EmptyScreen;","import React, { useRef, useState, useEffect, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, PageHeader, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\nimport MessageInput from './MessageInput';\r\nimport EmptyScreen from './EmptyScreen';\r\nimport Spinner from './Spinner';\r\nimport { onRoomMessagesRead } from '../../../actions/MessagesActions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport InsertField from \"../InsertField\"\r\nimport \"../../../styles/style.css\"\r\nimport { useCacheErrors } from 'antd/lib/form/util';\r\n// import List from '@material-ui/core/List';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst windowPadding = 325;\r\n\r\nconst style = {\r\n    InsertfieldWrapper: {\r\n        position: \"fixed\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        justifyContainer : \"center\",\r\n        height : \"4.5em\",\r\n        bottom:\"0%\",\r\n        width: \"90%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"43em\",\r\n        zIndex:\"8\",\r\n    },\r\n    Insertfield:{\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        left : \"0%\",\r\n        width: \"100%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"44em\",\r\n        zIndex:\"8\",\r\n    },\r\n    top : {\r\n        position : \"absolute\",\r\n        top : \"25%\",\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Chat = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let currentUrl = window.location.href;\r\n    console.log(\"Chat Url : \", currentUrl);\r\n    const params1 = currentUrl.split('?')\r\n    const params2 = params1[1].split('&')\r\n    const params3 = params2[1].split('=')\r\n    const roomId = params3[1]\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        let element = document.querySelector(\".chatting\");\r\n        if (element) {\r\n\r\n          element.scrollTop = element.scrollHeight ? element.scrollHeight : 0;\r\n        }\r\n        console.log(\"Here\");\r\n    }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [roomSocket, setRoomSocket] = useState(null);\r\n\r\n  // const roomId = \"c9c9dd9bb\";\r\n\r\n  // const { room, messages: { messages, loading: loadingChat }, username, windowHeight, onBack, onRoomMessagesRead } = props;\r\n  const { messages: { messages, loading: loadingChat }, username,  onRoomMessagesRead } = props;\r\n  const { room, windowHeight, onBack} = props;\r\n  \r\n\r\n  const user = useSelector(state => state.user.data.detail);\r\n\r\n  useEffect(() => {\r\n      roomSocket && roomSocket.close();\r\n      setRoomSocket(onRoomMessagesRead(roomId)); //세션에 관한 정보 중에서 session.id를 여기 바로 넣으면 채팅방이 구분됨\r\n    }, [room]);\r\n    \r\n    const onMessageSend = () => {\r\n      if (roomSocket) {\r\n        roomSocket.send(JSON.stringify({ command: 'new_message', data: { text: message, sender: user.username } }));\r\n        setMessage('');\r\n        setTimeout(scrollToBottom,300);\r\n      }\r\n    }\r\n    setTimeout(scrollToBottom,500);  // 채팅 올라오는 속도 조절은 타임아웃으로.. \r\n\r\n    const handleInfiniteOnLoad = () => {\r\n        setLoading(true);\r\n        messages.length > 14 && setLoading(false) && setHasMore(false);\r\n    };\r\n    \r\n  const renderList = () => {\r\n    if (loadingChat) return  (\r\n        <>\r\n    <Grid style={style.top} container justify=\"center\">\r\n        <div  className={classes.root}>\r\n            <CircularProgress />\r\n        </div>\r\n    </Grid>\r\n        </>\r\n    )\r\n\r\n    if (!messages.length) return <EmptyScreen description='' containerStyle={{ borderWidth: 0 }} />;\r\n\r\n    return (\r\n        <>\r\n      <div className=\"chatting\">\r\n        <List\r\n          className=\"comment-list NanumGothic3\"\r\n          itemLayout=\"horizontal\"\r\n          dataSource={messages}\r\n          renderItem={message => <Message key={message.id.toString()} message={message} />}\r\n        >\r\n        {/* <List>\r\n            {messages.map((message => <Message key={message.id.toString()} message={message} />))} */}\r\n        </List>\r\n          {loading && hasMore && <div className=\"loading-container\"><Spin /></div>}\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nreturn (\r\n    <React.Fragment>\r\n      \r\n      <div style={{ height: windowHeight - windowPadding }}>\r\n        {renderList()}\r\n\r\n      </div >\r\n        <Grid container justify=\"center\">\r\n\r\n        <div style={style.InsertfieldWrapper}>\r\n            <div style={style.Insertfield}>\r\n                    <InsertField\r\n                    holeId={props.holeId}\r\n                    channelNum={props.channelNum} \r\n                    isHost={props.isHost} \r\n                    message={message} \r\n                    goSetMessage={setMessage} \r\n                    goMessageSend={onMessageSend} \r\n                    goListUp = {props.goListUp} \r\n                    goDark={props.goDark} \r\n                    goQueUp={props.goQueUp}\r\n                    goUserUp={props.goUserUp}/>\r\n            </div>\r\n        </div>\r\n        </Grid>\r\n      {/* <MessageInput message={message} onChange={e => setMessage(e.target.value)} onSendClick={onMessageSend} /> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nChat.propTypes = {\r\n  room: PropTypes.object.isRequired,\r\n  messages: PropTypes.object.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  windowHeight: PropTypes.number,\r\n  onBack: PropTypes.func,\r\n  onRoomMessagesRead: PropTypes.func.isRequired\r\n}\r\n\r\n//상태를 연결시키는 함수는 mapStateToTrops로 만들어서 connect에 전달해준다.\r\n//Store 안의 state 값을 props로 연결해준다.\r\nconst mapStateToProps = state => {\r\n  const { messages } = state;\r\n  const { username } = state.user;\r\n  return { username, messages };\r\n}\r\n\r\n// chat 컴포넌트를 어플리케이션의 데이터 레이어와 묶는 역할을 한다.\r\n// 함수가 여러개였다면 mapDispatchProps로 연결해줘야했을듯\r\nexport default connect(mapStateToProps, { onRoomMessagesRead })(Chat);","import ReconnectingWebSocket from 'reconnecting-websocket';\r\nimport { WS_ENDPOINT } from '../environment';\r\nimport { ON_MESSAGES_VALUE_CHANGE, ON_MESSAGES_READING, ON_MESSAGES_READ } from './types';\r\n\r\n//export const onMessagesValueChange = data => ( console.log('data',data));\r\nexport const onMessagesValueChange = data => ({ type: ON_MESSAGES_VALUE_CHANGE, payload: data });\r\n\r\nexport const onRoomMessagesRead = holeId => dispatch => {\r\n  dispatch({ type: ON_MESSAGES_READING });\r\n\r\n  const socket = new ReconnectingWebSocket(`${WS_ENDPOINT()}/hole/${holeId}/`);\r\n  // const socket = new WebSocket(`${WS_ENDPOINT()}/hole/${holeId}/`);\r\n  socket.debug = true;\r\n  // socket.timeoutInterval = 4400;\r\n\r\n  // const socket = new WebSocket(`${WS_ENDPOINT()}/hole/${holeId}`);\r\n  console.log(\"-----------socket--------------\",socket);\r\n\r\n  socket.onopen = event => console.log('WebSocket Connected');\r\n  socket.onerror = event => console.log('error event : ', event);\r\n  socket.onmessage = event => dispatch({ type: ON_MESSAGES_READ, payload: { messages: JSON.parse(event.data) } });\r\n\r\n  socket.onclose = event => console.log('WebSocket Disconnected');\r\n\r\n  return socket;\r\n}","export const WS_ENDPOINT = () => {\r\n  const location = window.location;\r\n\r\n  let protocol = 'ws://';\r\n\r\n  if (location.protocol === 'https:') {\r\n    protocol = 'wss://';\r\n  }\r\n\r\n  const endpoint = protocol + 'www.ask2live.me/ws';\r\n\r\n  return endpoint;\r\n}","import { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function MediaPlayer(props) {\r\n\r\n  const { audioTrack, client } = props;\r\n\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  useEffect(() => {\r\n\r\n    if (audioTrack && client.remoteUsers.length === 0) {\r\n      console.log(\"여기는 호스트\");\r\n\r\n      audioTrack.setEnabled(true);\r\n\r\n      return () => {\r\n        audioTrack.setEnabled(false);\r\n        // audioTrack.stop();\r\n      };\r\n    }\r\n\r\n    else if(audioTrack && client.remoteUsers.length != 0) {\r\n      console.log(\"여기는 게스트\");\r\n\r\n      audioTrack.play();\r\n\r\n      return () => {\r\n        audioTrack.stop();\r\n      };\r\n    }\r\n  }, [audioTrack]);\r\n  return (\r\n    <div className=\"video-player\">\r\n      {/* {JSON.stringify(videoTrack.play)} */}\r\n    </div>\r\n  );\r\n}\r\n","import { useLocation, withRouter } from \"react-router-dom\";\r\nimport React, { useCallback } from \"react\";\r\nimport MediaPlayer from \"./MediaPlayer\";\r\n\r\n// import \"../../Call.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst PlayerWrapper = ({\r\n  client,\r\n  rtmClient,\r\n  host,\r\n  joinState,\r\n  localAudioTrack,\r\n  remoteUsers,\r\n  channelNum,\r\n}) => {\r\n  // const [members, setMembers] = useState([])\r\n\r\n  const sendP2PMessage = useCallback((recipientUID, peerMsg) => {\r\n    console.log(\"sendP2PMessage\");\r\n\r\n    // An RtmMessage object.\r\n    const remoteUID = String(recipientUID);\r\n\r\n    // p2p message\r\n    console.log(\"����Ʈ UID: \", remoteUID);\r\n    console.log(\"����Ʈ msg: \", peerMsg);\r\n\r\n    if (peerMsg) {\r\n      rtmClient\r\n        .sendMessageToPeer({ text: peerMsg }, remoteUID)\r\n        .then((sendResult) => {\r\n          if (sendResult.hasPeerReceived) {\r\n            console.log(\"peer recieved \" + peerMsg + \" successfully\");\r\n\r\n          } else {\r\n            console.log(\"peer did not recieved \" + peerMsg + \" unlog\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"RTM message recieved err\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  // setLiveIndex(sessionDummy.findIndex(e => e.channelNum === parseInt(channelNum)))\r\n  // const liveIndex = sessionDummy.findIndex(e => e.channelNum === parseInt(channelNum));\r\n  // const Live = sessionDummy.filter(session => String(session.channelNum) === channelNum);\r\n  // liveIndex != -1 ? console.log(\"���̺�����: \", sessionDummy[liveIndex].liveUsers) : console.log(\"sorry\");\r\n\r\n  // const location = useLocation()\r\n\r\n  // const isChannel = (element) => {\r\n  //     if(element.channelNum === channelNum){\r\n  //         return true;\r\n  //     }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"player-container\">\r\n        {/* <div> {client.uid} </div> */}\r\n        <div className=\"local-player-wrapper\">\r\n          {/* <p className=\"local-player-text\">\r\n            {localAudioTrack && `localTrack`}\r\n            {joinState && localAudioTrack ? `(${client.uid})` : \"\"}\r\n            {console.log(\"Ŭ���̾�Ʈ:\", client)}\r\n          </p> */}\r\n\r\n          <MediaPlayer\r\n            audioTrack={localAudioTrack}\r\n            client={client}\r\n          />\r\n        </div>\r\n        <div className=\"remotePlayers\">\r\n          {remoteUsers.map((user) => (\r\n            <div className=\"remote-player-wrapper\" key={user.uid}>\r\n              {/* <p>Remote Player + {user.uid} </p>\r\n              <p className=\"remote-player-text\">{`remoteVideo(${user.uid})`}</p>\r\n\r\n              <button onClick={() => sendP2PMessage(user.uid, \"host\")}>\r\n                {\" \"}\r\n                host �����{\" \"}\r\n              </button>\r\n              <button onClick={() => sendP2PMessage(user.uid, \"audience\")}>\r\n                {\" \"}\r\n                audience �����{\" \"}\r\n              </button> */}\r\n\r\n              <MediaPlayer audioTrack={user.audioTrack} client={client} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* <div>\r\n                {members.map((i) => (\r\n                    <div key={i}>\r\n                        {i}\r\n                    </div>\r\n                ))\r\n                }\r\n            </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayerWrapper)","import React, {useState, useEffect, useRef, useCallback} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\"\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\n\r\nimport ParticipantList from \"./ParticipantList\";\r\nimport CurrentQuestion from \"./CurrentQuestion\";\r\n\r\n\r\nimport QuestionSwiper from \"./QuestionSwiper\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport Questioning from \"./Questioning\";\r\nimport InsertField from \"./InsertField\";\r\nimport Chat from \"./chatting/Chat\";\r\nimport Question from \"./Question\";\r\nimport Avatar from \"../Avatar\";\r\nimport \"../../index.css\"\r\nimport PlayerWrapper from \"./agora/PlayerWrapper\";\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseListButton from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nimport \"../../styles/style.css\"\r\n\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { CenterFocusStrong, FilterNone, NoEncryption } from '@material-ui/icons';\r\n\r\n//^ =============================================================\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\nimport useAgora from \"./agora/useAgora\";\r\n//^ =============================================================\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        marginRight: theme.spacing(3),\r\n        width: 30,\r\n        height: 30,\r\n      top: 13,\r\n      borderRadius: \"20px\",\r\n      border: `3px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n  }))(Badge);\r\n\r\nconst style = {\r\n    livewrapper: {\r\n        display: \"inline-block\",\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n        height: \"100%\",\r\n        // backgroundColor: \"rgb(255, 239, 196)\"\r\n    },\r\n\r\n    livesession: {\r\n        position:\"absolute\",\r\n        maxWidth: \"45em\",\r\n        minHeight: \"35em\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        backgroundColor: \"#2F3041\",\r\n    },\r\n\r\n    session_top: {\r\n        position: \"relative\",\r\n        minHeight: \"3em\",\r\n        height: \"5%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    \r\n    session_mid: {\r\n        position: \"relative\",\r\n        height: \"55%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    session_bottom: {\r\n        position: \"relative\",\r\n        borderRadius: \"30px 30px 0px 0px\",\r\n        bottom: \"0%\",\r\n        height: \" 40%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#20202C\",\r\n        zIndex:\"0\",\r\n        // backgroundColor: \"rgb(255, 248, 225)\"\r\n    },\r\n    table: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n\r\n    td1: {\r\n        width: \"60%\",\r\n        fontSize: \"1em\",\r\n        padding: \"10px 0 0 10px\",\r\n        color: \"rgba(255,255,255,0.8)\"\r\n    },\r\n\r\n    td2: {\r\n        width: \"5%\",\r\n        padding: \"0 0 0 10px\",\r\n    },\r\n    lavel : {\r\n        marginLeft: \"-12px\",\r\n        marginRight: \"-0.7em\",\r\n    },\r\n    font_size : {\r\n        fontSize : \"1rem\"\r\n    },\r\n    checkIcon : {\r\n        height: \"0.6em\"\r\n    },\r\n\r\n    tablecell: {\r\n        display: \"table-cell\",\r\n        verticalAlign: \"middle\",\r\n        height: \"100%\",\r\n    },\r\n    follow: {\r\n        marginRight: \"3px\",\r\n        float: \"right\",\r\n    },\r\n\r\n    question: {\r\n        width : \"90%\",\r\n    },\r\n\r\n    listbutton : {\r\n        position: \"absolute\",\r\n        top: \"-0.5em\",\r\n    },\r\n\r\n    alert : {\r\n        boxShadow: \"2px 2px 2px 2px #D95032\",    // 섀도우 색\r\n        border: \"solid 1px white\",    // 테두리 색\r\n        backgroundColor:\"black\"      // 배경색\r\n    },\r\n\r\n    closeBtn : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"1em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        background:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n    },\r\n    linkBtnWrap : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"3.5em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        backgroundColor:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    linkBtn : {\r\n        marginLeft: \"1px\",\r\n        width: \"1.8em\",\r\n        height: \"1.8em\",\r\n        backgroundImage: \"url('/static/linkBtn.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\"\r\n    }\r\n   \r\n}\r\n\r\n\r\n//^ =============================================================\r\nconst appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\nconst client = AgoraRTC.createClient({ codec: \"vp8\", mode: \"rtc\" });\r\nconst rtmClient = AgoraRTM.createInstance(appid);\r\n\r\n\r\n//^ =============================================================\r\n\r\nconst LiveSession = (props) => {\r\n    const history = useHistory();\r\n    console.log(\"!!!!!!!!!!!!!!!!!\", props);\r\n    // console.log(\"history state: \", history.state)\r\n    // history.pushState(null, null, '');\r\n    // console.log(\"history state: \", history.state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const hostPostApi = async(hostUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              channel_num : props.channelNum,\r\n              host_uid : hostUid,\r\n          };\r\n          console.log(\"LiveSession Host Post :\", data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n    \r\n    const audiencePutApi = async(audienceUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              uid : audienceUid,\r\n          };\r\n          console.log(\"LiveSession Audience Post :\", data);\r\n          const res = await axios.put(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/join/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n    const leavePatchApi = async() =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {};\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/leave/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n\r\n    const [listup, setListUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [queUp, setQueUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [userUp, setUserUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [dark, setDark] = useState({display:\"none\"})\r\n\r\n    const [room, setRoom] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [questionAlert, setOuestionAlert] = useState(false);\r\n    const [copiedAlert, setCopiedAlert] = useState(false);\r\n\r\n    const [hostExit, setHostExit] = useState(false);\r\n\r\n    const openQuestionAlert = () => {\r\n        setOuestionAlert(true);\r\n      };\r\n    \r\n    const closeQuestionAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setOuestionAlert(false);\r\n    };\r\n\r\n    const openCopiedAlert = () => {\r\n        setCopiedAlert(true);\r\n      };\r\n    \r\n    const closeCopiedAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setCopiedAlert(false);\r\n    };\r\n    // const history = useHistory()\r\n    \r\n    let partiNum = \"로딩중\";\r\n    const holeInfo = useSelector(state => state.enteredSession, [partiNum])\r\n    const hostImage = holeInfo.arrived ? \r\n            holeInfo.data.detail.livehole.host_profile_image_url\r\n            : \"/static/live_png\";\r\n    partiNum = holeInfo.arrived ? \r\n         holeInfo.data.detail.participant.length + \"명\"\r\n        : \"로딩중\"\r\n\r\n    // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n    const handleClick = () => {\r\n        console.log(\"호스트 나감2\", hostExit)\r\n        setOpen(true);\r\n    };\r\n    \r\n    \r\n    // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n    const handleClose = (event, reason) => { \r\n        setHostExit(true);\r\n\r\n        setTimeout(window.location.replace('/main'), 500);\r\n        // history.replace('/main')\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    //^ =============================================================\r\n    let rtmChannel;\r\n    const [channel, setChannel] = useState();\r\n\r\n    const {\r\n        localAudioTrack,\r\n        leave,\r\n        join,\r\n        joinState,\r\n        remoteUsers,\r\n        authority,\r\n    } = useAgora(client);\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n        const liveInter = setInterval(()=>{\r\n            dispatch(getEnteredSession(props.channelNum))\r\n            dispatch(getQuestionList(props.holeId))\r\n        }, 5000);\r\n        rtmChannel = rtmClient.createChannel(props.channelNum);\r\n        join(props.channelNum, null, rtmClient, rtmChannel, props.isHost);\r\n        rtmChannel.on('ChannelMessage', (message, memberId) => {\r\n            console.log(`Message ${message}, from ${memberId}`);\r\n            \r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            clearInterval(liveInter);\r\n            handleClick();\r\n        });\r\n        if (props.isHost)\r\n            setTimeout(()=>{hostPostApi(client.uid)}, 4000);\r\n        else\r\n            setTimeout(()=>{audiencePutApi(client.uid)}, 4000);\r\n        \r\n        \r\n        if (props.isHost)\r\n        {\r\n            const unblock = history.block('정말 떠나시겠습니까?');\r\n            return () => {\r\n                console.log(\"호스트!!!: \", props.isHost)\r\n\r\n                rtmChannel.sendMessage({ text: \"hostOut\" }).then(() => {\r\n                    // Your code for handling the event when the channel message is successfully sent.\r\n                        console.log('host is leaving')\r\n                    }).catch(error => {\r\n                    // Your code for handling the event when the channel message fails to be sent.\r\n                        console.log('host leaving error')\r\n                    });\r\n\r\n                rtmClient.logout();\r\n                leave();\r\n                leavePatchApi();\r\n                clearInterval(liveInter)\r\n                unblock();\r\n                \r\n                // history.replace('/main');\r\n                setTimeout(window.location.replace('/main'), 500);\r\n                \r\n            }\r\n\r\n        }\r\n        \r\n        else {\r\n            const unblock = history.block('정말 떠나시겠습니까?');\r\n            return () => {\r\n                console.log(\"게스트가 스스로 나가는경우!!!!!!!!!!\", hostExit)\r\n\r\n                rtmChannel.leave();\r\n                rtmClient.logout();\r\n                leave();\r\n                leavePatchApi();\r\n                clearInterval(liveInter)\r\n                unblock();\r\n                \r\n                // history.replace('/main');\r\n                setTimeout(window.location.replace('/main'), 500);\r\n            }\r\n        }\r\n    }, [history])\r\n\r\n    // ^ =============================================================\r\n\r\n    return (\r\n        <>\r\n        <div style={style.livewrapper}>\r\n            <div style={style.livesession}>\r\n                <div style={style.session_top}>\r\n                    <table style={style.table}>\r\n                        <tr>\r\n                            <td  colspan=\"2\" className=\"NanumGothic4\" style={style.td1} >{props.holeTitle}</td>\r\n                            <td  rowspan=\"2\">\r\n                                <div style={style.follow}>\r\n                                <div\r\n                                    style={style.closeBtn}\r\n                                    onClick={()=>{history.push('/main')}}\r\n                                    >\r\n                                        <span \r\n                                        className=\"NanumGothic2\"\r\n                                        style={{fontSize: \"0.6em\"}}>종료</span>\r\n                                </div>\r\n                                <div\r\n                                style={style.linkBtnWrap}\r\n                                >\r\n                                    <CopyToClipboard\r\n                                        onCopy={openCopiedAlert}\r\n                                        text={window.location.href}\r\n                                    >\r\n                                    <div style={style.linkBtn}/>\r\n                                    </CopyToClipboard>\r\n                                </div>\r\n                                \r\n                                </div>\r\n                                \r\n                            </td>      \r\n                        </tr>\r\n                        <tr>\r\n                            <td style={style.td2}>\r\n                                <img className=\"live_img\" src=\"/static/live.png\"/>\r\n                            </td>\r\n                            <td style={{color:\"rgba(255, 255, 255, 0.6)\"}}className=\"NotoSans3\">{partiNum}</td>\r\n                        </tr>\r\n\r\n                    </table>  \r\n                </div>\r\n                <div style={style.session_mid}>\r\n                    <div style={{position:\"relative\", height:\"40%\"}}>\r\n                        <div className=\"horizentalmid\" >\r\n                            <div className=\"verticalmid\">\r\n                                <tr>\r\n                                <StyledBadge badgeContent={<MicIcon/>} color=\"error\">\r\n                                    <Avatar hostName={props.hostName} imageLink={props.hostImage}/>\r\n                                </StyledBadge>\r\n                                </tr>\r\n                                <tr className=\"centered\">\r\n                                    <span style={{color: \"rgba(255,255,255,0.8)\"}}className=\"BMDOHYEON\">{props.hostName}</span>\r\n                                </tr>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{position:\"relative\", height:\"50%\", display:\"flex\", alignItems: \"center\"}}>\r\n                        {/* <Grid container justify=\"center\"> */}\r\n                            <div>\r\n                                 <CurrentQuestion \r\n                                 holeId={props.holeId} \r\n                                 isHost={props.isHost}\r\n                                 client={client}\r\n                                 rtmClient={rtmClient}\r\n                                 host={authority}\r\n                                 localAudioTrack={localAudioTrack}\r\n                                 remoteUsers={remoteUsers}\r\n                                 channelNum={props.channelNum}\r\n                                 />\r\n                            </div>\r\n                        {/* </Grid>  */}\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.session_bottom}>\r\n                    <div className=\"chattingWrapper\"/>\r\n                    <Chat holeId={props.holeId} isHost={props.isHost} channelNum={props.channelNum} goQueUp={setQueUp} goListUp = {setListUp} goUserUp = {setUserUp} goDark={setDark} room={room} windowHeight=\"1000px\" onBack={()=>setRoom(null)}/>                   \r\n                </div>\r\n            \r\n           \r\n        </div>\r\n        {props.isHost?\r\n        <div style={userUp} className=\"hiddenlist\">\r\n            <ParticipantList holeId={props.holeId} channelNum={props.channelNum} goUserUp = {setUserUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setUserUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n        :   \r\n        <div style={queUp} className=\"hiddenQue\">\r\n            <p style={{color: \"rgba(0,0,0,0.7)\", fontSize: \"1em\", position:\"absolute\", left:\"5%\", bottom:\"6em\", zIndex:\"1\"}}\r\n            className=\"BMDOHYEON\"\r\n            > 질문을 등록하고 호스트와 대화하세요!</p>\r\n            <Questioning openQuestionAlert={openQuestionAlert} holeId={props.holeId} goQueUp = {setQueUp} goDark={setDark}/>\r\n        </div>\r\n        }\r\n        <div style={listup} className=\"hiddenlist\">\r\n            <QuestionList holeId={props.channelNum} goListUp = {setListUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setListUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n\r\n        <div style={dark} className=\"layerfordark\"></div>\r\n\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n            <span style={{color:\"white\"}}>호스트 {props.hostName}가<br/>세션을 종료하였습니다</span>\r\n        </Alert>\r\n        </Snackbar>\r\n\r\n        <div className=\"host-player\">\r\n            <PlayerWrapper\r\n                client={client}\r\n                rtmClient={rtmClient}\r\n                host={authority}\r\n                localAudioTrack={localAudioTrack}\r\n                remoteUsers={remoteUsers}\r\n                channelNum={props.channelNum}\r\n            />\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={questionAlert} autoHideDuration={6000} onClose={closeQuestionAlert}>\r\n            <Alert onClose={closeQuestionAlert} style={{ boxShadow: \"2px 2px 2px 2px #D95032\", border: \"solid 1px white\", backgroundColor:\"black\"}} severity=\"success\">\r\n                <span style={{ color:\"white\"}}>질문 등록 성공!</span>\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={copiedAlert} autoHideDuration={1500} onClose={closeCopiedAlert}>\r\n            <Alert onClose={closeCopiedAlert} style={{ boxShadow: \"2px 2px 2px 2px #D95032\", border: \"solid 1px white\", backgroundColor:\"black\"}} severity=\"success\">\r\n                <span style={{ color:\"white\"}}>링크 복사 완료</span>\r\n            </Alert>\r\n        </Snackbar>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default LiveSession","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport AgoraRTC, {\r\n  MicrophoneAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig,\r\n} from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\n\r\nimport { AirlineSeatReclineExtraOutlined } from \"@material-ui/icons\";\r\n\r\nexport default function useAgora(client) {\r\n  console.log(\"useAgora\");\r\n  const appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\n\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(\"\");\r\n  const [joinState, setJoinState] = useState(false);\r\n  const [remoteUsers, setRemoteUsers] = useState([]);\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  async function createLocalTracks() {\r\n    const microphoneTrack = await AgoraRTC.createMicrophoneAudioTrack(\r\n      MicrophoneAudioTrackInitConfig\r\n    );\r\n    setLocalAudioTrack(microphoneTrack);\r\n    return microphoneTrack;\r\n  }\r\n  \r\n  async function join(channel, token, rtmClient, rtmChannel, isHost) {\r\n    console.log(\"join\");\r\n\r\n    if (!client) return;\r\n    \r\n    const microphoneTrack = await createLocalTracks();\r\n    await client.join(appid, channel, token);    \r\n    \r\n    // rtm 클라이언트 로그인\r\n    await rtmClient\r\n    .login({ token: null, uid: String(client.uid) })\r\n        .then(() => {\r\n          console.log(\"AgoraRTM client login success !!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"AgoraRTM client login failure !!\", err);\r\n        });\r\n        \r\n    // rtm 클라이언트 메시지 받기 모드\r\n    await rtmClient.on(\"ConnectionStateChanged\", (newState, reason) => {\r\n      console.log(\r\n        \"on connection state changed to \" + newState + \" reason: \" + reason\r\n        );\r\n      });\r\n    \r\n    //rtm 메시지채널 join\r\n    await rtmChannel.join();\r\n\r\n      // event listener for receiving a peer-to-peer message.\r\n    await rtmClient.on(\"MessageFromPeer\", (msg, peerId) => {\r\n        // text: text of the received message; peerId: User ID of the sender.\r\n        console.log(\r\n          \"AgoraRTM Peer Msg: from user \" + peerId + \" recieved: \\n\" + msg.text\r\n        );\r\n\r\n        // check if mute or leave command\r\n        if (msg.text === \"host\") {\r\n          console.log(\"make host\");\r\n\r\n          client.publish(microphoneTrack);\r\n          localAudioTrack.stop();\r\n          localAudioTrack.setEnabled(true);\r\n\r\n        } else if (msg.text === \"audience\") {\r\n          console.log(\"make audience\");\r\n          \r\n          client.unpublish();\r\n          localAudioTrack.play();\r\n\r\n        } else if (msg.text === \"hostOut\") {\r\n          console.log(\"[Host Out] the session is closed\");\r\n          leave();\r\n\r\n        } else {\r\n          console.log(\"[Warning] unknown message:\", msg);\r\n        }\r\n        \r\n        \r\n      });\r\n\r\n    if (isHost) {\r\n      console.log(\"client Role in JOIN \");\r\n      await dispatch({type: \"superHost\", payload: \"host\"});\r\n      await client.publish(microphoneTrack);\r\n\r\n    } else {\r\n      console.log(\"audience Role in JOIN\");\r\n      await dispatch({type: \"audience\"});\r\n    }\r\n\r\n    console.log(\"end useAgora\");\r\n    setJoinState(true);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n    // if (localVideoTrack) {\r\n    //   localVideoTrack.stop();\r\n    //   localVideoTrack.close();\r\n    // }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    //! leave하면 이상해지더라..\r\n    // await rtmChannel.leave();\r\n    await client.leave();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n    \r\n    const handleUserPublished = async (user, mediaType) => {\r\n      await client.subscribe(user, mediaType);\r\n\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserUnpublished = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserJoined = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserLeft = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    client.on(\"user-published\", handleUserPublished);\r\n    client.on(\"user-unpublished\", handleUserUnpublished);\r\n    client.on(\"user-joined\", handleUserJoined);\r\n    client.on(\"user-left\", handleUserLeft);\r\n\r\n    return () => {\r\n      client.off(\"user-published\", handleUserPublished);\r\n      client.off(\"user-unpublished\", handleUserUnpublished);\r\n      client.off(\"user-joined\", handleUserJoined);\r\n      client.off(\"user-left\", handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    joinState,\r\n    leave,\r\n    join,\r\n    remoteUsers,\r\n    authority,\r\n  };\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useHistory, withRouter} from \"react-router-dom\"\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width : \"94%\",\r\n    maxWidth: \"23em\",\r\n    height: \"11em\"\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    paddingTop: 0,\r\n},\r\ncover: {\r\n    width: \"20px\",\r\n    borderLeft: \"solid rgba(0, 0, 0, 0.3) 1px\"\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  top : {\r\n      position : \"fixed\",\r\n      top: \"30%\"\r\n  }\r\n}));\r\n\r\nconst style = {\r\n  loginCard : {\r\n      top : \"20%\",\r\n      // backgroundColor: \"skyblue\",\r\n      border: \"1px solid black\",\r\n      borderRadius: \"15px\",\r\n      boxShadow: \"1px 1px 2px 2px black\",\r\n      paddingTop: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      maxWidth : \"23em\",\r\n      width : \"16em\",\r\n      height : \"10.5em\",\r\n      position : \"fixed\",\r\n  },\r\n  loginBtnWrapper : {\r\n      position: \"absolute\",\r\n      top : \"88%\",\r\n      backgroundColor: \"black\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  mikeBtn : {\r\n    height: '2.5em',\r\n    width: '4em',\r\n    backgroundColor: \"black\",\r\n    boxShadow: \"1px 1px 1px 1px black\",\r\n    borderColor: \"white\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n  },\r\n  loginBtn : {\r\n      height: '2.5em',\r\n      width: '4em',\r\n      backgroundColor: \"#EF5941\",\r\n      boxShadow: \"1px 1px 1px 1px black\",\r\n      borderColor: \"#EF5941\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  liveBtn : {\r\n    height: '2.5em',\r\n    width: '7em',\r\n    backgroundColor: \"#EF5941\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    borderColor: \"#EF5941\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n},\r\n}\r\n\r\nconst JoinCard = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [mike, setMike] = useState(0);\r\n\r\n  const getMike = () => {\r\n      navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(function(stream) {\r\n        console.log('You let me use your mic!')\r\n        setMike(1);\r\n      })\r\n      .catch(function(err) {\r\n        history.push('/');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    \r\n<Grid className={classes.top} container justify=\"center\">\r\n    <Card style={style.loginCard}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            {props.hostName}\r\n          </Typography>\r\n          {props.isHost ?  \r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A를 시작합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>    \r\n            :\r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A에 입장합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>\r\n            }\r\n        <div>\r\n          {console.log(props.isHost)}\r\n            {props.isHost ?\r\n                mike?\r\n                    <button \r\n                    onClick={()=>{\r\n                        history.push({\r\n                            pathname : \"/session/live\",\r\n                            search: \"?holeId=\" + props.holeId + \"&channelNum=\" + props.channelNum,\r\n                            state : {\r\n                                joinPass : true,\r\n                                isHost : true,\r\n                                hostName : props.hostName,\r\n                                hostImage: props.hostImage,\r\n                            }\r\n                        })\r\n                    }}\r\n                    // style={{margin:\"0 0 1em 2em\"}}\r\n                    style={style.liveBtn}\r\n                    >라이브열기</button>\r\n                :\r\n                <></>\r\n            :   \r\n                mike?\r\n                <button \r\n                style={style.loginBtn}\r\n                onClick={()=>props.setJoin(1)} aria-label=\"play/pause\">\r\n                    입장\r\n                </button>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n\r\n</Grid>\r\n</>\r\n  );\r\n}\r\n\r\nexport default withRouter(JoinCard)","import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport LiveSession from \"../components/liveSession/LiveSession\"\r\nimport JoinCard from \"../components/JoinCard\"\r\nimport getEnteredSession from \"../actions/EnteredSessionActions\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../index.css\"\r\nimport { sessionDummy } from \"../dummydatas/sessionDummy\"\r\n\r\n\r\nconst LiveSessionContainer = (props) => {\r\n\r\n    console.log(\"LiveSessionContainer Props\", props.joinPass);\r\n\r\n    const [join, setJoin] = useState(props.joinPass); // ?���? ?��?��코딩\r\n\r\n    console.log(join);\r\n\r\n    // if (1) //props.isHost\r\n    //     return <LiveSession hostName={hostName} imageLink={imageLink} channelNum={channelNum} isHost={1}/>\r\n    if (!join){\r\n        console.log(\"!join\", join)\r\n        return <JoinCard holeId={props.holeId} channelNum={props.channelNum} hostName={props.hostName} hostImage={props.hostImage} setJoin={setJoin} isHost={props.isHost}/>\r\n    }else\r\n    {\r\n        console.log(\"join\",join)\r\n        return <LiveSession holeTitle={props.holeTitle} holeId={props.holeId} hostName={props.hostName} imageLink={props.hostImage} channelNum={props.channelNum} isHost={props.isHost}/>\r\n    }\r\n}\r\n\r\nexport default LiveSessionContainer","import React from \"react\";\r\nimport {useSelector} from \"react-redux\"\r\nimport JoinCard from \"./JoinCard\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\n\r\nconst ReserveToLive = (props) => {\r\n    console.log(\"Enter : ReserveToLive\")\r\n\r\n    const holeId = props.holeId\r\n    const sessions = useSelector(state => state.session.data)\r\n    let channelNumAry = []\r\n\r\n    sessions.map((session) => {\r\n        channelNumAry = [...channelNumAry, session.livehole_id];\r\n    })\r\n\r\n    let channelNum;\r\n\r\n    while (true)\r\n    {\r\n        channelNum = Math.floor(Math.random() * 10001)\r\n        if (channelNumAry.indexOf(channelNum) == -1)\r\n            break\r\n    }\r\n\r\n    console.log(\"MakeChannelNum\", channelNum);\r\n    console.log(\"ReserveToLive Props\", props);\r\n\r\n    return <LiveSessionContainer hostName={props.hostName} hostImage={props.hostImage} holeId={holeId} channelNum={channelNum} isHost={true}/>\r\n}\r\n\r\nexport default ReserveToLive","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\nimport ReserveToLive from \"../components/ReserveToLive\"\r\nimport axios from \"axios\"\r\n\r\nconst LIVE = \"live\"\r\nconst RESERVE = \"reserve\" \r\n\r\nconst SessionMatchContainer = (props) => {\r\n    const history = useHistory()\r\n    const [match, setMatch] = useState()\r\n\r\n    console.log(props);\r\n    const sessionKind = props.routerInfo.match.params.state;\r\n    let urlSearchParams = new URLSearchParams(props.routerInfo.location.search.slice(1));\r\n    console.log(props);\r\n    console.log(sessionKind);\r\n\r\n    const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n    const tmp =  useSelector(state => state.user.data)\r\n    const currUser = tmp.detail? tmp.detail.username : \"\";\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n            (res) => {\r\n                if (res.data.response === \"SUCCESS\")\r\n                    setMatch(res.data.detail);\r\n            }\r\n        )\r\n    },[holeId])\r\n    \r\n    switch (sessionKind) {\r\n        case LIVE:\r\n            const channelNum = urlSearchParams.get(\"channelNum\");\r\n            if (match) \r\n            {\r\n                const isHost = (currUser === match.host_username);\r\n                return <LiveSessionContainer holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.routerInfo.location.state?.joinPass} isHost={isHost}/>\r\n            }\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n\r\n        case RESERVE:\r\n            if (match)\r\n                return <ReserveToLive holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId}/>\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n            \r\n        default:\r\n            return (\r\n                <p>SessionMatchContainer ERROR</p>     \r\n            )\r\n        }\r\n    // switch (sessionKind) {\r\n    //     case LIVE:\r\n    //         const holeId = urlSearchParams.get(\"holeId\");\r\n    //         const channelNum = urlSearchParams.get(\"channelNum\");\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     const isHost = (currUser === res.data.detail.host_username);\r\n    //                     return <LiveSessionContainer hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.location.state?.joinPass} isHost={isHost}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     case RESERVE: // ���� ȣ��Ʈ�� ���İ���\r\n    //         const holeId_reserve = urlSearchParams.get(\"holeId\");\r\n    //         console.log(holeId_reserve)\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     return <ReserveToLive hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId_reserve}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     default:\r\n    //         return (\r\n    //             <p>SessionMatchContainer ERROR</p>     \r\n    //         )\r\n    //     }\r\n}\r\n\r\nexport default SessionMatchContainer","import { \r\n    ALL_USERS_GET_PENDING,\r\n    ALL_USERS_GET_SUCCESS,\r\n    ALL_USERS_GET_FAILURE \r\n} from \"./types\";\r\nimport axios from 'axios'\r\n\r\nfunction AllUsersGetApi(){\r\n    return axios.get('https://www.ask2live.me/api/user/all_read')\r\n}\r\n\r\nexport const getAllUsersInfo = () => dispatch => {\r\n    console.log('-----getAllUserInfo start-----')\r\n    dispatch({type: ALL_USERS_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return AllUsersGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: ALL_USERS_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ALL_USERS_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {getUserInfo} from '../actions/UserActions';\r\n\r\nexport default (SpecialComponent, option, adminRoute=null) => {\r\n\r\n  /* \r\n     ��)  option: null -> ������ ������ ������ ������ (home)\r\n                 true -> �α����� ������ ������ ������ ������\r\n                 false -> �α����� ������ ������ �Ұ����� ������\r\n                 \r\n        false�� �������� �α����� ������ ������ �� �ְ� ¥�� �ȵ�����, Ȥ�ó� �������� ���� �Ʒ� �ڵ� ��� �α��������� ���Եȴ�.\r\n        ���� ���� �������� �������ҵ�??\r\n  */\r\n  const AuthenticateCheck = (props) => {\r\n    // useDispatch(getUserInfo())\r\n    // const user = useSelector(state => state.user)\r\n    const isLoggedIn = localStorage.getItem(\"token\");\r\n    // const arrived = user.arrived\r\n    // console.log(isLoggedIn, arrived, option)\r\n\r\n\r\n    useEffect(() => {\r\n      if (!isLoggedIn && option) {\r\n        props.history.push({\r\n            pathname : \"/login\",\r\n            before : props.location.pathname + props.location.search  \r\n        });\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <SpecialComponent routerInfo={props}/>\r\n    )\r\n\r\n  };\r\n  return AuthenticateCheck;\r\n};","import { NativeSelect } from '@material-ui/core';\r\nimport React, {useEffect, useState, } from 'react';\r\nimport CounterContainer from './containers/CounterContainer';\r\nimport NavContainer from './containers/NavContainer'\r\nimport SessionCardContainer from './containers/SessionCardContainer';\r\nimport MypageContainer from './containers/MypageContainer';\r\nimport SessionCreateContainer from './containers/SessionCreateContainer';\r\nimport ProfileDetail from './components/mypage/ProfileDetail';\r\nimport MypageEdit from './components/mypage/MypageEdit';\r\nimport PreQuestions from './components/sessionCard/PreQuestions';\r\n// import MainPage from \"./components/MainPage\" \r\n// import 'fontsource-roboto'\r\n\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport SessionMatchContainer from './containers/SessionMatchContainer';\r\n\r\nimport {LoginPage} from './components/onBoard'\r\n\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport Chat from \"./components/liveSession/chatting/Chat\"\r\n\r\nimport { getAllUsersInfo } from './actions/AllUsersActions'\r\nimport { getSessionInfo, getUserSessionInfo } from './actions/SessionActions'\r\nimport { getUserInfo } from './actions/UserActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token')\r\n    if(token){\r\n        dispatch(getUserInfo(token));\r\n        dispatch(getUserSessionInfo(token));\r\n    }\r\n\r\n    dispatch(getSessionInfo());\r\n\r\n    // dispatch(getAllUsersInfo());\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* <Route exact path=\"/hole/c9c9dd9bb\" component={Chat}/> */}\r\n        \r\n        <Route exact path=\"/main\" component={Auth(SessionCardContainer, true)}/>\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={LoginPage}/>\r\n            <Route exact path=\"/\" component={LoginPage}/>\r\n            <Route exact path=\"/session/:state\" component={Auth(SessionMatchContainer, true)}/>\r\n            {/* <Route exact path=\"/session/:state\" render={(matchProps) => <SessionMatchContainer {...matchProps}/>}/>  */}\r\n            <Route exact path=\"/createSession\" component={Auth(SessionCreateContainer, true)}/>\r\n            <Route exact path=\"/mypage/:username\" component={Auth(ProfileDetail, true)}/>\r\n            <Route exact path=\"/mypage/:username/edit\" component={Auth(MypageEdit, true)}/>\r\n            <Route path=\"/\" component={NavContainer}/>\r\n        </Switch>\r\n        <Route exact path=\"/preQuestions/:pk\" component={Auth(PreQuestions, true)}/>    \r\n        <Route exact path=\"/mypage\" component={Auth(MypageContainer, true)}/>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default App\r\n","\r\nimport {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    arrived : false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case USER_GET_SUCCESS:\r\n            const userInfo = action.payload.data; // 경로 수정 필요할수도\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                arrived: true,\r\n                data: userInfo\r\n            };\r\n        case USER_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        // case GIVEUSER:\r\n        //     // state = action.user; //state 이렇게 바꿔도 되나?\r\n        //     return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","\r\nimport {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport const session = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SESSION_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case SESSION_GET_SUCCESS:\r\n            const sessionInfo = action.payload.data; \r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: sessionInfo\r\n            };\r\n        case SESSION_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case SETLIVE:\r\n            return {\r\n                ...state[state.findIndex(e => e.holeId === action.holeId)],\r\n                isLive : action.livestate,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default session;","import {\r\n  MY_SESSION_GET_PENDING,\r\n  MY_SESSION_GET_SUCCESS,\r\n  MY_SESSION_GET_FAILURE,\r\n  MY_SETLIVE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  pending: false,\r\n  error: false,\r\n  data: [],\r\n};\r\n\r\nconst mySession = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MY_SESSION_GET_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n        error: false,\r\n      };\r\n    case MY_SESSION_GET_SUCCESS:\r\n      const sessionInfo = action.payload.data;\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: sessionInfo,\r\n      };\r\n    case MY_SESSION_GET_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: true,\r\n      };\r\n    // case MY_SETLIVE:\r\n    //   return {\r\n    //     ...state[state.findIndex((e) => e.holeId === action.holeId)],\r\n    //     isLive: action.livestate,\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mySession;\r\n","import {\r\n    ON_MESSAGES_VALUE_CHANGE,\r\n    ON_MESSAGES_READING,\r\n    ON_MESSAGES_READ\r\n  } from '../actions/types';\r\n  \r\n  const INITIAL_STATE = {\r\n    messages: [],\r\n    loading: false,\r\n    error: '',\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ON_MESSAGES_VALUE_CHANGE:\r\n        return { ...state, ...action.payload };\r\n      case ON_MESSAGES_READING:\r\n        return { ...state, loading: true, error: '' };\r\n      case ON_MESSAGES_READ:\r\n        return { ...state, ...action.payload, loading: false, error: '' };\r\n      default:\r\n        return state;\r\n    }\r\n  };","const initialState = \"\";\r\n\r\nconst authorize = (state = initialState, action) => {\r\n\r\n  switch(action.type){\r\n    case \"superHost\":\r\n      console.log(\"make super HOST\", action.payload);\r\n      state = action.payload;\r\n      return state;\r\n\r\n    case \"audience\":\r\n      state = initialState;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport default authorize;","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//���༭\r\nconst questionlist = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case QUESTIONLIST_GET_PENDING:\r\n            console.log(\"PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case QUESTIONLIST_GET_SUCCESS:\r\n            console.log(\"SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case QUESTIONLIST_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default questionlist;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//����??����\r\nconst enteredSession = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENTEREDSESSION_GET_PENDING:\r\n            console.log(\"EnteredSession PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ENTEREDSESSION_GET_SUCCESS:\r\n            console.log(\"EnteredSession SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case ENTEREDSESSION_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default enteredSession;","import { \r\n    ALL_USERS_GET_PENDING,\r\n    ALL_USERS_GET_SUCCESS,\r\n    ALL_USERS_GET_FAILURE \r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst allUsers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ALL_USERS_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ALL_USERS_GET_SUCCESS:\r\n            const allUserInfo = action.payload; // 경로 수정 필요할수도\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: allUserInfo\r\n            };\r\n        case ALL_USERS_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default allUsers;","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport user from './user';\r\nimport session from './session';\r\nimport mySession from './mySession';\r\nimport messages from './messages';\r\nimport authorize from './authorize';\r\nimport questionlist from './questionlist';\r\nimport enteredSession from './enteredSession'\r\nimport allUsers from './allUsers';\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n    user,\r\n    allUsers,\r\n    session,\r\n    mySession,\r\n    messages,\r\n    authorize,\r\n    questionlist,\r\n    enteredSession,\r\n});\r\n\r\nexport default rootReducer;","import reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport axios from 'axios';\r\n\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n// axios.defaults.headers.common['X-CSRFToken'] = getCookie(\"csrftoken\");\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>        \r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}