{"version":3,"sources":["reportWebVitals.js","reducers/counter.js","components/Nav.js","actions/types.js","actions/UserActions.js","components/onBoard/LoginPage.js","actions/QuestionListActions.js","actions/SessionActions.js","components/sessionCard/CurrentReserveSessionsCards.js","components/sessionCard/OtherLiveSessionsCards.js","components/sessionCard/MyLiveSessionsCards.js","components/sessionCard/HostConfirmedSessionsCards.js","components/SessionCreateButton.js","components/ProfileEditButton.js","containers/SessionCardContainer.js","components/mypage/ProfileGate.js","components/mypage/MypageNav.js","components/mypage/Mypage.js","actions/SessionToReserveActions.js","components/mypage/SessionConfirm.js","components/mypage/MypageLiveSession.js","components/mypage/MypageConfirmedSession.js","components/Emoji.js","containers/MypageContainer.js","containers/SessionCreateContainer.js","components/mypage/ProfileDetail.js","components/CheckString.js","components/mypage/MypageEdit.js","components/sessionCard/PreQuestionNav.js","components/sessionCard/PreQuestions.js","actions/EnteredSessionActions.js","components/liveSession/Participant.js","components/liveSession/ParticipantList.js","components/liveSession/StringQuestion.js","components/Avatar.js","components/liveSession/VoiceQuestion.js","components/liveSession/CurrentQuestion.js","components/liveSession/Question.js","components/liveSession/QuestionSwiper.js","components/liveSession/QuestionList.js","components/liveSession/Questioning.js","components/liveSession/InsertField.js","components/liveSession/chatting/Message.js","components/liveSession/chatting/EmptyScreen.js","components/liveSession/chatting/Chat.js","actions/MessagesActions.js","environment.js","components/liveSession/agora/MediaPlayer.js","components/liveSession/agora/PlayerWrapper.js","components/liveSession/LiveSession.js","components/liveSession/agora/useAgora.js","components/JoinCard.js","containers/LiveSessionContainer.js","components/ReserveToLive.js","containers/SessionMatchContainer.js","hoc/auth.js","App.js","reducers/user.js","reducers/session.js","reducers/mySession.js","reducers/messages.js","reducers/authorize.js","reducers/questionlist.js","reducers/enteredSession.js","reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INCREMENT","DECREMENT","counterReducer","state","action","type","Person","Home","makeStyles","theme","root","menuButton","marginRight","spacing","title","flexGrow","appBar","top","bottom","left","right","margin","backgroundColor","borderRadius","width","maxWidth","zIndex","ON_MESSAGES_VALUE_CHANGE","ON_MESSAGES_READING","ON_MESSAGES_READ","USER_GET_PENDING","USER_GET_SUCCESS","USER_GET_FAILURE","QUESTIONLIST_GET_PENDING","QUESTIONLIST_GET_SUCCESS","QUESTIONLIST_GET_ERROR","QUESTIONLIST_DELETE","SETLIVE","SESSION_GET_PENDING","SESSION_GET_SUCCESS","SESSION_GET_FAILURE","MY_SESSION_GET_PENDING","MY_SESSION_GET_SUCCESS","MY_SESSION_GET_FAILURE","ENTEREDSESSION_GET_PENDING","ENTEREDSESSION_GET_SUCCESS","ENTEREDSESSION_GET_ERROR","ENTEREDSESSION_DELETE","getUserInfo","token","dispatch","console","log","config","headers","Authorization","axios","get","userGetApi","response","payload","catch","error","Alert","props","elevation","variant","defaults","xsrfCookieName","xsrfHeaderName","marginTop","list","palette","background","paper","style","login","position","display","justifyContent","flexDirection","loginWrapper","height","loginCard","border","boxShadow","paddingTop","loginBtnWrapper","color","loginBtn","infoIcon","cursor","logo","backgroundImage","backgroundPosition","backgroundSize","LoginPage","history","useHistory","localStorage","push","useState","loginId","setLoginId","loginPassword","setLoginPassword","open","setOpen","openTwo","setOpenTwo","handleClose","event","reason","handleCloseTwo","useDispatch","Login","a","dataToSubmit","username","password","post","res","window","setItem","data","detail","location","before","err","Grid","container","justify","fontSize","className","marginBottom","TextField","errer","length","helperText","value","placeholder","size","id","onChange","target","substring","onClick","Snackbar","autoHideDuration","onClose","severity","getQuestionlist","holeId","getApi","getSessionInfo","getUserSessionInfo","userSessionGetApi","useStyles","flexWrap","minWidth","successContent","transform","content","date","work_field","marginLeft","wish","questions","questionIcon","avatarWrapper","avatar","check","chipGrid","wishButton","textAlign","hostProfile","opacity","frame","onClickWish","sessionId","patch","e","alert","onClickWishCancel","CurrentReserveSessionsCards","currentReserveSessions","classes","user","useSelector","map","session","Paper","progress","strokeWidth","strokeColor","trailColor","gapDegree","format","percent","Avatar","src","host_profile_image","hole_reservations","Math","ceil","guests","target_demand","commingSoon","alignItems","Chip","label","Typography","component","host_username","host_work_company","host_work_field","item","reserve_date","count_questions","Button","clickable","startIcon","Object","keys","indexOf","setTimeout","pathname","host","borderBottom","padding","bullet","paddingBottom","pos","avatarRoot","small","large","imageWrapper","float","paddingRight","contentTime","contentTitle","textOverflow","contentName","contentField","whiteSpace","overflow","buttonWrapper","profileimage","livelogo1","livelogo1_back","OtherLiveSessionsCards","otherLiveSessions","setTitle","subtitle","setSubtitle","now","Date","Card","CardContent","search","livehole_id","hostName","hostImage","alt","count_participant","description","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","cardContent","cookieWrapper","backgroundRepeat","useCookie","living","contentWrapper","contentWork","live2","MyLiveSessionsCard","React","MyLiveSessionsCards","myLiveSessions","HostConfirmedSessionsCards","hostConfirmedSessions","reserveDate","setReserveDate","toDate","posision","paddingLeft","textWrap","balloonWhite","balloonColor","mike","SessioinCreateButton","noMyLive","profileBalloon","ProfileEditButton","MyPageIcon","mainLogo","mainOragne","descript","descript2","cookie1","cookie2","button","buttonIcon","fontColor","buttonText","align","fontWeight","swiperLeft","swiperLeftHidden","swiperRight","swiperRightHidden","logOut","SessionCardContainer","userDetail","setFlag","sessions","mySession","clear","replace","status","cnt","swiperCnt","setSwiperCnt","IconButton","aria-label","borderColor","toString","where","swipping","prev","direction","Divider","profile","ProfileGate","CardActionArea","profile_image","CardHeader","fontFamily","borderbox","text","MypageNav","goBack","my","myBottomCard","Logout","MyPage","postSessionToReserve","font","font2","font3","SessionConfirm","goListUp","goDark","handleClick","animation","layerfordark","minHeight","LinearProgressWithLabel","Box","mr","LinearProgress","round","MypageLiveSession","listup","setListUp","dark","setDark","demand","setDemand","open2","setOpen2","handleDemandClose","handleDeleteClose","onDelete","delete","subheader","parseInt","current_demand","CardActions","MypageConfirmedSession","Emoji","role","aria-hidden","symbol","nested","itemText","MyPageContainer","wishSessions","useEffect","myDoneSessions","myWishSessions","myConfirmSessions","my_hole","reservation_status","wish_hole","openDone","setOpenDone","openWish","setOpenWish","openConfirm","setOpenConfirm","Mypage","ListItem","Collapse","in","timeout","unmountOnExit","List","disablePadding","NumAlert","form","submit","SessionCreateContainer","urlSearchParams","URLSearchParams","routerInfo","slice","nowDate","defaultDate","setDate","getMinutes","toISOString","titleValid","setTitleValid","setDescription","descriptionValid","setDescriptionValid","reserveDateValid","setReserveDateValid","earlyDateValid","setEarlyDateValid","count","setCount","skipValid","setSkipValid","split","disable","setDisable","onIncrease","onDecrease","handleClick2","handleClose2","Container","butterBottom","required","fullWidth","name","autoFocus","InputLabelProps","shrink","checked","disabled","justifyContents","xs","inputProps","min","cur_date","getTime","multiline","rows","root2","work_company","bio","editWrapper","editBtn","ProfileDetail","host_bio","editFlag","blank","special","buttonGroup","file","button2","MypageEdit","usernameValue","setUsername","profileImage","setProfileImage","workField","setWorkField","workCompany","setWorkCompany","setBio","image","setImage","useCallback","files","preview","imageUrl","URL","createObjectURL","preventDefault","formData","FormData","append","resGet","autoComplete","string","test","ReplaceSpaceNSpecial","card","cardText","labelBMJUA","fontStyle","questionText","submitbtn","insert","borderTop","borderLeft","borderRight","MyQuestionCards","myQuestions","questionlist","userId","questionsList","question","questionAuthor","light","MyQuestionSend","ask","setAsk","postApi","isVoice","askValue","is_answered","is_voice","maxLength","iconButton","QuestionCard","user_profile_image_url","user_username","TabPanel","children","index","other","hidden","aria-labelledby","p","a11yProps","PreQuestionNav","setValue","AppBar","Tabs","newValue","Tab","time","desc","SessionDetail","undefined","ListPreQuestions","PreQuestions","targetSession","href","getEnteredSession","channelNum","participant","tmp","follow","Participant","nickName","participantlist","ParticipantList","participants","enteredSession","arrived","profile_image_url","audience1","audience2","StringQuestion","questionStr","userQuestion","finish","setFinish","btnDisable","setBtnDisable","imageLink","userNickName","isHost","onAnswered","currentQuestionId","circle","UserAvatar","VoiceQuestion","click","setClick","clickStyle","setClickStyle","exitClick","setExitClick","setHidden","sendP2PMessage","recipientUID","peerMsg","remoteUID","String","rtmClient","sendMessageToPeer","sendResult","hasPeerReceived","userUid","wait","CurrentQuestion","questionPatchApi","questionId","forQuestionidx","questionList","findIndex","questionResponse","questionIdx","liveVoice","setLiveVoice","currentQuestion","user_uid","client","localAudioTrack","remoteUsers","myPaper","otherPaper","SimplePaper","isFirst","myQuestion","userName","nav","QuestionList","click1","setClick1","click2","setClick2","questionAry","myName","questionInfo","questionbutton","Questioning","voice","setVoice","queStyle","setQueStyle","myInfo","onKeyPress","key","openQuestionAlert","goQueUp","Width","input","flex","divider","questioningBtn","questionListBtn","participantBtn","CustomizedInputBase","InputBase","message","goSetMessage","goMessageSend","pressEnter","goUserUp","iconButton2","Message","memo","sender","sent_timestamp","wordBreak","EmptyScreen","containerStyle","Empty","PRESENTED_IMAGE_SIMPLE","InsertfieldWrapper","justifyContainer","Insertfield","connect","messages","onRoomMessagesRead","socket","ReconnectingWebSocket","protocol","WS_ENDPOINT","debug","onopen","onerror","onmessage","JSON","parse","onclose","currentUrl","roomId","scrollToBottom","element","document","querySelector","scrollTop","scrollHeight","loading","hasMore","setMessage","roomSocket","setRoomSocket","loadingChat","room","windowHeight","onBack","close","Fragment","CircularProgress","itemLayout","dataSource","renderItem","borderWidth","send","stringify","command","MediaPlayer","audioTrack","Authorize","setEnabled","volumeInter","setInterval","clearInterval","play","stop","withRouter","uid","StyledBadge","withStyles","badge","Badge","livewrapper","livesession","session_top","session_mid","session_bottom","table","td1","td2","lavel","font_size","checkIcon","tablecell","verticalAlign","listbutton","closeBtn","linkBtnWrap","linkBtn","AgoraRTC","createClient","codec","mode","AgoraRTM","createInstance","LiveSession","hostPostApi","hostUid","channel_num","host_uid","audiencePutApi","audienceUid","put","leavePatchApi","queUp","setQueUp","userUp","setUserUp","setRoom","questionAlert","setOuestionAlert","copiedAlert","setCopiedAlert","setHostExit","closeQuestionAlert","closeCopiedAlert","partiNum","holeInfo","livehole","host_profile_image_url","rtmChannel","appid","setLocalAudioTrack","joinState","setJoinState","setRemoteUsers","authority","createLocalTracks","createMicrophoneAudioTrack","AEC","ANS","microphoneTrack","channel","join","on","newState","msg","peerId","publish","unpublish","leave","handleUserPublished","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","off","useAgora","liveInter","getQuestionList","refreshOut","logout","addEventListener","onpageshow","persisted","createChannel","memberId","unblock","block","removeEventListener","sendMessage","colspan","holeTitle","rowspan","onCopy","badgeContent","details","cover","controls","playIcon","mikeBtn","liveBtn","useTheme","setMike","getMike","navigator","mediaDevices","getUserMedia","audio","stream","handleOpen","joinPass","setJoin","LiveSessionContainer","ReserveToLive","channelNumAry","floor","random","SessionMatchContainer","match","setMatch","sessionKind","params","currUser","SpecialComponent","option","AuthenticateCheck","isLoggedIn","getItem","App","body","getAttribute","userAgent","script","createElement","async","appendChild","removeChild","exact","path","Auth","MypageContainer","initialState","pending","userInfo","sessionInfo","isLive","livestate","INITIAL_STATE","authorize","rootReducer","combineReducers","counter","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5afdcb24.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// actions 액션 타입\r\nconst INCREMENT = 'counterReducer/INCREMENT';\r\nconst DECREMENT = 'counterReducer/DECREMENT';\r\n// 이 패턴에서 따를 규칙은, 액션 타입을 만들때 reducer/ACTION_TYPE 의 형식으로 만들어야 합니다.\r\n\r\n// action creator 액션 생성자\r\nexport const increment = () => ({ type : INCREMENT }); \r\nexport const decrement = () => ({ type : DECREMENT });\r\n\r\nconst initialState = 0;\r\n\r\n//리듀서\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return state + 1;\r\n        case DECREMENT:\r\n            if (state > 0){\r\n                return state - 1;\r\n            } else {\r\n                return state;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import { useHistory } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport ExitButton from '@material-ui/icons/PowerSettingsNew';\r\nimport LoginButton from '@material-ui/icons/MeetingRoom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Alert from '@material-ui/icons/Notifications';\r\nimport { Person, Home } from '@material-ui/icons';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Apps';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst [MyPageIcon, HomeIcon] = [Person, Home];\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"up\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: \"2%\",\r\n        left : \"0\",\r\n        right: \"0\",\r\n        margin : \"auto\",\r\n        backgroundColor: \"#eb4e27\",\r\n        borderRadius: \"15px\", \r\n        width: \"90%\",\r\n        maxWidth: \"44em\",\r\n        zIndex: \"1\"\r\n      },\r\n  }));\r\n  \r\n\r\nconst NavOfGuest = (props) => { // 지금은 쓰지 않는다\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n                <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n                    <HomeIcon/>\r\n                </IconButton>\r\n                <IconButton  color=\"inherit\" aria-label=\"login\" onClick={()=>{\r\n                        history.push('/login');\r\n                    }}>\r\n                    <LoginButton/>\r\n                </IconButton>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n\r\n// const Logout = async() => {\r\n//   const headers = {\r\n//     'Authorization': 'Token ' + localStorage.token\r\n//   }\r\n//   const data = {}\r\n//   const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n//   // window.location.replace('/')\r\n// }\r\n\r\nconst NavOfUser = (props) => {\r\n    \r\n    const user = props.user.data.detail;\r\n    \r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n            <table style={{borderSpacing : \"1.5em 0px\"}}>\r\n                <tr>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"menu\">\r\n                            <HomeIcon onClick={() => {\r\n                            history.push('/');}} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"mypage\">\r\n                            <MyPageIcon onClick={ () => {\r\n                            history.push(\"/mypage\");\r\n                            } }/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    {/* <td >\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"logout\">\r\n                        <ExitButton onClick={()=> {\r\n                          Logout()\r\n                          localStorage.clear()\r\n                          window.location.replace('/')\r\n                          }}/>\r\n                         </IconButton>\r\n                    </Grid>\r\n                    </td> */}\r\n                </tr>                \r\n                <tr>\r\n                    <td style={{fontSize : \"0.5em\"}}>Home</td>\r\n                    <td style={{fontSize : \"0.5em\"}}>Mypage</td>\r\n                    {/* <td style={{fontSize : \"0.5em\"}}>Logout</td> */}\r\n                </tr>                \r\n            </table>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      {/* <Toolbar /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport {\r\n    NavOfGuest,\r\n    NavOfUser,\r\n}","// MESSAGES ACTIONS TYPES\r\nexport const ON_MESSAGES_VALUE_CHANGE = 'ON_MESSAGES_VALUE_CHANGE';\r\nexport const ON_MESSAGES_READING = 'ON_MESSAGES_READING';\r\nexport const ON_MESSAGES_READ = 'ON_MESSAGES_READ';\r\n\r\n// USER ACTIONS TYPES\r\nexport const USER_GET_PENDING = 'USER_GET_PENDING';\r\nexport const USER_GET_SUCCESS = 'USER_GET_SUCCESS';\r\nexport const USER_GET_FAILURE = 'USER_GET_FAILURE';\r\nexport const GIVEUSER = 'user/GIVEUSER';\r\n\r\n// Question List Types\r\nexport const QUESTIONLIST_GET_PENDING = 'questionlist/QUESTIONLIST_GET_PENDING';\r\nexport const QUESTIONLIST_GET_SUCCESS = 'questionlist/QUESTIONLIST_GET_SUCCESS';\r\nexport const QUESTIONLIST_GET_ERROR = 'questionlist/QUESTIONLIST_GET_ERROR';\r\nexport const QUESTIONLIST_DELETE = 'questionlist/QUESTIONLIST_DELETE'\r\n\r\n// SESSION ACTIONS TYPES\r\nexport const SETLIVE = 'session/setlive';\r\nexport const SESSION_GET_PENDING = 'SESSION_GET_PENDING';\r\nexport const SESSION_GET_SUCCESS = 'SESSION_GET_SUCCESS';\r\nexport const SESSION_GET_FAILURE = 'SESSION_GET_FAILURE';\r\n\r\n// MY_SESSION ACTIONS TYPES\r\nexport const MY_SETLIVE = 'mySession/setlive';\r\nexport const MY_SESSION_GET_PENDING = 'MY_SESSION_GET_PENDING';\r\nexport const MY_SESSION_GET_SUCCESS = 'MY_SESSION_GET_SUCCESS';\r\nexport const MY_SESSION_GET_FAILURE = 'MY_SESSION_GET_FAILURE';\r\n\r\n// Entered Session Types\r\nexport const ENTEREDSESSION_GET_PENDING = 'enteredSession/ENTEREDSESSION_GET_PENDING';\r\nexport const ENTEREDSESSION_GET_SUCCESS = 'enteredSession/ENTEREDSESSION_GET_SUCCESS';\r\nexport const ENTEREDSESSION_GET_ERROR = 'enteredSession/ENTEREDSESSION_GET_ERROR';\r\nexport const ENTEREDSESSION_DELETE = 'enteredSession/ENTEREDSESSION_DELETE'","import {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction userGetApi(token){\r\n    const config = {\r\n                headers: { Authorization: 'Token ' + token }\r\n            }\r\n    return axios.get('https://www.ask2live.me/api/user/read', config)\r\n}\r\n\r\nexport const giveUser = (given) => ({ type : GIVEUSER, user : given });\r\n\r\nexport const getUserInfo = token => dispatch => {\r\n    console.log('-----getUserInfo start-----')\r\n    // dispatch({type: USER_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: USER_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: USER_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, {useState, memo} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoginButton from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport \"../../styles/style.css\";\r\nimport {getUserInfo} from \"../../actions/UserActions\";\r\nimport { SignalCellularNoSimOutlined } from '@material-ui/icons';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .MuiTextField-root': {\r\n      width: '25ch',\r\n    },\r\n    '& > *': {\r\n    },\r\n  },\r\n  list: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst style = {\r\n    login : {\r\n        position : \"absolute\",\r\n        display:\"flex\",\r\n        width:\"100%\",\r\n        justifyContent:\"center\",\r\n        flexDirection: \"column\",\r\n        top : \"43%\",\r\n    },\r\n    loginWrapper : {\r\n        position : \"fixed\",\r\n        backgroundColor : \"white\",\r\n        width : \"100%\",\r\n        height : \"100%\",\r\n    },\r\n    loginCard : {\r\n        top : \"18%\",\r\n        // backgroundColor: \"skyblue\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"15px\",\r\n        boxShadow: \"1px 1px 2px 2px black\",\r\n        paddingTop: \"1em\",\r\n        maxWidth : \"23em\",\r\n        width : \"16em\",\r\n        height : \"21em\",\r\n        position : \"fixed\",\r\n    },\r\n    loginBtnWrapper : {\r\n        position: \"absolute\",\r\n        top : \"88%\",\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    loginBtn : {\r\n\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    infoIcon : {\r\n        color :\"grey\",\r\n        position: \"absolute\",\r\n        top: \"88%\",\r\n        right: \"4%\",\r\n        cursor: \"pointer\",\r\n    },\r\n    logo : {\r\n        height: \"2.3em\",\r\n        width : \"2.3em\", \r\n        backgroundImage:\"url('/static/logo.png')\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"contain\",\r\n    }\r\n}\r\n\r\nconst LoginPage = (props) => { \r\n    const history = useHistory();\r\n    if (localStorage.token) {\r\n      history.push('/main')\r\n    }\r\n\r\n    const [loginId, setLoginId] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [openTwo, setOpenTwo] = useState(false);\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleClickTwo = () => {       \r\n        setOpenTwo(true);\r\n    };\r\n    \r\n    const handleCloseTwo = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpenTwo(false);\r\n    };\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // const [id, setId] = useState(\"\") \r\n\r\n    const Login = async({loginId, loginPassword}) => {\r\n      let dataToSubmit = {\r\n        username : loginId,\r\n        password : loginPassword\r\n      }\r\n      axios.post('https://www.ask2live.me/api/user/login', \r\n      dataToSubmit,\r\n      ).then((res) => {\r\n        console.log(\"res\", res)\r\n        window.localStorage.setItem('token', res.data.detail.token)\r\n        dispatch(getUserInfo(res.data.detail.token));\r\n        console.log(res);\r\n        if (props.location.before)\r\n            history.push(props.location.before)\r\n        else\r\n            history.push('/main')\r\n      }).catch(\r\n        (err) => handleClick())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={style.loginWrapper}>\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.loginCard}>\r\n                        <Grid container justify=\"center\">\r\n                             <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">ASK</p>\r\n                             {/* <div style={{display:\"flex\", paddingBottom: \"4px\", alignItems: \"center\"}}>\r\n                                 <ContactSupportIcon style={{fontSize:40}}/>\r\n                            </div> */}\r\n                            <div style={style.logo}>\r\n                            </div>\r\n\r\n                            <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">LIVE</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginBottom:\"0\",fontSize : \"0.8em\"}}>궁금한 점을 자유롭게 물어보고</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginTop: \"8px\", fontSize : \"0.8em\"}}>라이브로 생생한 답변을 들어보세요!</p>   \r\n                        </Grid>\r\n                        <div style={style.login}>\r\n                            <Grid style={{height: \"5em\"}} container justify=\"center\">\r\n                                <TextField \r\n                                errer={loginId.length > 5}\r\n                                helperText={loginId.length > 5 ? \"닉네임은 6자까지만 가능합니다\" : \"\"}\r\n                                value={loginId}\r\n                                placeholder=\"닉네임\"\r\n                                size=\"1em\"\r\n                                style= {{marginBottom : \"1em\"}}\r\n                                id=\"outlined-search\" type=\"search\" variant=\"outlined\"\r\n                                onChange={(event) => \r\n                                    setLoginId(event.target.value.substring(0, 6))\r\n                                }\r\n                                />\r\n                            </Grid>\r\n                            <Grid container justify=\"center\">\r\n                                <TextField\r\n                                style={{position:\"absolute\"}}\r\n                                id=\"outlined-search\" placeholder=\"패스워드\" type=\"password\" variant=\"outlined\"\r\n                                onChange={(event) => setLoginPassword(event.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </div>\r\n                \r\n                        <Grid container justify=\"center\">\r\n                            <div style={style.loginBtnWrapper}>\r\n                                <button style={style.loginBtn} onClick={() => Login({loginId, loginPassword})}>\r\n                                    <span style={{fontSize: \"1.2em\"}} className=\"BMJUA\">로그인</span>\r\n                                </button>\r\n                                {/* <button type=\"button\" onClick={() => loginMatch(loginId)}/> */}\r\n                            </div>\r\n                        </Grid>\r\n                        <InfoIcon \r\n                        onClick={handleClickTwo}\r\n                        style={style.infoIcon}/>\r\n                    </div>      \r\n                </Grid>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                    유효하지 않은 정보입니다.\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar \r\n                style={{position:\"fixed\", top: \"80%\"}}\r\n                open={openTwo} autoHideDuration={6000} onClose={handleCloseTwo}>\r\n                    <Alert \r\n                    style={{backgroundColor:\"black\"}}\r\n                    onClose={handleCloseTwo} severity=\"error\">\r\n                    중복되지 않은 닉네임으로<br/>\r\n                    회원가입과 동시에 로그인이<br/>\r\n                    가능합니다!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default LoginPage","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(holeId){\r\n    return axios.get('https://www.ask2live.me/api/hole/' + holeId + '/questions');\r\n}\r\n\r\nconst getQuestionlist = holeId => dispatch => {\r\n    console.log('-----getQuestionlist-----')\r\n    dispatch({type: QUESTIONLIST_GET_PENDING}); // ��û�� ���۵Ǿ��ٴ� ���� �˸�\r\n\r\n    // ��û ����\r\n    return getApi(holeId).then(\r\n        (response) => {\r\n            // console.log(response);\r\n            dispatch({ type: QUESTIONLIST_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: QUESTIONLIST_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getQuestionlist;\r\n","import {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n    MY_SESSION_GET_PENDING,\r\n    MY_SESSION_GET_SUCCESS,\r\n    MY_SESSION_GET_FAILURE,\r\n  } from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nexport const setLive = (given_holeId, given_livestate) => ({ type : SETLIVE, holeId: given_holeId,  livestate: given_livestate});  //\r\n\r\nfunction sessionGetApi(){\r\n    return axios.get('https://www.ask2live.me/api/hole')\r\n}\r\n\r\nfunction userSessionGetApi(token){\r\n    const config = {\r\n        headers: {Authorization: 'Token ' + token}\r\n    }\r\n    return axios.get('https://www.ask2live.me/api/user/read/hole',\r\n        config\r\n    )\r\n}\r\n\r\nexport const getSessionInfo = () => dispatch => {\r\n    console.log('-----getSessionInfo start-----')\r\n    dispatch({type: SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return sessionGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\nexport const getUserSessionInfo = token => dispatch => {\r\n    console.log('-----getUserSessionInfo start-----')\r\n    dispatch({type: MY_SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userSessionGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: MY_SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: MY_SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import getQuestionlist from \"../../actions/QuestionListActions\";\r\nimport { getSessionInfo } from '../../actions/SessionActions';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport { Progress } from 'antd';\r\nimport React, {useState} from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport axios from \"axios\";\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../styles/style.css\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { CardActions, Divider } from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      flexGrow: 1,\r\n      justifyContent : \"center\",\r\n      maxWidth:\"40em\",\r\n      \r\n      \"& > *\": {\r\n        margin: \"0 1em 1em 1em\",\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(40)\r\n      }\r\n    },\r\n    paper: {\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      paddingTop: \"0.5em\",\r\n      // paddingBottom: \"1em\",\r\n      maxWidth: \"20em\",\r\n      minWidth: \"17em\",\r\n      cursor:\"pointer\",\r\n\r\n    },\r\n    title: {\r\n      width: \"100%\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      fontSize: \"14\",\r\n      // paddingBottom: \"1em\"\r\n    },\r\n    successContent: {\r\n      width: \"80%\",\r\n      position: \"relative\",\r\n      // top: \"5px\",\r\n      transform: \"translate(0,-2em)\",\r\n      // display: \"inline-Block\",\r\n    },\r\n    content: {\r\n      width: \"80%\",\r\n      position: \"relative\",\r\n      // top: \"5px\",\r\n      transform: \"translate(0,-2em)\",\r\n      // display: \"inline-Block\",\r\n    },\r\n    date: {\r\n      position: \"relative\",\r\n      top: \"10px\",\r\n      display: \"inline-Block\",\r\n    },\r\n    work_field: {\r\n      fontSize:\"xx-small\",\r\n      marginLeft: \"1em\",\r\n    },\r\n    wish: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questions: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questionIcon : {\r\n      marginLeft: \"2.5em\"\r\n    },\r\n    avatarWrapper : {\r\n      display: \"table\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      transform: \"translate(0,-4.9em)\",\r\n    },\r\n    avatar : {\r\n      width: theme.spacing(14),\r\n      height: theme.spacing(14),\r\n      // opacity: 0.7,\r\n      \r\n    },\r\n    check : {\r\n      position: \"absolute\",\r\n      paddingTop: \"80px\",\r\n    },\r\n\r\n    chipGrid : {\r\n      width: \"15%\",\r\n      position: \"absolute\",\r\n      paddingTop: \"110px\"\r\n    },\r\n\r\n    wishButton : {\r\n      width:\"250px\",\r\n      height: \"35px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: '#F24822',\r\n      marginTop: '7px',\r\n      zIndex: \"1\",\r\n      transform : \"translate(0,-5.5em)\",\r\n    },\r\n    hostProfile : {\r\n      width:\"110px\",\r\n      height: \"110px\",\r\n      textAlign: \"center\",\r\n      borderRadius: \"50%\",\r\n      marginTop: '7px',\r\n      zIndex: \"1\",\r\n      transform : \"translate(0,-21.5em)\",\r\n      opacity: \"0\",\r\n      cursor:\"pointer\",\r\n    },\r\n    frame : {\r\n      position:\"absolute\",\r\n      width : \"10px\",\r\n      height : \"10px\",\r\n      backgroundColor:\"skyblue\",\r\n      transform : \"translate(-2em,-0.5em)\",\r\n    }\r\n\r\n  }));\r\n\r\nconst onClickWish = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    // console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    // console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n}\r\n\r\nconst onClickWishCancel = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wishcancel\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    // console.log('onClickWishCacel 응답 받음', response)\r\n  }).catch((e) => {\r\n    // console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  });;\r\n}\r\n\r\nconst CurrentReserveSessionsCards = ({currentReserveSessions}) => {\r\n  // console.log(\"컴포넌트 시작 Enter : CurrentReserveSessionsCards\")\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = () => {       \r\n         setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.user)\r\n    let i = 0;\r\n    return (\r\n        <>\r\n        \r\n        <div className={classes.root}>\r\n            {currentReserveSessions.map((session) => (\r\n                <>\r\n                {/* {console.log(session)} */}\r\n                <Paper elevation={3} className={classes.paper} onClick={() => {\r\n                  history.push('/preQuestions/'+session.id)\r\n                  dispatch(getQuestionlist(session.id))\r\n                }}>\r\n                <Grid container justify=\"center\">\r\n                  <Progress \r\n                    className={classes.progress}\r\n                    strokeWidth=\"5\"\r\n                    type=\"dashboard\"\r\n                    strokeColor=\"#F24822\"\r\n                    trailColor=\"#dddddd\"\r\n                    gapDegree = \"85\"\r\n                    width={140}\r\n                    format={percent => {\r\n                      if(percent == 100){\r\n                        return(\r\n                          <>\r\n                          <div className={classes.avatarWrapper}>\r\n                            <Avatar className={classes.avatar} src={session.host_profile_image?\r\n                            `https://www.ask2live.me${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                            \r\n                            {/* <CheckIcon size=\"large\" style={{fontSize: \"55\", opacity: 0.6, position:\"absolute\", top:\"25\", left:\"30\"}} color='error'/> */}\r\n                          </div>\r\n                          </>\r\n                        )\r\n                      }else{\r\n                        return(\r\n                          <>\r\n                          {/* {percent} Days */}\r\n                          <div className={classes.avatarWrapper}>\r\n                          <Avatar className={classes.avatar} src={session.host_profile_image?\r\n                            `https://www.ask2live.me${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                          </div>\r\n                          {/* <div className=\"NotoSans3\" style={{fontSize:\"large\", position:\"absolute\", transform:\"translate(1em, -3em)\"}}>안녕안녕</div> */}\r\n                          </>\r\n                        )}\r\n                      \r\n                      }}\r\n                    percent={(session.hole_reservations) ? \r\n                      Math.ceil(\r\n                        session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                        session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0}/>\r\n                          \r\n                        {session.hole_reservations.target_demand === 0 || session.hole_reservations.guests.length / session.hole_reservations.target_demand >= 1 ?\r\n                          <>\r\n                          <div className={classes.commingSoon}></div>\r\n                          </>\r\n                          :\r\n                          <>\r\n                          </>\r\n                        }\r\n                        <Grid container className={classes.chipGrid} justify=\"center\" alignItems=\"center\">\r\n                          <Chip \r\n                            size=\"small\"  \r\n                            color=\"default\" \r\n                            label={<>\r\n                          <span className=\"NanumGothic3\">{session.hole_reservations.target_demand == 0? \r\n                            100 : Math.ceil(session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100)}%달성</span></>} \r\n                          />\r\n                        </Grid>\r\n                        \r\n                        <Grid justify=\"flex-start\" className={classes.content}>\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {session.title}\r\n                            </span>\r\n                          <Typography variant='caption' component=\"div\" color=\"textSecondary\">\r\n                            {session.host_username? session.host_username : \"익명\"} \r\n                            <span className={classes.work_field}>\r\n                            {session.host_work_company? session.host_work_company : \" \"}\r\n                            {session.host_work_field? \" | \"+session.host_work_field : \" \"}\r\n                            </span>\r\n                          </Typography>\r\n                          <Grid item className={classes.date}>\r\n                          <Typography variant='caption' component=\"p\" >\r\n                            <span className=\"fontGradi NanumGothic3\" style={{fontSize: \"1.2em\", color: \"#D95032\"}}>\r\n                              <span >{`예정일자 `}</span>\r\n                            <Moment format=\"MM월 DD일 A h:mm\">\r\n                              {session.reserve_date}\r\n                            </Moment></span>\r\n                          </Typography>\r\n\r\n                          <Grid container alignItems=\"stretch\" >\r\n                            <div style={{color:\"#F24822\", paddingTop:\"0.4em\"}}><FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon></div>\r\n                            <p className={classes.wish} >\r\n                            <span className=\"NanumGothic3\">찜 {session.hole_reservations.guests.length}/{session.hole_reservations.target_demand}</span>\r\n                            </p>\r\n                            <div className={classes.questionIcon} style={{color:\"#F24822\", paddingTop:\"0.5em\"}}><CommentIcon fontSize=\"small\"></CommentIcon></div>\r\n                            <p className={classes.questions}>\r\n                            <span className=\"NanumGothic3\">질문 {session.count_questions}개</span>\r\n                            </p>\r\n                          </Grid>\r\n                        </Grid> \r\n                        </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n\r\n                <Grid style={{width:\"100%\", margin: \"auto\", height: \"1em\", display: \"flex\", justifyContent: \"center\",}}>       \r\n                <Button \r\n                className={classes.wishButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                clickable='true' \r\n                startIcon={<FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon>}\r\n                onClick={() => {\r\n                  if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                  }else{\r\n                    session.hole_reservations.guests.indexOf(user.data.detail.id) === -1 ?\r\n                  <>\r\n                  {onClickWish(session.id)}\r\n                  {handleClick()}\r\n                  {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                  </>\r\n                  : \r\n                  <>\r\n                  {onClickWishCancel(session.id)}\r\n                  {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                  </>}\r\n                  }\r\n                  }\r\n                  >{Object.keys(user.data).length != 0 && session.hole_reservations.guests.indexOf(user.data.detail.id) != -1 ? \"취소하기\" : \"찜하기\"}</Button>\r\n                  </Grid> \r\n                  <Grid style={{width:\"100%\", margin: \"auto\", height: \"1em\", display: \"flex\", justifyContent: \"center\",}}>  \r\n                  <div className={classes.hostProfile} onClick={() => {\r\n                    history.push({\r\n                      pathname: '/mypage/' + session.host_username,\r\n                      state:{host : session}})\r\n                  }}>\r\n                  \r\n                  </div>\r\n                  </Grid>\r\n                  \r\n            </>\r\n            ))\r\n            }\r\n        </div>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">라이브가 열리면 알려줄게요! </span>\r\n                    </Alert>\r\n        </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrentReserveSessionsCards;","import { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport EnterIcon from '@material-ui/icons/MeetingRoom';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { useSelector } from \"react-redux\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    padding :\"0px\",\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"0 3px 5px 1px #3B568C\",\r\n    backgroundColor : \"rgba(255,255,255,1)\",\r\n    cursor : \"pointer\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n        paddingRight: \"5px\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        marginTop: \"8px\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 6px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        marginBottom : \"3px\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"5em\",\r\n        height : \"5em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -1.6em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -0.5em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst OtherLiveSessionsCards = ({otherLiveSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>?</span>;\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {otherLiveSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card \r\n            key={session.livehole_id} \r\n            className={classes.root}\r\n            >\r\n                <CardContent \r\n                onClick={()=>{\r\n                    if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                    }else{\r\n                    history.push({\r\n                        pathname: \"/session/live\",\r\n                        search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                        state : {\r\n                            hostName : session.host_username,\r\n                            hostImage : session.host_profile_image,\r\n                        }\r\n                })\r\n                }}}\r\n                style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                    <div style={style.profileimage}>\r\n                        <div className={classes.avatarRoot}>\r\n                        <Avatar alt=\"Remy Sharp\" style={{transform:\"translate(5px, 8px)\"}} className={classes.large} src={session.host_profile_image?\r\n                            `https://www.ask2live.me${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                            \r\n                        </div>\r\n                        <div style={style.livelogo1_back}/>\r\n                        <div style={style.livelogo1}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTime}>\r\n                        <PeopleIcon style={{marginRight : \"3px\", padding:\"0px\"}} fontSize=\"small\"/>\r\n                        <span\r\n                        className=\"NanumGothic3\"\r\n                        style={{marginRight: \"2px\", fontSize: \"13px\", color: \"black\"}}>\r\n                            {session.count_participant}명\r\n                        </span>\r\n                        <span \r\n                        className=\"fontGradi NanumGothic3\"\r\n                        style={{fontSize: \"0.7em\", color: \"#D95032\"}}>\r\n                        <Moment format=\" · mm분 전 시작\">\r\n                            {now - toDate(session.reserve_date)}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {/* {session.title.indexOf(\" \") > 7 ? \r\n                                session.title.splice(7, 0, \" \")\r\n                                :\r\n                                null                            \r\n                                } */}\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n               \r\n                \r\n                </CardContent>\r\n                    <div \r\n                    style={{position: \"absolute\", transform:\"translate(2.8em, -3.5em)\"}}>\r\n             \r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n\r\n                \r\n                    </div>\r\n            </Card>\r\n  \r\n   \r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OtherLiveSessionsCards;\r\n","import { useHistory } from 'react-router';\r\nimport React from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../styles/style.css\";\r\nimport \"../../App.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 250,\r\n      height: 250,\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n      float :\"left\",\r\n      margin:\"10px 10px\",\r\n    },\r\n    media: {\r\n        cursor: \"pointer\",\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    cardContent: {\r\n        height: \"30px\"\r\n    },\r\n    cookieWrapper: {\r\n        backgroundColor:\"#EEAC4B\",\r\n        backgroundPosition:\"center center\",\r\n        display : \"block\",\r\n        width: \"6.3em\",\r\n        height: \"6.3em\",\r\n        marginLeft: \"1em\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        overflow: \"hidden\",\r\n\r\n        \r\n    },\r\n    useCookie: {\r\n        margin: \"auto\",\r\n        backgroundImage: \"url('/static/cookieMould.png')\",\r\n        backgroundPosition : \"center center\",\r\n        backgroundSize: \"100%\",\r\n        width: \"6.3em\",\r\n        height : \"6.3em\",\r\n        overflow: \"hidden\",\r\n    },\r\n    living : {\r\n        background: \"url('/static/living.gif') no-repeat\",\r\n        width : \"17px\",\r\n        height: \"17px\",\r\n        backgroundSize: \"contain\",\r\n        position:\"absolute\",\r\n        transform : \"translate(13.2em, -13.7em)\",\r\n    }\r\n  }));\r\n  \r\n\r\nconst style = {\r\n    contentWrapper : {\r\n        // backgroundColor : \"skyblue\",\r\n        width : \"13.5em\",\r\n        height : \"6em\",\r\n        margin : \"0.7em 1.05em 1.05em 1.05em\",\r\n    },\r\n    contentTime : {\r\n        // backgroundColor : \"pink\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n    },\r\n    contentTitle : {\r\n        // backgroundColor : \"coral\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n        whiteSpace : \"\"\r\n    },\r\n    contentName : {\r\n        // backgroundColor : \"yellow\",\r\n        width : \"13.5em\",\r\n        height : \"1em\",\r\n        marginBottom : \"3px\"\r\n    },\r\n    contentWork : {\r\n        // backgroundColor : \"green\",\r\n        width : \"13.5em\",\r\n        height : \"1.2em\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    live2 : {\r\n        display: \"inline-block\",\r\n        backgroundImage : \"url('/static/Live_2.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        width : \"40px\",\r\n        height : \"28px\",\r\n    },\r\n\r\n}\r\n\r\nconst MyLiveSessionsCard = ({session}) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    \r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n  return (\r\n    <>\r\n    {/* <div className=\"padding\" onClick={() => {history.push({\r\n        pathname: \"/session?state=mylive&i_r_d=\"+ session.roomId + \"&channelNum=\" + session.channelNum\" \r\n    })}}> */}\r\n    <div \r\n    onClick={()=>{\r\n                history.push({\r\n                    pathname: \"/session/live\",\r\n                    search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                    state : {\r\n                        hostName : session.host_username,\r\n                        hostImage : session.host_profile_image,\r\n                    }\r\n            })}}\r\n    style={{cursor:\"pointer\"}}>\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n            <br/>\r\n            <div\r\n            style={{backgroundImage: session.host_profile_image? \"url('https://www.ask2live.me\"+session.host_profile_image + \"')\" : \"url('/static/reigns/1.jpg')\"}}\r\n            className={classes.cookieWrapper}\r\n\r\n            ><div className={classes.useCookie}></div> </div>\r\n            <div style={style.contentWrapper}>\r\n                <div style={style.contentTime}>\r\n                    <Grid container alignItems=\"center\">\r\n\r\n                    <div\r\n                    style={style.live2}\r\n                    />\r\n                    <span\r\n                    style={{fontSize:\"0.8em\"}}\r\n                    className=\"NanumGothic3\"\r\n                    >\r\n                        {session.count_participant}명\r\n                    </span>\r\n                    <span \r\n                    className=\"NanumGothic3\"\r\n                    style={{fontSize: \"0.8em\", color:\"rgba(0, 0, 0, 0.4)\", margin : \"0px 3px\"}}>\r\n                        ·\r\n                    </span>\r\n                    <span className=\"fontGradi BMJUA\" style={{fontSize:\"0.9em\"}}>\r\n                        <Moment format=\"mm분 전 시작\">\r\n                             {now - toDate(session.reserve_date)}\r\n                        </Moment>\r\n                    </span>\r\n                    </Grid>\r\n                </div>\r\n                <div style={style.contentTitle}>\r\n                    <span className=\"BMDOHYEON\" style={{fontSize:\"1em\"}}>\r\n                        {session.title}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentName}>\r\n                    <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                        {session.host_username}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentWork}>\r\n                    <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {/* <CardMedia\r\n            className={classes.media}\r\n            image={\"/static/live_IU.png\"}\r\n            title={session.title}\r\n            onClick={()=>{\r\n                history.push(\"/session/live?roomId=\" + session.livehole_id + \"&channelNum=\" + session.livehole_id)\r\n            }}\r\n            /> */}\r\n            {/* <div \r\n             <CardHeader\r\n            avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {session.host_username}\r\n                </Avatar>\r\n            }\r\n            action={\r\n                <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n                </IconButton>\r\n            }\r\n            title={session.title}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"mm분 전 시작\">\r\n                {toDate(session.reserve_date) - now}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <div className=\"centered\">\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {session.description}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent> \r\n             <CardActions disableSpacing>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n            </IconButton>\r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon/>\r\n            </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography paragraph>\r\n                    라이브 중\r\n                </Typography>\r\n            </CardContent>\r\n            </Collapse> */}\r\n        <div className={classes.living}/>\r\n        </Card>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MyLiveSessionsCards = ({myLiveSessions}) => {\r\n    return (\r\n        <>\r\n            {myLiveSessions.map((session) => (\r\n                <>\r\n                <MyLiveSessionsCard session={session} />\r\n                </>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyLiveSessionsCards;","import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport \"../../App.css\"\r\nimport \"../../styles/style.css\"\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    height: \"11.5em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    borderRadius: \"0px\",\r\n    boxShadow: \"0 0 0 0\",\r\n    backgroundColor : \"rgba(255,255,255,0)\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(11),\r\n    height: theme.spacing(11),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 0px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"6em\",\r\n        height : \"6em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -2.1em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -1em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst HostConfirmedSessionsCards = ({hostConfirmedSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n    const [reserveDate, setReserveDate] = useState(\"시작\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {hostConfirmedSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card key={session.livehole_id} className={classes.root}>\r\n                <CardContent style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                <div style={style.profileimage}>\r\n                    <div className={classes.avatarRoot}>\r\n                        <Avatar alt=\"Remy Sharp\" className={classes.large} src={session.host_profile_image?\r\n                        `https://www.ask2live.me${session.host_profile_image}`\r\n                        : \"/static/reigns/1.jpg\"} />\r\n                    </div>\r\n                </div>\r\n                <div style={style.buttonWrapper}>\r\n                    <div \r\n                    style={{posision: \"absolute\",width:\"5em\", paddingLeft:\"0.9em\",marginTop:\"1.2em\"}}>\r\n                    <Grid container justify=\"center\">\r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            setReserveDate(<>\r\n                                <Moment format=\"MM월 DD일 A h:mm\">\r\n                                     {toDate(session.reserve_date)}\r\n                                </Moment>\r\n                                </>);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n                    </Grid>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentTime}>\r\n                        <span \r\n                        className=\"NanumGothic3 fontGradi\"\r\n                        style={{fontSize: \"0.9em\", color: \"black\"}}>\r\n                        <Moment format=\"MM.DD A h:mm\">\r\n                            {toDate(session.reserve_date)}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle} <br/>\r\n                    <span className=\"BMJUA\">시작 :</span> {reserveDate}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nexport default HostConfirmedSessionsCards;","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    balloonWhite : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/Balloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    balloonColor : {\r\n        backgroundImage: \"url('/static/BalloonColor.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    mike : {\r\n        position : \"absolute\",\r\n        width :\"2em\", \r\n        height: \"2em\", \r\n        margin:\"0.7em 0em 0.5em 0.6em\",\r\n        backgroundImage: \"url('/static/mike.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize : \"contain\",\r\n        transform :\"translate(1.5em, 0.3em)\",\r\n    }\r\n}\r\n\r\n\r\nconst SessioinCreateButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={props.noMyLive? \r\n                {backgroundColor: \"white\"}\r\n                :\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push(\"/createSession\");\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>Live Q&A을 개설해서</p>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>경험을 나누어 보세요</p>\r\n                        <p\r\n                        className=\"NanumGothic4\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(개설하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        props.noMyLive?\r\n                        style.balloonColor\r\n                        :\r\n                        style.balloonWhite\r\n                        }>\r\n                        <div\r\n                        style={style.mike}/>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       flexGrow: 1,\r\n//       padding: theme.spacing(2),\r\n//     },\r\n//   }));\r\n\r\n\r\n// const style = {\r\n//     button : {\r\n//         position: 'relative',\r\n//         width: '60%',\r\n//         minWidth : \"19em\",\r\n//         marginBottom: '20px',\r\n//         backgroundColor: \"rgb(255,255,255)\",\r\n//         border : \"3px solid #F24822\"\r\n//     },\r\n//     buttonIcon: {\r\n//         fontSize: 30,\r\n//         color: 'white',\r\n//         backgroundColor: '#F24822',\r\n//         borderRadius: '50%',\r\n//     },\r\n//     buttonText: {\r\n//         align: 'left',\r\n//         fontSize: '1em',\r\n//         margin: '8px',\r\n//     },\r\n// }\r\n\r\n\r\n\r\n\r\n{/* <>\r\n<div className={classes.root}>\r\n    <Grid container justify=\"center\">\r\n      <Button\r\n        style={style.button}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        endIcon={<AddIcon style={style.buttonIcon} />}\r\n        onClick={() => {\r\n          history.push(\"/createSession\");\r\n        }}\r\n      >\r\n        <div style={style.buttonText} align=\"left\" className=\"NanumGothic3\">\r\n          Live Q&A를 개설해서\r\n          <br></br>\r\n          경험을 함께 나누어보세요\r\n        </div>\r\n      </Button>\r\n    </Grid>\r\n  </div>\r\n  </> */}\r\n\r\n\r\nexport {SessioinCreateButton}\r\n","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    profileBalloon : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/profileBalloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n}\r\n\r\n\r\nconst ProfileEditButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push({\r\n                    pathname :\"/mypage/\" + props.user.data.detail.username,\r\n                    state : props.user.data.detail\r\n                    });\r\n\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={\r\n                            {color: \"white\", margin : \"-3px 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>프로필 완성하셨나요?</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>프로필을 완성하면</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"2px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>많은 관심을 끌 수 있어요!</p>\r\n                        <p\r\n                        className=\"NanumGothic3\"\r\n                        style={\r\n                            {color: \"white\", margin : \"4px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(프로필 편집하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        style.profileBalloon\r\n                        }>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEditButton","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useSelector } from 'react-redux';\r\nimport {MyLiveSessionsCards, OtherLiveSessionsCards, CurrentReserveSessionsCards, HostConfirmedSessionsCards} from '../components/sessionCard' \r\nimport {SessioinCreateButton} from '../components/SessionCreateButton';\r\nimport  ProfileEditButton from \"../components/ProfileEditButton\";\r\n// material-ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Person } from '@material-ui/icons';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../App.css\"\r\nimport { Opacity } from '@material-ui/icons';\r\n\r\nconst [MyPageIcon] = [Person];\r\n\r\nlet myLiveSessions = []\r\nlet otherLiveSessions = []\r\nlet currentReserveSessions = []\r\nlet hosts = []\r\nlet hostConfirmedSessions = []\r\n\r\nconst style = {\r\n    mainLogo : {\r\n        backgroundImage : \"url('/static/LogoWhite.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        width : \"8em\",\r\n        height : \"3em\",\r\n        margin : \"0.5em 0 0 1.5em\"\r\n    },\r\n    mainOragne: {\r\n        position : \"absolute\",\r\n        backgroundColor: \"#eb4e27\",\r\n        height : \"15em\",\r\n        width: \"100%\",\r\n        zIndex : \"-1\",\r\n        overflow: \"hidden\",\r\n    },\r\n    descript: {\r\n        fontSize: \"1.2em\",\r\n        color: \"white\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    descript2: {\r\n        fontSize: \"1.2em\",\r\n        color: \"#1C418C\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    cookie1: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"3em\",\r\n        right : \"-2.5em\",\r\n    },\r\n    cookie2: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"-1.5em\",\r\n        width: \"2em\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        left : \"60%\",\r\n    },\r\n    button : {\r\n        position: 'relative',\r\n        width: '80%',\r\n        marginBottom: '20px',\r\n    },\r\n    buttonIcon: {\r\n        fontSize: 30,\r\n        fontColor: 'black',\r\n        backgroundColor: '#C0C0C0',\r\n        borderRadius: '50%',\r\n        marginLeft: '150%',\r\n    },\r\n    buttonText: {\r\n        align: 'left',\r\n        fontSize: '80%',\r\n        margin: '8px',\r\n        marginLeft: '-20%',\r\n        fontWeight: 900,\r\n    },\r\n    swiperLeft : {\r\n        backgroundImage: \"url('/static/toLeft.png')\",\r\n    },\r\n    swiperLeftHidden : {\r\n        display : \"none\"\r\n    },\r\n    swiperRight: {\r\n        backgroundImage: \"url('/static/toRight.png')\"\r\n    },\r\n    swiperRightHidden : {\r\n        display : \"none\"\r\n    },\r\n    logOut : {\r\n        position :\"absolute\",\r\n        transform:\"translate(-0.5em, -3em)\",\r\n        right: \"0%\",\r\n        color: \"white\",\r\n        cursor:\"pointer\",\r\n    }\r\n}\r\n\r\n    \r\nconst SessionCardContainer = (props) => {\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    const user = useSelector(state => state.user);\r\n    const sessions = useSelector(state => state.session.data);\r\n    const history = useHistory();\r\n    const mySession = useSelector(state => state.mySession.data);\r\n\r\n    const wrapperCnt = (cnt) => {\r\n        let defaultSize = 270;\r\n        const rst = cnt * defaultSize;\r\n        return rst.toString() + \"px\";\r\n    }\r\n\r\n    if(user.error){\r\n        localStorage.clear()\r\n        window.location.replace('/')\r\n    }\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        let userDetail;\r\n        if(user.data.detail){\r\n            userDetail = user.data.detail\r\n        }else{\r\n            userDetail = {id:-1} // 반찬고 >_<\r\n        }\r\n        myLiveSessions = []\r\n        otherLiveSessions = []\r\n        currentReserveSessions = []\r\n        hostConfirmedSessions = []\r\n        hosts = []\r\n\r\n        sessions.map((session) => {\r\n            // console.log(session)\r\n            if (session.status == \"DOING\" && session.hole_reservations && (session.hole_reservations).guests.indexOf(userDetail.id) != -1) {\r\n                myLiveSessions = [...myLiveSessions, session];\r\n                // console.log(\"myLiveSEssion:\",myLiveSessions)\r\n            }\r\n            else if (session.status == \"DOING\") {\r\n                otherLiveSessions = [...otherLiveSessions, session];\r\n                // console.log(\"otherLiveSessions\",otherLiveSessions)\r\n            }\r\n            else if (session.hole_reservations && session.hole_reservations.status==\"HOST_CONFIRMED\"){\r\n                hostConfirmedSessions = [...hostConfirmedSessions, session];\r\n                // console.log(\"hostConfirmedSessions\",hostConfirmedSessions)\r\n            }else{\r\n                currentReserveSessions = [...currentReserveSessions, session];\r\n                // console.log(\"currentReserveSessions\",currentReserveSessions)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const [swiperCnt, setSwiperCnt] = useState(1);\r\n\r\n    const leftBtnTrigger = () => {\r\n        if (swiperCnt == 1){\r\n            return style.swiperLeftHidden\r\n        }\r\n        else \r\n            return style.swiperLeft\r\n    }\r\n    const rightBtnTrigger = () => {\r\n        if (myLiveSessions.length == 1 || swiperCnt == myLiveSessions.length)\r\n            return style.swiperRightHidden\r\n        else\r\n            return style.swiperRight\r\n    }\r\n\r\n    const swipping = () => {\r\n        const where = swiperCnt == 1 ? \"0\" : ((swiperCnt - 1) * -270).toString() \r\n        return \"translate(\" + where.toString(where) + \"px, 0)\"\r\n    } \r\n\r\n    const Logout = async() => {\r\n        const headers = {\r\n          'Authorization': 'Token ' + localStorage.token\r\n        }\r\n        const data = {}\r\n        const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n        // window.location.replace('/')\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={style.mainOragne}>\r\n            <div style={style.cookie1} className=\"helloCookie\"/>\r\n        </div>\r\n        <div style={{float: \"right\", transform: \"translate(-1em, 0.6em)\", textAlign: \"center\", color: \"white\"}}>\r\n\r\n\r\n                <IconButton color=\"inherit\" aria-label=\"mypage\" style={{}}>\r\n                    <MyPageIcon style={{border: \"2px solid\", borderColor: \"white\", borderRadius: \"100%\"}} onClick={ () => {\r\n                    history.push(\"/mypage\");\r\n                    } }/>\r\n                </IconButton>\r\n\r\n\r\n        </div>\r\n        <br></br>\r\n        \r\n        <div style={style.mainLogo}/>\r\n        {/* <span \r\n        className=\"BMJUA\" \r\n        style={style.logOut}\r\n        onClick={()=> {\r\n            Logout()\r\n            localStorage.clear()\r\n            window.location.replace('/')\r\n            }}\r\n        >로그아웃</span> */}\r\n\r\n            {\r\n                myLiveSessions.length == 0 ?\r\n                <>\r\n                <br/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                어서오세요!<br/>\r\n                ASK2LIVE를 즐겨보세요!\r\n                </div>\r\n                </>\r\n                :\r\n                <>\r\n                <div\r\n                style={{\r\n                    backgroundImage: \"url('/static/mainLive.png')\",\r\n                    backgroundSize : \"contain\",\r\n                    backgroundRepeat : \"no-repeat\",\r\n                    width: \"25px\",\r\n                    height :\"25px\",\r\n                    marginLeft : \"1.5em\",\r\n                }}/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                찜했던<br/>\r\n                Live Q&A가 시작했어요!\r\n                </div>\r\n                </>\r\n            } \r\n        \r\n        <br/>\r\n\r\n \r\n\r\n            { myLiveSessions.length != 0 ?\r\n            <> \r\n                <Grid container justify=\"center\">\r\n                    <div className=\"myLiveWrapper\">\r\n                        <div className=\"myLive\" style={{display:\"block\", height: \"300px\", width: wrapperCnt(myLiveSessions.length), transform: swipping()}}>\r\n                            <MyLiveSessionsCards myLiveSessions={myLiveSessions} />\r\n                        </div>\r\n                        <div\r\n                        style={leftBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev - 1)\r\n                        }}\r\n                        className=\"swiperLeft\"/>\r\n                        <div\r\n                        style={rightBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev + 1)\r\n                        }}\r\n                        className=\"swiperRight\"/>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : <></>\r\n            }\r\n\r\n        <br></br>\r\n        <SessioinCreateButton noMyLive={myLiveSessions.length == 0}/>\r\n\r\n\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">LIVE 중인 Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { otherLiveSessions.length != 0 ? <OtherLiveSessionsCards otherLiveSessions={otherLiveSessions}/> : <p>라이브 중인 다른 세션이 없어요</p> }\r\n        </Grid>\r\n    \r\n        <br/>\r\n        <ProfileEditButton user={user}/>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">다가오는 LIVE Q&A</p>\r\n\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hostConfirmedSessions.length != 0 ? <HostConfirmedSessionsCards hostConfirmedSessions={hostConfirmedSessions}/> : <p>예정된 다른 세션이 없어요</p> }\r\n        </Grid>\r\n\r\n        <div className=\"center divider\">\r\n            <Divider variant=\"middle\"/>\r\n        </div>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">오픈 신청중인 LIVE Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { currentReserveSessions.length != 0 ? <CurrentReserveSessionsCards currentReserveSessions={currentReserveSessions} setFlag={setFlag}/> : <p>요청 받고있는 다른 세션이 없어요</p>}\r\n        </Grid>\r\n\r\n        {/* <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hosts.length != 0 ? <HostCards hosts={hosts}/> : <p>등록된 호스트가 없어요</p>}\r\n        </Grid> */}\r\n\r\n        \r\n        </>\r\n\r\n    \r\n    )\r\n};\r\n\r\nexport default SessionCardContainer\r\n","import { useHistory } from \"react-router\";\r\nimport React from \"react\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    maxWidth: \"70em\",\r\n  },\r\n  profile: {\r\n    flexGrow: 1,\r\n    maxWidth: \"43em\",\r\n    display: \"flex\",\r\n    height: 80,\r\n    alignItems: \"center\",\r\n    elevation: 3,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\n\r\nconst ProfileGate = (props) => {\r\n  // if(!props.location.state) history.push('/mypge');\r\n    // console.log(\"profileGate\", props.user.detail);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const goToDetail = () => {\r\n        history.push({\r\n          pathname: '/mypage/' + props.user.detail.username,\r\n          state: props.user.detail});\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <div style={{margin: \"auto\", maxWidth: \"43em\"}}>\r\n        <h2 className=\"CookieRun\" style={{color: \"#FFFFFF\"}}>My Page</h2>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        <Card className={classes.profile}>\r\n          <CardActionArea onClick={goToDetail}>\r\n            {props.user.detail.profile_image?\r\n              <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src={`https://www.ask2live.me${props.user.detail.profile_image}`}\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<p className=\"BMDOHYEON\" style={{ fontSize: \"1.2em\", transform: \"translate(0, 1.5px)\"}}>{props.user.detail.username}</p>}\r\n              // subheader=\"September 14, 2016\"\r\n              />\r\n            :\r\n              <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src=\"static/reigns/1.jpg\"\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<p className=\"BMDOHYEON\" style={{ fontSize: \"1.2em\", transform: \"translate(0, 1.5px)\"}}>{props.user.detail.username}</p>}\r\n              // subheader=\"September 14, 2016\"\r\n              />\r\n            }\r\n            \r\n\r\n              <ExitToAppIcon style={{ position: \"absolute\", right: 0, top: \"36%\", marginRight: \"4%\", color: \"rgba(0, 0, 0, 0.6)\"}}/>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileGate;\r\n","import { useHistory } from \"react-router\";\r\n\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Home } from '@material-ui/icons';\r\n\r\nconst style = {\r\n  root: {\r\n    height: \"7%\",\r\n    left: 0,\r\n    right: 0,\r\n    position: \"fixed\",\r\n    margin: \"auto\",\r\n    // maxWidth: \"73em\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    backgroundColor: \"#fff8ef\",\r\n    borderBottom: \"2px solid\",\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n  borderbox: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  text: {\r\n    transform: \"translate(0, 1px)\",\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nconst MypageNav = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div style={style.root}>\r\n        <IconButton\r\n          style={{ position: \"absolute\", left: 0, height: \"100%\" }}\r\n          aria-label=\"back\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n        <IconButton style={{ position: \"absolute\", right: 0, height: \"100%\", marginRight:\"10px\"}} color=\"inherit\" aria-label=\"menu\">\r\n            <Home onClick={() => {\r\n            history.push('/');}} />\r\n        </IconButton>\r\n\r\n        <div style={style.borderbox}>\r\n          <span style={style.text}>{props.text}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageNav;\r\n","import React, { useCallback } from \"react\";\r\nimport ProfileGate from \"./ProfileGate\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { SessioinCreateButton } from \"../SessionCreateButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    top: \"9%\",\r\n    backgroundColor: \"#EF5941\",\r\n  },\r\n  my: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(0),\r\n    textAlign: \"left\",\r\n    // color: theme.palette.text.secondary,\r\n    // position: \"absolute\",\r\n    backgroundColor: \"#EF5941\",\r\n    width: \"100%\",\r\n    height: \"90%\",\r\n    // maxWidth: \"43em\",\r\n    // borderRadius: \"15px\",\r\n  },\r\n  myBottomCard: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  logOut : {\r\n\r\n    transform:\"translate(-0.5em,  1em)\",\r\n    float:\"right\",\r\n    color: \"white\",\r\n    cursor:\"pointer\",\r\n  }\r\n}\r\n\r\nconst Logout = async() => {\r\n  const headers = {\r\n    'Authorization': 'Token ' + localStorage.token\r\n  }\r\n  const data = {}\r\n  await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n  // window.location.replace('/')\r\n}\r\n\r\nconst MyPage = (props) => {\r\n  const classes = useStyles();\r\n  // console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필\"} />\r\n    <div style={{position: \"relative\", height: \"7vh\", width:\"100%\", backgroundColor: \"#EF5941\",}}/>\r\n      {/* <div className={classes.root}>{}</div> */}\r\n      <Grid container justify=\"center\" >\r\n        <div className={classes.my}>\r\n          <div style={{width: \"100%\", maxWidth: \"43em\", margin: \"auto\"}}>\r\n\r\n            <span \r\n              className=\"BMJUA\" \r\n              style={style.logOut}\r\n              onClick={()=> {\r\n                  Logout()\r\n                  localStorage.clear()\r\n                  window.location.replace('/')\r\n                  }}\r\n              >로그아웃</span>\r\n              <ProfileGate user={props.user} />\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Grid>\r\n      <div style={{ position: \"relative\", top: \"50%\" }}>\r\n        <SessioinCreateButton />\r\n      </div>\r\n      <div style={{ padding: \"0 16px\", margin: \"auto\", maxWidth: \"43em\" }}>\r\n        <h3 className=\"CookieRun\">Live QnA</h3>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import axios from \"axios\";\r\n\r\nexport const postSessionToReserve = async(session) => {\r\n  console.log(\"-----postSessionToReserve start-----\");\r\n\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  const res = await axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + session.id + \"/hostconfirm\",\r\n    data,\r\n    config,\r\n  );\r\n  console.log(\"hole reserved: \", res);\r\n};\r\n","import { postSessionToReserve } from '../../actions/SessionToReserveActions';\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { getUserSessionInfo } from '../../actions/SessionActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  paper: {\r\n    position: \"absolute\",\r\n    bottom: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"20px 20px 0 0 \",\r\n    zIndex : \"3\",\r\n  },\r\n  title: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font2: {\r\n    color: \"#030916\",\r\n    fontSize: \"1em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font3: {\r\n    fontSize: \"1em%\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    margin: \"3% 5% 0 0\",\r\n  },\r\n};\r\n\r\nconst SessionConfirm = (props) => {\r\n  console.log(\"SessionConfirm\");\r\n  const { session, goListUp, goDark, handleClick } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  \r\n  return (\r\n    <>\r\n    <Paper style={style.paper} elevation={1}>\r\n      <div className=\"BMDOHYEON\" style={style.title}>\r\n        {/* <Typography variant=\"h3\"  gutterBottom> */}\r\n        오픈 확정하기\r\n        {/* </Typography> */}\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font}>\r\n        {Date(session.reserve_date).substring(0, 21)}에 예정된 <br></br>\"\r\n        {session.title}\"의 스케쥴을 확정하시겠어요?\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font2}>\r\n        스케줄을 확정하면 '찜하기' 버튼을 누른 유저에게\r\n        <br></br>\r\n        알림이 전송됩니다!\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <Button\r\n            style={style.button}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              goListUp({ transform: \"translate(0, 100%)\" });\r\n              goDark({ animation: \"golight 0.7s\" });\r\n              setTimeout(() => {\r\n                goDark({ display: \"none\" });\r\n              }, 700);\r\n            }}\r\n          >\r\n            <div style={style.font3} color=\"030916\">\r\n              취소하기\r\n            </div>\r\n          </Button>\r\n\r\n          <Button\r\n            style={style.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => \r\n              {\r\n                postSessionToReserve(session);\r\n                handleClick();\r\n              }}\r\n              >\r\n            <div style={style.font3} color=\"030916\">\r\n              확정하기\r\n            </div>\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SessionConfirm };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport Moment from \"react-moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"7.5em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    backgroundColor:\"#EEAC4B\",\r\n    float: \"left\",\r\n    width: \"4em\",\r\n    height: \"4em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"4em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n    color: \"white\",\r\n    backgroundColor:\"black\",\r\n    border:\"2px solid #4CC0D0\",\r\n    boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"\r\n  }\r\n}\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" >\r\n      <Box width=\"100%\" mr={1} style={{marginLeft:\"0.8em\"}}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst MypageLiveSession = (props) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const { session, setFlag } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [demand, setDemand] = useState(false);\r\n  const [open2, setOpen2] = useState(false);\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {       \r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = async(event, reason) => {\r\n    await dispatch(getUserSessionInfo(localStorage.token))\r\n    setListUp({ transform: \"translate(0, 100%)\" });\r\n    setDark({ animation: \"golight 0.7s\" });\r\n    setTimeout(() => {\r\n    setDark({ display: \"none\" });\r\n    }, 700);\r\n    history.replace(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDemand = () => {\r\n    setDemand(true);\r\n  }\r\n\r\n  const handleDemandClose = (event, reason) => {\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setDemand(false);\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    setOpen2(true)\r\n  }\r\n\r\n  const handleDeleteClose = (event, reason) => {\r\n    onDelete()\r\n    setTimeout(\r\n      () => dispatch(getUserSessionInfo(localStorage.token)),\r\n      200\r\n    )\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setOpen2(false);\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"21em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root} >\r\n          <br></br>\r\n\r\n          {session.host_profile_image? \r\n          <>\r\n          <div\r\n            style={{ backgroundImage: `url('https://ask2live.me${session.host_profile_image}')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          </>\r\n            :\r\n            <div\r\n            style={{ backgroundImage: `url('/static/reigns/1.jpg')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          }\r\n          \r\n\r\n          <CardHeader\r\n            style={{ padding: \"0 8px 0 8px\", transform: \"translate(0, -5px)\" }}\r\n            title={<Typography style={{whiteSpace:\"nowrap\",width:\"13em\", overflow:\"hidden\", textOverflow:\"ellipsis\"}} variant=\"body2\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM월 DD일 A h:mm\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>\r\n                }\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon fontSize=\"small\"/>\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          {/* 게이지바 추가 */}\r\n          <div style={{width: \"18em\"}}>\r\n            <LinearProgressWithLabel \r\n            value={(session) ?\r\n              Math.ceil(\r\n                session.current_demand / session.target_demand <= 1 ?\r\n                session.current_demand / session.target_demand * 100 : 100) : 0}/>\r\n           </div>\r\n\r\n          <CardContent style={{padding: 0, }}>\r\n            <CardActions style={{paddingLeft: 4, paddingTop: 0}}>\r\n              {session.status != \"DONE\" && user.id === parseInt(session.host) && (\r\n                <Button\r\n                  style={{ backgroundColor: \"#3f51b5\", paddingTop: 0, paddingBottom: 0 }}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    // console.log(session)\r\n                    if(session.current_demand === session.target_demand){\r\n                      setListUp({ transform: \"translate(0, 50%)\" });\r\n                      setDark({ animation: \"godark 0.7s\" });\r\n                    } else {\r\n                      handleDemand();\r\n                    }\r\n                  }}\r\n                >\r\n                  {/* <Typography variant=\"body2\" style={{ fontWeight: 600 }}> */}\r\n                  <span className=\"BMJUA\" style={{color: \"#FFFFFF\"}}>\r\n                    예약 확정하기\r\n                  </span>\r\n                  {/* </Typography> */}\r\n                </Button>\r\n              )}\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  style={{borderColor: \"#3f51b5\", marginLeft: \"1.5em\",}}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={handleDelete}\r\n                >\r\n                  {/* <Typography variant=\"body2\" style={{ fontWeight: 600 }}> */}\r\n                  <span className=\"BMJUA\" color=\"#3f51b5\">\r\n                    삭제하기\r\n                  </span>\r\n                  {/* </Typography> */}\r\n                </Button>\r\n                \r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      <div style={listup} className=\"hiddenlist\" maxWidth=\"\">\r\n        <SessionConfirm\r\n          session={session}\r\n          goListUp={setListUp}\r\n          goDark={setDark}\r\n          handleClick={handleClick}\r\n        />\r\n      </div>\r\n      <div style={dark} className=\"mypagelayerfordark\"></div>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", top: \"0%\" }}\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          <span className=\"BMJUA\">Live Q&A 확정 완료</span>\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n    <Snackbar open={demand} autoHideDuration={1500} onClose={handleDemandClose}>\r\n      <Alert style={{width: \"100%\", backgroundColor: \"black\", color: \"white\"}} onClose={handleDemandClose} severity=\"info\">\r\n        아직 목표 인원 수에<br/>\r\n        도달하지 않았습니다.<br/><br/>\r\n        다른 유저가 찜하는 것을<br/>\r\n        기다려 주세요!\r\n      </Alert>\r\n    </Snackbar>\r\n    <Snackbar style={{position:\"fixed\", top: \"0%\"}} open={open2} autoHideDuration={1500} onClose={handleDeleteClose}>\r\n      <Alert style={style.alert} onClose={handleDeleteClose} severity=\"success\">\r\n        <span className=\"BMJUA\">삭제 완료</span>\r\n      </Alert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageLiveSession;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Moment from \"react-moment\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"6.8em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    border: 'solid',\r\n    borderColor: '#D95032',\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    backgroundColor:\"#EEAC4B\",\r\n    float: \"left\",\r\n    width: \"4em\",\r\n    height: \"4em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"4em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n    color: \"black\",\r\n    backgroundColor:\"white\",\r\n    border:\"2px solid #4CC0D0\",\r\n    boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"\r\n  }\r\n}\r\n\r\nconst MypageConfirmedSession = ({ session }) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [open2, setOpen2] = useState(false)\r\n\r\n  const handleDelete = () => {\r\n    setOpen2(true)\r\n  }\r\n\r\n  const handleDeleteClose = (event, reason) => {\r\n    onDelete()\r\n    setTimeout(\r\n      () => dispatch(getUserSessionInfo(localStorage.token)),\r\n      200\r\n    )\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setOpen2(false);\r\n  }\r\n\r\n  // const onChangeDoing = async(session, user) => {\r\n\r\n  //   const config = {\r\n  //     headers: { Authorization: \"Token \" + localStorage.token },\r\n  //   };\r\n  //   const data = {\r\n      \r\n  //     channel_num : String(session.id) + '123',\r\n  //     host_uid : user.id,\r\n      \r\n  //   }\r\n  //   const res = await axios.post(\r\n  //     \"https://www.ask2live.me/api/hole/\" + session.id + \"/live/create\",\r\n  //     data,\r\n  //     config,\r\n  //   );\r\n\r\n  // }\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    // await postSessionDelete(session);\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"21em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n          <br></br>\r\n\r\n          {session.host_profile_image? \r\n          <>\r\n          <div\r\n            style={{ backgroundImage: `url('https://ask2live.me${session.host_profile_image}')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          </>\r\n            :\r\n            <div\r\n            style={{ backgroundImage: `url('/static/reigns/1.jpg')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          }\r\n\r\n          <CardHeader\r\n            style={{ padding: \"0 8px 0 8px\", transform: \"translate(0, -5px)\" }}\r\n            title={<Typography style={{whiteSpace:\"nowrap\",width:\"13em\", overflow:\"hidden\", textOverflow:\"ellipsis\"}}variant=\"body2\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM월 DD일 A h:mm\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon fontSize=\"small\"/>\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          <CardContent style={{padding:0}}>\r\n            <CardActions style={{paddingLeft: 4, paddingTop: 0}}>\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  style={{ backgroundColor: \"#3f51b5\", paddingTop: 0, paddingBottom: 0 }}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    history.push({\r\n                        pathname: \"/session/reserve\",\r\n                        search: \"?holeId=\" + session.id,\r\n                    })\r\n                  }}\r\n                >\r\n                  <span className=\"BMJUA\" style={{color: \"#FFFFFF\"}}>\r\n                    라이브하기\r\n                  </span>\r\n                </Button>\r\n                <Button\r\n                 style={{borderColor: \"#3f51b5\", marginLeft: \"1.5em\",}}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={handleDelete}\r\n                >\r\n                  <span className=\"BMJUA\" color=\"#3f51b5\">\r\n                    삭제하기\r\n                  </span>\r\n                </Button>\r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Snackbar style={{position:\"fixed\", top: \"0%\"}} open={open2} autoHideDuration={1500} onClose={handleDeleteClose}>\r\n      <Alert style={style.alert} onClose={handleDeleteClose} severity=\"success\">\r\n        <span className=\"BMJUA\">삭제 완료</span>\r\n      </Alert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageConfirmedSession;","export const Emoji = props => (\r\n    <span\r\n      className=\"emoji\"\r\n      role=\"img\"\r\n      aria-label={props.label ? props.label : \"\"}\r\n      aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n      {props.symbol}\r\n    </span>\r\n  )","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Mypage from \"../components/mypage/Mypage\";\r\nimport MypageLiveSession from \"../components/mypage/MypageLiveSession\";\r\nimport MypageConfirmedSession from \"../components/mypage/MypageConfirmedSession\";\r\nimport { getUserSessionInfo } from \"../actions/SessionActions\";\r\n// import { getUserInfo } from \"../actions/UserActions\";\r\nimport { Emoji } from \"../components/Emoji\";\r\n\r\n// material-ui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    width: \"100%\",\r\n    maxWidth: \"70em\",\r\n    paddingLeft: theme.spacing(4),\r\n    borderBottom: \"solid thin\",\r\n    margin: \"auto\"\r\n    // marginBottom: \"2%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n\r\n  alert: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    zIndex: 2,\r\n    maxWidth: \"25em\",\r\n    size: \"large\",\r\n  },\r\n  itemText: {\r\n    width: \"100%\",\r\n    paddingLeft: \"5%\",\r\n    transform: \"translate(0, 1.5px)\",\r\n    // marginTop: \"1%\",\r\n  },\r\n};\r\n\r\n\r\n\r\nconst MyPageContainer = (props) => {\r\n  // console.log(\"MyPageContainer\");\r\n\r\n  // const [render, setRender] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector((state) => state.user.data);\r\n  const sessions = useSelector((state) => state.mySession.data);\r\n  const wishSessions = useSelector((state) => state.mySession.data);\r\n\r\n  // console.log(\"세션 :\", sessions);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.token\r\n    // dispatch(getUserInfo(token));\r\n    dispatch(getUserSessionInfo(token));\r\n    // setRender(true);\r\n  }, []);\r\n\r\n  let myLiveSessions = [];\r\n  let myDoneSessions = [];\r\n  let myWishSessions = [];\r\n  let myConfirmSessions = [];\r\n\r\n  if (Object.keys(sessions).length != 0) {\r\n    sessions.detail.my_hole.map((session) => {\r\n      if (\r\n        session.status === \"NOT_START\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        if (session.reservation_status === \"HOST_CONFIRMED\") {\r\n          myConfirmSessions = [...myConfirmSessions, session];\r\n        } else {\r\n          myLiveSessions = [...myLiveSessions, session];\r\n        }\r\n      } else if (\r\n        session.status === \"DONE\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        myDoneSessions = [...myDoneSessions, session];\r\n      }\r\n    });\r\n  }\r\n\r\n  if (Object.keys(wishSessions).length != 0) {\r\n    wishSessions.detail.wish_hole.map((session) => {\r\n      myWishSessions = [...myWishSessions, session];\r\n    });\r\n  }\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const [openDone, setOpenDone] = useState(true);\r\n  const [openWish, setOpenWish] = useState(true);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const handleConfirmClick = () => {\r\n    setOpenConfirm(!openConfirm);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickDone = () => {\r\n    setOpenDone(!openDone);\r\n  };\r\n\r\n  const handleClickWish = () => {\r\n    setOpenWish(!openWish);\r\n  };\r\n\r\n\r\n  if (!user.detail || !sessions.detail) return <p>로딩중...</p>;\r\n\r\n  return (\r\n    <>\r\n      <Mypage user={user} />\r\n      {/* <SessioinCreateButton /> */}\r\n\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <div\r\n          style={{ display: \"inline-block\", width: \"100%\", maxWidth: \"43em\" }}\r\n        >\r\n          <ListItem\r\n            button\r\n            onClick={handleConfirmClick}\r\n            className={classes.nested}\r\n          >\r\n            {/* <ListItemIcon> */}\r\n              <Emoji symbol=\"🔊\" />\r\n            {/* </ListItemIcon> */}\r\n            <p className=\"BMJUA\" style={style.itemText} >진행 확정된 Q&A</p>\r\n            {openConfirm ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openConfirm} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myConfirmSessions.length != 0 ?\r\n                myConfirmSessions.map((session) => (\r\n                  <>\r\n                    <MypageConfirmedSession\r\n                      session={session}\r\n                    />\r\n                  </>\r\n                )) :\r\n                  <>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                      <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 진행 확정된 Q&A가 없습니다</p>\r\n                    </div>\r\n                  </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClick}\r\n            className={classes.nested}\r\n          >\r\n            <Emoji symbol=\"💬\" />\r\n            <p className=\"BMJUA\" style={style.itemText} >모집 중인 Q&A</p>\r\n            {open ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myLiveSessions.length != 0 ?\r\n                myLiveSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                  <>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                      <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 모집 중인 Q&A가 없습니다</p>\r\n                    </div>\r\n                  </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClickWish}\r\n            className={classes.nested}\r\n          >\r\n            <Emoji symbol=\"❤️\" />\r\n\r\n            <p className=\"BMJUA\" style={style.itemText} >찜한 Q&A</p>\r\n            {openWish ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openWish} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myWishSessions.length != 0 ?\r\n                myWishSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                <>\r\n                  <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 찜한 Q&A가 없습니다</p>\r\n                  </div>\r\n                </>\r\n              }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClickDone}\r\n            className={classes.nested}\r\n          >\r\n\r\n              <Emoji symbol=\"🔇\" />\r\n\r\n            <p className=\"BMJUA\" style={style.itemText} >진행 완료 Q&A</p>\r\n            {openDone ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openDone} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myDoneSessions.length != 0 ?\r\n                myDoneSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                <>\r\n                  <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 진행 완료한 Q&A가 없습니다</p>\r\n                  </div>\r\n                </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n        </div>\r\n      </Grid>\r\n\r\n      <div\r\n        style={{\r\n          height: \"4em\",\r\n          width: \"100%\",\r\n          marginBottom: \"4%\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPageContainer;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { postSessionToReserve } from '../actions/SessionToReserveActions';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport { Checkbox } from 'antd';\r\n\r\nimport axios from \"axios\";\r\nimport { getSessionInfo, getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport MypageNav from \"../components/mypage/MypageNav\";\r\n\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction NumAlert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    // fontFamily: \"BMJUA\"\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#EF4D57\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    fontSize: '0.8em'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#EF4D57\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n    color: \"white\",\r\n    backgroundColor:\"black\",\r\n    border:\"2px solid #4CC0D0\",\r\n    boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"\r\n  }\r\n}\r\n\r\nconst SessionCreateContainer = (props) => {\r\n\r\n  let urlSearchParams = new URLSearchParams(\r\n    props.routerInfo.location.search.slice(1)\r\n  );\r\n\r\n  let nowDate = new Date()\r\n  let afterOneMinutes = new Date(nowDate.setDate(nowDate.getMinutes() + 1))\r\n\r\n  let defaultDate = afterOneMinutes.toISOString()\r\n  console.log(\"defaultDate\", defaultDate)\r\n\r\n  const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleValid, setTitleValid] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionValid, setDescriptionValid] = useState(false);\r\n  \r\n  const [reserveDate, setReserveDate] = useState(defaultDate);\r\n  const [reserveDateValid, setReserveDateValid] = useState(false);\r\n  const [earlyDateValid, setEarlyDateValid] = useState(false);\r\n  const [count, setCount] = useState(0)\r\n\r\n  const [skipValid, setSkipValid] = useState(false);\r\n\r\n  const toDate = (reserve_date) => {\r\n    let date = new Date(reserve_date);\r\n    return date;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (holeId) {\r\n      axios\r\n        .get(\"https://www.ask2live.me/api/hole/read/\" + holeId)\r\n        .then((res) => {\r\n          const session = res.data.detail;\r\n          console.log(session)\r\n          setTitle(session.title);\r\n          setDescription(session.description);\r\n          let date = session.reserve_date.split(\":\");\r\n          setReserveDate(date[0] + \":\" + date[1]);\r\n          setCount(session.hole_reservations.target_demand);\r\n        });\r\n    }\r\n  }, [holeId]);\r\n\r\n  const [open, setOpen] = useState(0);\r\n  const [open2, setOpen2] = useState(0);\r\n  const [disable, setDisable] = useState(false)\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onIncrease = () => setCount(count + 1);\r\n  const onDecrease = () => count > 0 ? setCount(count - 1) : null;\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = (event, reason) => {\r\n    history.push(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick2 = () => {\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose2 = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen2(false);\r\n  };\r\n\r\n  const onClick = async () => {\r\n    if (earlyDateValid)\r\n        return;\r\n    setDisable(true)\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    console.log(localStorage.token);\r\n    \r\n    let session = {}\r\n    \r\n    const data = {\r\n      title: title,\r\n      description: description,\r\n      reserve_date: reserveDate,\r\n      target_demand: count,\r\n    };\r\n    console.log(data);\r\n    if (holeId) {\r\n      await axios\r\n        .patch(\r\n          \"https://www.ask2live.me/api/hole/update/\" + holeId,\r\n          data,\r\n          config\r\n        )\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    } else if(skipValid){\r\n      // sessionCreate\r\n      await axios\r\n      .post(\"https://www.ask2live.me/api/hole/create\", data, config)\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          session = res.data.detail\r\n          // sessionToReserve\r\n          postSessionToReserve(session);\r\n          console.log(\"postSessionToReserve success\")\r\n          // 라이브 하기\r\n          history.push({\r\n            pathname: \"/session/reserve\",\r\n            search: \"?holeId=\" + session.id,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        })\r\n      \r\n      \r\n      \r\n      \r\n    }else {\r\n      await axios\r\n        .post(\"https://www.ask2live.me/api/hole/create\", data, config)\r\n        .then((res) => {\r\n          console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {holeId ? (\r\n        <MypageNav text={\"Live Q&A 수정하기\"} />\r\n      ) : (\r\n        <MypageNav text={\"Live Q&A 만들기\"} />\r\n      )}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        {/* <CssBaseline /> */}\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <AssignmentIcon />\r\n          </Avatar>\r\n\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"body1\"\r\n            butterBottom\r\n            style={{ fontFamily: \"BMJUA\" }}\r\n          >\r\n            세션 정보를 입력하세요\r\n          </Typography>\r\n          {/* <Typography variant=\"subtitle1\" gutterBottom>\r\n                    세션 정보를 입력하세요\r\n                </Typography> */}\r\n          <div className={classes.form}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"title\"\r\n              label=\"session title\"\r\n              name=\"title\"\r\n              error={titleValid}\r\n              helperText={titleValid ? \"제목을 입력해 주세요\" : \"\"}\r\n              // autoComplete=\"title\"\r\n              placeholder=\"세션 제목을 입력해주세요\"\r\n              autoFocus\r\n              value={title}\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 20)\r\n                  alert(\"제목은 20자 이내로 입력이 가능합니다!\");\r\n                setTitle(e.target.value.substring(0, 20));\r\n                setTitleValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            \r\n            <Checkbox onChange={(e) => {\r\n              console.log(\"e.target.checked\", e.target.checked)\r\n              if(e.target.checked){\r\n                setSkipValid(true)\r\n                setCount(0)\r\n              }else{\r\n                setSkipValid(false)\r\n              }\r\n            }}><span style={{fontSize:\"small\"}} className=\"BMDOHYEON\">지금 당장 라이브 세션 열기</span></Checkbox>\r\n            \r\n            {skipValid ? \r\n            \r\n            <>\r\n                <TextField\r\n                margin=\"normal\"\r\n                disabled=\"true\"\r\n                fullWidth\r\n                id=\"reserveDate\"\r\n                label=\"Live Q&A 진행 예정일\"\r\n                name=\"reserveDate\"\r\n                type=\"datetime-local\"\r\n                autoFocus\r\n                value={reserveDate}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <Grid\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <HelpIcon\r\n                    color=\"disabled\"\r\n                    onClick={()=>\r\n                        handleClick2()\r\n                    }\r\n                  /><span style={{color:\"gray\"}}> &nbsp; 목표 인원 수</span>\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton disabled=\"true\" size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                disabled=\"true\"\r\n                  // margin=\"normal\"\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={count}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton disabled=\"true\" size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n              </>\r\n              \r\n            :\r\n            <>\r\n              <TextField\r\n                // variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                error={reserveDateValid || earlyDateValid}\r\n                helperText={reserveDateValid ? \"예약 일자를 입력해 주세요\" : \r\n                              earlyDateValid ? \"이전 날짜로는 입력할 수 없어요\" : \"\"}\r\n                id=\"reserveDate\"\r\n                label=\"Live Q&A 진행 예정일\"\r\n                name=\"reserveDate\"\r\n                type=\"datetime-local\"\r\n                // autoComplete=\"title\"\r\n                autoFocus\r\n                value={reserveDate}\r\n                // defaultValue={reserveDate}\r\n                onChange={(e) => {\r\n                  setReserveDate(e.target.value);\r\n                  let cur_date = new Date();\r\n                  console.log(reserveDate);\r\n                  console.log(\"설정한시간\", toDate(e.target.value).getTime());\r\n                  console.log(\"현재시간\", cur_date.getTime());\r\n                  console.log(\r\n                    (toDate(e.target.value).getTime() - cur_date.getTime()) / 1000\r\n                  );\r\n                  if (toDate(e.target.value).getTime() - cur_date.getTime() < 0)\r\n                      setEarlyDateValid(true)\r\n                  else\r\n                      setEarlyDateValid(false)\r\n                  setReserveDateValid(false);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <Grid\r\n              disabled=\"true\"\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <HelpIcon\r\n                    onClick={()=>\r\n                        handleClick2()\r\n                    }\r\n                  /> &nbsp; 목표 인원 수\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={count}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n              </>\r\n            }\r\n            \r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              name=\"description\"\r\n              placeholder=\"소개글을 입력해주세요\"\r\n              error={descriptionValid}\r\n              helperText={\r\n                descriptionValid ? \"어떤 내용의 Q&A인지 설명해 주세요\" : \"\"\r\n              }\r\n              value={description}\r\n              label=\"Live Q&A 짧은 소개\"\r\n              type=\"password\"\r\n              id=\"description\"\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 200)\r\n                  alert(\"소개는 200자 이내로 입력이 가능합니다!\");\r\n                setDescription(e.target.value.substring(0, 200));\r\n                setDescriptionValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            {holeId ? \r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                onClick={onClick}\r\n                disabled={disable}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            </>\r\n             : \r\n            <>\r\n            {skipValid?\r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={onClick}\r\n            disabled={disable}\r\n          >\r\n            Live Q&A 세션 바로 만들기\r\n            </Button>\r\n            :\r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={onClick}\r\n            disabled={disable}\r\n          >\r\n            Live Q&A 만들기\r\n            </Button>\r\n            }\r\n              \r\n            </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", bottom: \"50%\" }}\r\n        open={open}\r\n        autoHideDuration={1500}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          {holeId ? (\r\n            <span className=\"BMJUA\">Live Q&A 수정 완료!</span>\r\n          ) : (\r\n            <span className=\"BMJUA\">Live Q&A 생성 완료!</span>\r\n          )}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open2} autoHideDuration={6000} onClose={handleClose2}>\r\n                    <NumAlert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose2} severity=\"error\">\r\n                    <span style={{fontSize:\"1.1em\"}} className=\"BMJUA\">목표인원</span> \r\n                    을 달성하면 <br/>\r\n                    <span style={{fontSize:\"1.1em\"}} className=\"BMJUA\">예약 확정하기</span>\r\n                    를 할 수 있어요.<br/>\r\n                    예약을 확정하면\r\n                    <span style={{fontSize:\"0.9em\"}} className=\"Gmarket3\"> Live Q&A</span>\r\n                    를 열 수 있어요.\r\n                    </NumAlert>\r\n        </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SessionCreateContainer;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport \"../../styles/style.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { getUserInfo } from \"../../actions/UserActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontSize: \"1.3em\",\r\n    top: \"9%\",\r\n    left: \"5%\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform:\"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  editWrapper: {\r\n    height: \"7%\",\r\n    // left: 0,\r\n    right: 0,\r\n    position: \"absolute\",\r\n    margin: \"auto\",\r\n    // width: \"100%\",\r\n    // maxWidth: \"73em\",\r\n    bottom: 0,\r\n    // zIndex: 1,\r\n    // pointerEvents: \"none\",\r\n  },\r\n  editBtn: {\r\n    // pointerEvents:\"auto\",\r\n    // position: \"absolute\",\r\n    // right:0,\r\n    height: \"100%\",\r\n    // fontFamily: \"BMJUA\",\r\n    fontSize: \"1em\",\r\n    // transform: \"translate(0, 1px)\",\r\n  },\r\n};\r\n\r\nconst ProfileDetail = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // console.log(\"PROPS\", props);\r\n  const user = props.routerInfo.location.state;\r\n\r\n  let profile = {};\r\n  useEffect(() => {\r\n    dispatch(getUserInfo(localStorage.token));\r\n  });\r\n\r\n  if (props.routerInfo.location.state.host) {\r\n    const host = props.routerInfo.location.state.host;\r\n    // console.log(\"host : \", host);\r\n    if (!host.host_work_company.length)\r\n      host.host_work_company = \"\";\r\n    if (!host.host_work_field.length) host.host_work_field = \"\";\r\n\r\n    profile = {\r\n      username: host.host_username,\r\n      profile_image: host.host_profile_image,\r\n      work_company: host.host_work_company,\r\n      work_field: host.host_work_field,\r\n      bio: host.host_bio,\r\n    };\r\n  } else {\r\n    if (!user.work_company.length)\r\n      user.work_company = \"\";\r\n    if (!user.work_field.length) user.work_field = \"\";\r\n    \r\n    profile = {\r\n      username: user.username,\r\n      profile_image: user.profile_image,\r\n      work_company: user.work_company,\r\n      work_field: user.work_field,\r\n      bio: user.bio,\r\n    };\r\n  }\r\n\r\n  let editFlag = false;\r\n  if(user.username === profile.username) editFlag = true\r\n\r\n  const goToEdit = () => {\r\n    history.replace({\r\n      pathname: `${profile.username}/edit`,\r\n      state: user});\r\n  }\r\n  if (!user || !profile) return<p> 로딩중 </p>\r\n\r\n  return (\r\n    <>\r\n        <MypageNav text={\"프로필\"} editFlag={editFlag} />\r\n        \r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n        {user.username === profile.username && (\r\n          <>\r\n          <div style={style.editWrapper}>\r\n            <Button onClick={goToEdit} style={style.editBtn}>\r\n              <span className=\"CookieRun\">편집</span>\r\n            </Button>\r\n          </div>\r\n          </>\r\n        )}\r\n          <div>\r\n            <p className={classes.username}>{profile.username}</p>\r\n            {profile.profile_image?\r\n            <Avatar\r\n            className={classes.avatar}\r\n            aria-label=\"recipe\"\r\n            src={`https://www.ask2live.me${profile.profile_image}`}\r\n          ></Avatar>\r\n          :\r\n          <Avatar\r\n            className={classes.avatar}\r\n            aria-label=\"recipe\"\r\n            src=\"/static/reigns/1.jpg\"\r\n          ></Avatar>\r\n          }\r\n\r\n            \r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            [근무 회사] {profile.work_company}\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            [일하는 분야] {profile.work_field}\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n                \r\n              <p style={{fontFamily: \"BMJUA\", marginTop: 0, whiteSpace: \"pre-wrap\"}}>\r\n                {profile.bio}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDetail;\r\n","var blank = /\\s+/g;\r\nvar special = /[\\[\\]\\{\\}\\(\\),.`~!@#$%^&*|\\\\\\'\\\";:\\/?]/gi;\r\n\r\nexport const CheckSpaceNSpecial = (string) => {\r\n\r\n    return blank.test(string) || special.test(string);\r\n}\r\n\r\n// export const CheckSpecial = (string) => {\r\n\r\n//     return special.test(string);\r\n// }\r\n\r\nexport const ReplaceSpaceNSpecial = (string) => {\r\n\r\n    return string.replace(blank, \"\").replace(special, \"\");\r\n}\r\n\r\n// export const ReplaceSpecial = (string) => {\r\n\r\n//     return string.replace(special, \"\");\r\n// }","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport \"../../styles/style.css\";\r\n\r\nimport axios from \"axios\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { getUserInfo, updateUserInfo } from \"../../actions/UserActions\";\r\nimport { CheckSpaceNSpecial, ReplaceSpaceNSpecial } from \"../CheckString\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    // fontFamily: \"BMDOHYEON\",\r\n    // fontSize: \"1.3em\",\r\n    top: \"9%\",\r\n    left: \"5%\",\r\n    // top: \"12%\",\r\n    // left: \"6.6%\",\r\n    // maxWidth: \"6em\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  buttonGroup: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    left: 0,\r\n    right: 0,\r\n    bottom: \"5.5%\",\r\n    margin: \"auto\",\r\n    justifyContent: \"center\",\r\n  },\r\n  file: {\r\n    fontFamily: \"BMJUA\",\r\n    // fontWeight: \"bold\",\r\n    position: \"absolute\",\r\n    top: \"24%\",\r\n    left: \"5%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontWeight: \"lighter\",\r\n    padding: \"1px\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n    color: \"#EF5941\",\r\n    borderColor: \"#EF5941\",\r\n  },\r\n  button2: {\r\n    position: \"relative\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    padding: \"1px\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n    backgroundColor: \"#EF5941\",\r\n    opacity: \"0.9\",\r\n  },\r\n};\r\n\r\nconst MypageEdit = (props) => {\r\n  // console.log(\"MypageEdit\");\r\n  // console.log(props)\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = props.routerInfo.location.state;\r\n  \r\n  let usernameValue;\r\n  const [username, setUsername] = useState(user.username);\r\n  const [profileImage, setProfileImage] = useState(\"https://www.ask2live.me\" + user.profile_image)\r\n  const [workField, setWorkField] = useState(user.work_field);\r\n  const [workCompany, setWorkCompany] = useState(user.work_company);\r\n  const [bio, setBio] = useState(user.bio);\r\n\r\n  const [image, setImage] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n  const onChange = useCallback((e) => {\r\n    // console.log(\"e.target.name\",e.target.name)\r\n    if(e.target.name === \"image\"){\r\n      if(e.target.files[0].size > 6000000){\r\n        alert(\"6MB 이상의 파일은 업로드되지 않습니다.\")\r\n      }else{\r\n        setImage({\r\n          profile_image: e.target.files,\r\n        });\r\n\r\n        const preview = e.target.files[0];\r\n        const imageUrl = URL.createObjectURL(preview);\r\n        setProfileImage(imageUrl)\r\n      }  \r\n    }\r\n  });\r\n\r\n  const onClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + localStorage.token,\r\n      },\r\n    };\r\n    const data = {\r\n      work_field: workField,\r\n      username: username,\r\n      work_company: workCompany,\r\n      bio: bio.replace(\"\\r\\n\", \"<br/>\"),\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"work_field\", data.work_field);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"work_company\", data.work_company);\r\n    formData.append(\"bio\", data.bio);\r\n\r\n    console.log(image);\r\n    if (Object.keys(image).length != 0) {\r\n      formData.append(\"profile_image\", image.profile_image[0]);\r\n    }\r\n\r\n    try {\r\n      await axios.patch(\r\n        \"https://www.ask2live.me/api/user/update\",\r\n        formData,\r\n        config\r\n      )\r\n\r\n        dispatch(getUserInfo(localStorage.token));\r\n        const resGet = await axios.get(\r\n          \"https://www.ask2live.me/api/user/read\",\r\n          config\r\n        );\r\n        \r\n        history.replace({\r\n          pathname: \"/mypage/\" + username,\r\n          state: resGet.data.detail,\r\n        });\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n      alert(\"이미 존재하는 닉네임입니다\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필 편집\"} />\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n          <div>\r\n            <p className={classes.username}>\r\n              <input\r\n                // className={classes.username}\r\n                className=\"BMDOHYEON\"\r\n                style={{\r\n                  fontSize: \"1.3em\",\r\n                  maxWidth: \"8em\",\r\n                  border: \"none\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                required\r\n                autoComplete=\"off\"\r\n                // oninvalid={usernameValid ? \"이름은 6글자 이내로 입력이 가능합니다\" : \"\"}\r\n                // defaultValue={username}\r\n                value={username}\r\n                placeholder=\"이름을 입력하세요\"\r\n                name=\"username\"\r\n                onChange={(e) => {\r\n                  usernameValue = e.target.value\r\n\r\n                  if (usernameValue.length > 6){\r\n                    alert(\"이름은 6글자 이내로 입력이 가능합니다\");\r\n                    usernameValue = usernameValue.substring(0, 6)\r\n                  }\r\n\r\n                  if (CheckSpaceNSpecial(usernameValue)){\r\n                    alert(\"공백/특수문자는 입력이 불가합니다\");\r\n                    usernameValue = ReplaceSpaceNSpecial(usernameValue)\r\n                  }\r\n\r\n                  setUsername(usernameValue);\r\n                  // setUsernameValid(false)\r\n                }}\r\n                />\r\n                <br/>\r\n                <small className=\"Gmarket2\" style={{fontSize: \"0.7em\"}}>* 공백/특수문자 제외 6글자 이내</small>\r\n            </p>\r\n\r\n            <Avatar\r\n              className={classes.avatar}\r\n              aria-label=\"recipe\"\r\n              src={profileImage}\r\n            ></Avatar>\r\n            <input\r\n              style={style.file}\r\n              type=\"file\"\r\n              name=\"image\"\r\n              // accept=\"image/*\"\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            <input\r\n              // className={classes.work_company}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                // borderBottom: \"1px solid\",\r\n                // backgroundColor: \"#FFEBE8\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              // defaultValue={workCompany}\r\n              value={workCompany}\r\n              placeholder=\"회사 이름을 입력해주세요\"\r\n              name=\"work_company\"\r\n              onChange={(e) => setWorkCompany(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            <input\r\n              // className={classes.work_field}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                color: \"grey\",\r\n                // backgroundColor: \"#FFEBE8\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              // defaultValue={workField}\r\n              value={workField}\r\n              placeholder=\"일하는 분야를 입력해주세요\"\r\n              name=\"work_field\"\r\n              onChange={(e) => setWorkField(e.target.value)}\r\n            />\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n              {/* <p style={{marginTop: 0}}> */}\r\n              <textarea\r\n                className=\"bioWrapper\"\r\n                style={{\r\n                  border: \"1px solid\",\r\n                  borderColor: \"rgba(0, 0, 0, 0.3)\",\r\n                  width: \"89%\",\r\n                  height: \"80%\",\r\n                  // backgroundColor: \"#F2AC57\",\r\n                  fontFamily: \"BMJUA\",\r\n                  // backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                // defaultValue={bio}\r\n                value={bio}\r\n                placeholder=\"소개를 입력해주세요\"\r\n                name=\"bio\"\r\n                onChange={(e)=> setBio(e.target.value)}\r\n                // onKeyPress={pressEnter}\r\n              />\r\n              {/* </p> */}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={style.buttonGroup}>\r\n            <Button\r\n              style={style.button}\r\n              variant=\"outlined\"\r\n              // color=\"#EF5941\"\r\n              size=\"normal\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <span style={{transform: \"translate(0, 1px)\", color: \"#EF5941\"}}>\r\n                취소하기\r\n              </span>\r\n            </Button>\r\n\r\n            <Button\r\n              style={style.button2}\r\n              variant=\"contained\"\r\n              // color=\"primary\"\r\n              // backgroundColor=\"#EF5941\"\r\n              // backgroundColor='#0063cc'\r\n              size=\"large\"\r\n              onClick={onClick}\r\n            >\r\n              <span style={{transform: \"translate(0, 1px)\", color: \"#FFFFFF\"}}>\r\n                확정하기\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport {QUESTIONLIST_DELETE} from \"../../actions/types\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport getQuestionlist from '../../actions/QuestionListActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: \"1000\",\r\n    backgroundColor: \"#FFEBE8\",\r\n    paddingBottom: \"3em\",\r\n    fontFamily: \"NanumGothic\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  card : {\r\n    border: \"1px solid #F24822\", \r\n    marginBottom:\"0.5em\",\r\n  },\r\n  cardText : {\r\n    position: \"relative\",\r\n    top: \"6.5px\",\r\n  },\r\n  labelBMJUA : {\r\n  fontFamily: \"BMJUA\",\r\n  fontStyle: \"normal\",\r\n  fontWeight: \"normal\",\r\n  fontSize: \"1.3em\"\r\n  },\r\n  avatar : {\r\n    position : \"absolute\"\r\n  },\r\n  questionText : {\r\n    marginLeft : \"3em\",\r\n    fontFamily: \"NanumGothic\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n  }\r\n}));\r\n\r\nconst style = {\r\n\r\n  submitbtn : {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      float: \"right\",\r\n      right: \"3px\",\r\n      width: \"10%\",\r\n      top: \"2.4em\",\r\n      height: \"2.4em\",\r\n      zIndex: \"2\",\r\n  },\r\n  insert : {\r\n      top: \"3.2em\",\r\n      left : \"9px\",\r\n      height: \"2.5em\",\r\n      width:\"86%\",\r\n      borderBottom : \"1px solid\",\r\n      borderTop: \"0px\",\r\n      borderLeft : \"0\",\r\n      borderRight: \"0\",\r\n    '::placeholder' : {\r\n      color : \"red\",\r\n    }\r\n  },\r\n  \r\n}\r\n\r\n\r\nconst MyQuestionCards = () => {\r\n  let [myQuestions, setMyQuestions] = useState([])\r\n\r\n  const user = useSelector(state => state.user)\r\n  const questions = useSelector(state => state.questionlist)\r\n  // console.log('user', user.data.detail)\r\n  // console.log('questionsList', questions.data.detail)\r\n  \r\n  const userId = user.data.detail.id\r\n  const questionsList = questions.data.detail\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  if(Object.keys(questionsList).length != 0){\r\n    questionsList.map((question) => {\r\n      const questionAuthor = parseInt(question.user)\r\n      // console.log(questionAuthor)\r\n        if(userId === questionAuthor){\r\n          myQuestions = [...myQuestions, question]\r\n        }\r\n    })\r\n  }\r\n  // console.log(myQuestions)\r\n\r\n  return (\r\n    <>\r\n      {myQuestions.length === 0 ? \r\n        <div className=\"NanumGothic3\">질문을 등록해주세요</div> :\r\n        \r\n        myQuestions.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst MyQuestionSend = ({session}) => {\r\n  const [ask, setAsk] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const postApi = async(isVoice, askValue) =>  {\r\n    const headers = {\r\n        'Authorization': 'Token ' + localStorage.token\r\n      }\r\n      const data = {\r\n          is_answered: false,\r\n          is_voice: isVoice,\r\n          question: askValue,\r\n      };\r\n      // console.log(data);\r\n      const res = await axios.post(\r\n        \"https://www.ask2live.me/api/hole/\"+session.id + \"/question/create\",\r\n        data,\r\n        {headers:headers}\r\n      );\r\n      dispatch(getQuestionlist(session.id))\r\n}\r\n  return (\r\n    <>\r\n    <div style={{paddingBottom:\"1em\"}}>\r\n    <input\r\n    className=\"BMDOHYEON\"\r\n    type=\"text\"\r\n    maxLength=\"60\"\r\n    value={ask}\r\n    style={style.insert}\r\n    placeholder=\"최대 글자수는 60자입니다.\"\r\n    onChange={(e) => setAsk(e.target.value)}\r\n    />\r\n    <div style={style.submitbtn}>\r\n    <IconButton \r\n        onClick={()=>{\r\n          postApi(false, ask); setAsk(\"\")\r\n          \r\n          }} \r\n        className={classes.iconButton} \r\n        aria-label=\"send\">\r\n        <SendIcon/>\r\n    </IconButton>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst QuestionCard = ({question}) => {\r\n    const classes = useStyles();\r\n    // console.log(question)\r\n    return(\r\n        <>\r\n        <Card key={question.id} className={classes.card}>\r\n          <CardContent>\r\n          <Grid container>\r\n        <div className=\"NanumGothic3\">\r\n          {question.user_profile_image_url?\r\n                <Avatar className={classes.avatar} src={`https://www.ask2live.me${question.user_profile_image_url}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"static/reigns/1.jpg\" />\r\n          }\r\n        </div>\r\n        <div className={classes.questionText}>\r\n        <span className={classes.cardText}>{question.user_username} : {question.question}</span>\r\n        </div>\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//Tab 관련 로직\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n  return (\r\n    <Tab\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst PreQuestionNav = ({session}) => {\r\n  const classes = useStyles();\r\n  const questions = useSelector(state => state.questionlist)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor:\"#35528C\"}}>\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n        <Tab\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          }}\r\n          {...a11yProps(0)}\r\n          label={<span className={classes.labelBMJUA}>등록된 질문</span>}/>\r\n          <Tab\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          }}\r\n          {...a11yProps(1)}\r\n          label={<span className={classes.labelBMJUA}>질문하기</span>}/>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      {questions.data.detail.length === 0 ? \r\n        <div className=\"NanumGothic3\">질문을 등록해주세요</div> :\r\n        \r\n        questions.data.detail.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <MyQuestionSend session={session} />\r\n        <MyQuestionCards questions={questions} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreQuestionNav","import React, {useEffect, useState} from \"react\";\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PreQuestionNav from './PreQuestionNav'\r\nimport MypageNav from '../mypage/MypageNav'\r\nimport getQuestionlist from \"../../actions/QuestionListActions\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport { Progress, Badge, Divider } from 'antd';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Moment from \"react-moment\";\r\nimport \"../../styles/style.css\";\r\nimport \"../../App.css\";\r\nimport { QUESTIONLIST_DELETE } from \"../../actions/types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      display: 'flex',\r\n      maxWidth: \"70em\",\r\n      minWidth: \"18em\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    avatar : {\r\n      width: theme.spacing(10.5),\r\n      height: theme.spacing(10.5),\r\n      transform: \"translate(0.4em,-4.85em)\"\r\n      // opacity: 0.7,\r\n    },\r\n    title : {\r\n      paddingLeft: \"1em\",\r\n      fontFamily: \"BMJUA\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1.8em\",\r\n      paddingTop: \"0.8em\",\r\n      paddingBottom: \"1em\",\r\n    },\r\n    time : {\r\n      paddingLeft: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      fontFamily: \"BMJUA\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1em\",\r\n    },\r\n    desc : {\r\n      display: \"flex\",\r\n      flexDirection: 'column',\r\n      paddingLeft: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      fontFamily: \"BMJUA\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1em\",\r\n    },\r\n    progress : {\r\n      transform: \"translate(-1em,1em)\"\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst SessionDetail = ({session}) => {\r\n  const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    if(session === undefined){\r\n      return(\r\n        <>\r\n        로딩중\r\n        </>\r\n      )\r\n    }\r\n    return(\r\n        <>\r\n        <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n        <p className={classes.title}>{session.title}</p>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        <Progress \r\n          className={classes.progress}\r\n          strokeWidth=\"5\"\r\n          type=\"dashboard\"\r\n          strokeColor=\"#F24822\"\r\n          gapDegree = \"85\"\r\n          width={100}\r\n          format={percent => {\r\n            // 여기 수정 필요\r\n            if(percent == 100){\r\n              return(\r\n                <>\r\n                {session.host_profile_image?\r\n                <Avatar className={classes.avatar} src={`https://www.ask2live.me${session.host_profile_image}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"/static/reigns/1.jpg\" />\r\n              }\r\n                  \r\n                </>\r\n              )\r\n            }else{\r\n              return(\r\n                <>\r\n                  {session.host_profile_image?\r\n                <Avatar className={classes.avatar} src={`https://www.ask2live.me${session.host_profile_image}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"static/reigns/1.jpg\" />\r\n              }\r\n                </>\r\n              )}\r\n            \r\n            }}\r\n          percent={(session.hole_reservations) ? \r\n                  Math.ceil(\r\n                    session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                    session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0}/>\r\n        </Grid>\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n          <div className={classes.time}>라이브 예정 일자 : {``}\r\n            <Moment format=\"MM월 DD일 A h:mm\">\r\n                  {session.reserve_date}\r\n            </Moment></div>\r\n\r\n\r\n          <div className={classes.desc}>라이브 주제 : {``} {session.description}</div>\r\n\r\n        </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ListPreQuestions = ({questions, session}) => {\r\n    // console.log('qestions', questions)\r\n    return(\r\n        <>\r\n        <PreQuestionNav session={session}/>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst PreQuestions = () => {\r\n    const dispatch = useDispatch()\r\n    const questions = useSelector(state => state.questionlist)\r\n    const sessions = useSelector(state => state.session.data)\r\n    let targetSession = {};\r\n\r\n    const href = window.location.href\r\n    const sessionId = parseInt(href.split('/')[4])\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        sessions.map((session) => {\r\n          // console.log('DEBUG22',session)\r\n            if(sessionId === session.id){\r\n                targetSession = {...targetSession, session}\r\n            }\r\n        })\r\n      }\r\n    useEffect(() => {\r\n      if(Object.keys(questions.data).length === 0){\r\n        dispatch(getQuestionlist(sessionId))\r\n      }\r\n    })\r\n    \r\n    return (\r\n            <>\r\n        <MypageNav text={'Live Q&A 질문방'} />\r\n        {/* <div style={{position : \"absolute\", height:\"12em\", width: \"100%\", backgroundColor:\"skyblue\"}}>{\"\"}</div> */}\r\n        <div style={{display:\"flex\", justifyContent:\"center\", position:\"absolute\", top:\"9%\" , width:\"100%\"}}>\r\n          <div style={{width:\"100%\", maxWidth:\"50em\"}}>\r\n          <SessionDetail session={targetSession.session}/>\r\n          {Object.keys(questions.data).length > 0 ? <ListPreQuestions questions={questions} session={targetSession.session}/> : null}\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n  \r\n}\r\nexport default PreQuestions;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(channelNum){\r\n    return axios.get('https://www.ask2live.me/api/hole/live/read/' + channelNum);\r\n}\r\n\r\nconst getEnteredSession = channelNum => dispatch => {\r\n    console.log('-----getEnteredSession-----')\r\n    dispatch({type: ENTEREDSESSION_GET_PENDING}); \r\n\r\n\r\n    return getApi(channelNum).then(\r\n        (response) => {\r\n            console.log(response);\r\n            dispatch({ type: ENTEREDSESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ENTEREDSESSION_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getEnteredSession;","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      margin: \"3%\",\r\n      maxWidth: \"50em\",\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    },\r\n    cardContent: {\r\n      height: \"30px\",\r\n    },\r\n    cookieWrapper: {\r\n      backgroundColor:\"#EEAC4B\",\r\n      float: \"left\",\r\n      marginLeft: \"2%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      overflow: \"hidden\",\r\n    },\r\n    useCookie: {\r\n      float: \"left\",\r\n      margin: \"auto\",\r\n      backgroundImage: \"url('/static/cookieMould.png')\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      overflow: \"hidden\",\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    participant : {\r\n        width: \"100%\",\r\n        maxWidth: \"30em\",\r\n        padding: \"10px\",\r\n    },\r\n    tmp: {\r\n        float: \"left\",\r\n        marginLeft : \"2%\",\r\n    },\r\n    follow: {\r\n        float : \"right\",\r\n        width: \"5em\",\r\n        height:\"5em\",\r\n        backgroundColor:\"pink\",\r\n    }\r\n}\r\n\r\nconst Participant = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\">\r\n                <Card style={style.participant} className={classes.root}>\r\n                    <div\r\n                        style={{backgroundImage: props.profileImage ? \"url('https://www.ask2live.me\" + props.profileImage +\"')\" : \"url('/static/reigns/1.jpg')\" }}\r\n                        className={classes.cookieWrapper}\r\n                    >\r\n                        <div className={classes.useCookie}></div>\r\n                    </div>\r\n                    <div style={style.tmp}>\r\n                        <p style={{marginBottom:\"5px\"}}>{props.nickName}</p>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {props.workCompany ? \r\n                            <>\r\n                             {props.workCompany} |\r\n                            </>\r\n                             : null}\r\n                            {props.workField ? \r\n                            <>\r\n                             {\" \" + props.workField}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !props.workCompany && !props.workField ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                    {/* <div style={style.follow}>follow</div> */}\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Participant;","import React, {useState, useEffect} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Participant from \"./Participant\"\r\nimport axios from \"axios\"\r\n\r\nconst style = {\r\n    participantlist : {\r\n        width: \"100%\",\r\n        borderRadius : \"15px\",\r\n        padding: \"0\",\r\n    }\r\n}\r\n\r\nconst ParticipantList = (props) => {\r\n\r\n    const participants = useSelector(state => state.enteredSession);\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={{display:\"flex\", position:\"absolute\", height:\"9%\", alignItems:\"flex-end\", justifyContent:\"center\" }}>\r\n\r\n            <p className=\"NanumGothic3\" style={{borderBottom:\"1px solid black\", margin:\"0\"}}>\r\n                {participants.arrived?\r\n                    participants.data.detail.participant.length+\"명이 듣고 있어요\"\r\n                    :\r\n                    <></>\r\n                }\r\n            </p>\r\n        </div>\r\n            <Paper style={style.participantlist} elevation={0}>\r\n                <div style={{position:\"absolute\", top: \"10%\", height:\"90%\", width:\"100%\", overflow:\"auto\"}}>\r\n                    {participants.arrived ? \r\n                        participants.data.detail.participant.map((participant) => \r\n                        <Participant \r\n                        nickName={participant.username}\r\n                        workField={participant.work_field}\r\n                        workCompany={participant.work_company}\r\n                        profileImage={participant.profile_image_url}/>)\r\n                        : \r\n                        <p>로딩중</p>}\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ParticipantList;","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst style = {\r\n    audience1 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,1)\"\r\n    },\r\n    audience2 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,0.6)\"\r\n    },\r\n    paper : {\r\n        position: \"absolute\",\r\n        width: \"90%\",\r\n        height : \"100%\",\r\n        maxWidth:\"30em\",\r\n        backgroundColor: \"red\",\r\n        borderRadius: \"30px 30px 30px 30px \"\r\n    },\r\n    card : {\r\n        transform:\"translate(-1px, -1px)\",\r\n        position: \"absolute\",\r\n        width: \"90%\",\r\n        maxWidth:\"30em\",\r\n        borderRadius : \"30px 30px 0 0\",\r\n        backgroundColor: \"#EF5941\",\r\n        height: \"20%\",\r\n        // height: \"20px\",\r\n        zIndex:\"3\",\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n        // padding: \"3px\",\r\n    },\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n    root2: {\r\n    maxWidth: \"30em\",\r\n    height:\"inherit\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"90%\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: \"inherit\",\r\n        // height: \"70px\",\r\n        borderRadius : \"30px\",\r\n        border: \"1px solid #EF5941\",\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst StringQuestion = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let questionStr = props.userQuestion;\r\n    const [finish, setFinish] = useState(false);\r\n    const [btnDisable, setBtnDisable] = useState(false);\r\n\r\n\r\n    return (\r\n      \r\n        <>\r\n        <div style={{\r\n            zIndex:\"2\", \r\n            alignItems: \"center\", \r\n            justifyContent:\"center\",\r\n            display:\"flex\", \r\n            position:\"absolute\", \r\n            // backgroundColor:\"skyblue\",\r\n            height:\"95%\", \r\n            width:\"100%\"}}>\r\n\r\n \r\n\r\n            <div className={classes.root2}>\r\n                <Paper>\r\n                    <div style={style.card}>\r\n                            <div \r\n                            style={{\r\n                            position:\"absolute\", \r\n                            display:\"flex\", \r\n                            alignItems:\"center\", \r\n                            height:\"100%\", \r\n                            marginLeft: \"1.5em\"}}>\r\n                                <div style={{display:\"inline-block\"}}>\r\n                                    <Avatar src={props.imageLink? \"https://www.ask2live.me\" + props.imageLink : \"/static/reigns/1.jpg\"} className={classes.small}/>\r\n                                </div>\r\n                                <span\r\n                                style={{marginLeft:\"6px\", marginTop:\"3px\", color:\"white\"}}\r\n                                className=\"BMJUA\"\r\n                                >{props.userNickName}\r\n                                </span>\r\n                                <span\r\n                                style={{marginLeft: \"5px\", fontSize: \"0.8em\", color:\"white\"}}\r\n                                >님의 질문\r\n                                </span>\r\n                            </div>\r\n                    </div>\r\n                    <div \r\n                    className=\"currQuestion\">\r\n                        <span className=\"Gmarket2\">{questionStr}</span> \r\n                    </div>\r\n\r\n                 \r\n                </Paper>\r\n            </div>\r\n            <div style={{position:\"absolute\", bottom:\"-3%\", height:\"20%\", width:\"100%\", display:\"flex\", alignItems:\"center\",justifyContent:\"center\"}}>\r\n                {props.isHost?\r\n                <button\r\n                className=\"NanumGothic3\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent:\"center\",\r\n                    position:\"absolute\", \r\n                    transform:\"translate(0, 0px)\",\r\n                    zIndex: \"3\",\r\n                    height:\"100%\", \r\n                    width: \"6em\", \r\n                    backgroundColor: \"#3B3B3B\",\r\n                    fontSize:\"0.7em\",\r\n                    borderRadius:\"16px\",\r\n                    color:\"#EF5941\",\r\n                    border:\"1px solid #EF5941\",\r\n                    zIndex:\"3\",\r\n                }}\r\n                disabled={btnDisable}\r\n                onClick={()=>{\r\n                    setBtnDisable(true)\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setFinish(true)\r\n                    setTimeout(()=>{setFinish(false); setBtnDisable(false)}, 4000)             \r\n                }}\r\n            >{finish ? \r\n            <div className=\"loadingCircle\"></div> \r\n            :  \r\n            \"답변완료\"\r\n            }</button>\r\n                :\r\n                <></>\r\n                }\r\n            </div>\r\n                \r\n        </div>\r\n        </>\r\n        \r\n\r\n\r\n\r\n\r\n//---------------------------------------------------\r\n\r\n\r\n        // <>\r\n        // <div style={{margin: \"0em 0em 0.5em 1em\", display:\"flex\"}}>\r\n        //     <Avatar src={props.hostImage} className={classes.small}/>\r\n        //     <span style={style.audience1} className=\"NanumGothic\">{props.userNickName}</span>\r\n        //     <span style={style.audience2} className=\"NanumGothic\">님의 질문</span>\r\n        //     {props.isHost?\r\n        //     <button\r\n        //     onClick={()=>{props.onAnswered(props.currentQuestionId)}}\r\n        //     >완료</button>\r\n        //     :\r\n        //     <></>\r\n        //     }\r\n        // </div>\r\n        // {console.log(questionStrAry)}\r\n        // {\r\n        //     questionStrAry.map((questionUnit) => \r\n        //     <>\r\n        //         <p style={style.cloud} className=\"BMJUA\">{questionUnit}</p><br/>\r\n        //     </>\r\n        //     )\r\n        // }\r\n\r\n        // </>\r\n    )\r\n    \r\n}\r\n\r\nexport default StringQuestion;","import React from \"react\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9),\r\n        zIndex:\"1\",\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst style = {\r\n    circle : {\r\n        border : \"solid 1px rgba(255, 255, 255, .3)\",\r\n        borderRadius : \"100%\",\r\n    }\r\n}\r\n\r\nconst UserAvatar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <div style={style.circle}>\r\n            <div className={classes.root}>\r\n                <Avatar alt={props.hostName} src={props.imageLink ? \"https://www.ask2live.me\"+props.imageLink : \"/static/reigns/1.jpg\"} className={classes.large}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserAvatar\r\n\r\n\r\n\r\n","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport Avatar from \"../Avatar\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport \"../../styles/style.css\"\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent:\"center\",\r\n        '& > *': {\r\n          margin: theme.spacing(0),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst VoiceQuestion = (props) => {\r\n    console.log(\"무야호\", props)\r\n    const classes = useStyles();\r\n    const [click, setClick] = useState(false)\r\n    const [clickStyle, setClickStyle] = useState({color: \"#EF5941\"})\r\n    const [finish, setFinish] = useState(false);\r\n    const [exitClick, setExitClick] = useState(false);\r\n\r\n    const [hidden, setHidden] = useState(\"0\")\r\n\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setHidden(\"1\")}, 1000);\r\n    })\r\n\r\n    const sendP2PMessage = useCallback((recipientUID, peerMsg) => {\r\n        console.log(\"sendP2PMessage\");\r\n    \r\n        // An RtmMessage object.\r\n        const remoteUID = String(recipientUID);\r\n    \r\n\r\n        // p2p message\r\n        console.log(\"리모트 UID: \", remoteUID);\r\n        console.log(\"리모트 msg: \", peerMsg);\r\n    \r\n        if (peerMsg) {\r\n          (props.rtmClient)\r\n            .sendMessageToPeer({ text: peerMsg }, remoteUID)\r\n            .then((sendResult) => {\r\n              if (sendResult.hasPeerReceived) {\r\n                console.log(\"peer recieved \" + peerMsg + \" successfully\");\r\n\r\n              } else {\r\n                console.log(\"peer did not recieved \" + peerMsg + \" unlog\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"RTM message recieved err\");\r\n            });\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n        <div style={{\r\n            zIndex: \"1\",\r\n            position:\"fixed\",\r\n            top:\"5%\",\r\n            display:\"flex\",\r\n            maxWidth:\"45em\",\r\n            width:\"100%\",\r\n            height:\"25%\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"center\",\r\n            transform:\"translate(25%,71%)\",\r\n            transition : \"opacity 1s\",\r\n            opacity:hidden}}>\r\n\r\n            <div style={{\r\n                zIndex: \"1\",\r\n                marginTop:\"13px\",\r\n                width:\"6em\"}}>\r\n                <div style={{zIndex: \"1\",width:\"5.6em\"}}>\r\n                <Avatar style={{zIndex: \"1\"}} alt={props.userNickName} imageLink={props.imageLink} className={classes.large}/>\r\n                </div>\r\n                <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                    <p className=\"BMDOHYEON\" style={{marginTop:\"5px\", marginLeft:\"-8px\", color:\"rgba(255,255,255,0.8)\"}}>{props.userNickName}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style={{\r\n            transition : \"opacity 1s\",\r\n            opacity:hidden, \r\n            zIndex: \"0\",\r\n            top:\"22.5%\",\r\n            position:\"fixed\", \r\n            height: \"25%\",\r\n            display:\"flex\", \r\n            alignItems:\"center\", \r\n            justifyContent:\"center\", \r\n            width:\"100%\", \r\n            maxWidth:\"45em\"}}>\r\n\r\n            <div style={{}} className=\"voicePlane\">\r\n                <div style={{\r\n                    border: \"1px solid #EF5941\",\r\n                    position:\"absolute\",\r\n                    width:\"100%\",\r\n                    height:\"4em\",\r\n\r\n                }}>\r\n                <div className=\"voicePlaneC1\">\r\n                    <div style={{\r\n                        width :\"1.5em\",\r\n                        height:\"1.5em\",\r\n                        backgroundImage: \"url('/static/wave2.jpg')\",\r\n                        backgroundSize:\"contain\",\r\n                    }}/>\r\n                    {/* <SendIcon/>     */}\r\n                </div> \r\n                <div className=\"voicePlaneC2\">\r\n                    <div style={{\r\n                        width :\"1.5em\",\r\n                        height:\"1.5em\",\r\n                        backgroundImage: \"url('/static/wave2.jpg')\",\r\n                        backgroundSize:\"contain\",\r\n                    }}/>\r\n                    {/* <SendIcon/> */}\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div style={{\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"flex-end\",\r\n            width:\"12em\", \r\n            height:\"145%\"}}>\r\n                {props.isHost?\r\n                <>\r\n                <button\r\n                className=\"audienceLink\"\r\n                disabled={click}\r\n                onClick={()=>{setClickStyle({color:\"grey\"});setClick(true); sendP2PMessage(props.userUid, \"host\")}}\r\n                >\r\n                    <span style={clickStyle} className=\"NanumGothic3\">연결하기</span>\r\n                </button>\r\n                <button\r\n                className=\"linkExit\"\r\n                disabled={exitClick}\r\n                style={{zIndex:\"1\",backgroundColor:\"#3B3B3B\"}}\r\n                onClick={()=>{\r\n                    setClick(true);\r\n                    setFinish(true);\r\n                    setExitClick(true);\r\n                    sendP2PMessage(props.userUid, \"audience\")\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setTimeout(() => {\r\n                        setFinish(false);\r\n                        setExitClick(false);\r\n                        setClick(false);\r\n                        setClickStyle({color:\"#EF5941\"});\r\n                    }, 4000);\r\n                }}\r\n                >\r\n                {   finish?\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <div className=\"loadingCircle\"></div> \r\n\r\n                    </div>\r\n                    :\r\n                    <span style={{color: \"white\"}} className=\"NanumGothic3\">답변완료</span>\r\n\r\n                }\r\n                </button>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VoiceQuestion;","import React, {useState, useCallback} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport StringQuestion from \"./StringQuestion\";\r\nimport VoiceQuestion from \"./VoiceQuestion\";\r\n\r\nconst style = {\r\n    wait : {\r\n        top: \"40%\",\r\n        position: \"absolute\",\r\n        color : \"rgba(255,255,255,0.7)\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        width:\"100%\",\r\n    }\r\n}\r\n\r\nconst CurrentQuestion = (props) => {\r\n    \r\n    const questionPatchApi = async(questionId) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: true,\r\n          };\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/question/update/\"+questionId,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n    const forQuestionidx = useCallback((questionList) => {\r\n        return questionList.findIndex((question => question.is_answered == false))\r\n    })\r\n\r\n\r\n    const questionResponse = useSelector(state => state.questionlist)\r\n\r\n    if (questionResponse.arrived)\r\n    {\r\n        let questionList = questionResponse.data.detail\r\n        if (questionList.length == 0) \r\n            return (\r\n                <>\r\n                <div style={style.wait}>\r\n                 <p>질문이 없습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        let questionIdx = forQuestionidx(questionList);\r\n        //이걸 매번 돌리기엔 비효율적.. useEffect를 쓰면 될까??\r\n        if (questionIdx == -1)\r\n        {\r\n            if (props.liveVoice)\r\n                props.setLiveVoice(false);\r\n            return (\r\n                <>\r\n                <div style={style.wait} className=\"BMJUA\">\r\n                <p>모든 질문이 답변되었습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        }   \r\n        else \r\n        {\r\n            const onAnswered = (questionId) => {\r\n                questionPatchApi(questionId);\r\n            } \r\n\r\n            let currentQuestion = questionList[questionIdx];\r\n            let userNickName = currentQuestion.user_username;\r\n            let isVoice = currentQuestion.is_voice;\r\n            let userUid = currentQuestion.user_uid;\r\n            let imageLink = currentQuestion.user_profile_image_url\r\n\r\n            if (isVoice)\r\n            {\r\n                if (!props.liveVoice)\r\n                    props.setLiveVoice(true)\r\n                return (\r\n                <>\r\n                <VoiceQuestion \r\n                userUid={userUid} \r\n                userNickName={userNickName} \r\n                imageLink={imageLink}\r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered} \r\n                currentQuestionId={currentQuestion.id}\r\n                client={props.client}\r\n                rtmClient={props.rtmClient}\r\n                host={props.host}\r\n                localAudioTrack={props.localAudioTrack}\r\n                remoteUsers={props.remoteUsers}\r\n                channelNum={props.channelNum}\r\n                />\r\n                </>\r\n                )\r\n            }\r\n\r\n            else {\r\n                if (props.liveVoice)\r\n                    props.setLiveVoice(false);\r\n                let userQuestion = currentQuestion.question;\r\n          \r\n                return (\r\n                <StringQuestion \r\n                userNickName={userNickName} \r\n                userQuestion={userQuestion} \r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered}\r\n                currentQuestionId={currentQuestion.id}\r\n                imageLink={imageLink}\r\n                />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    else return (\r\n        <>\r\n        <div style={style.wait}>\r\n            <p> 로딩중 </p>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n\r\n    // if (questionResponse.arrived)\r\n    // {\r\n    //     let questionList = questionResponse.data.detail\r\n    //     if (questionList.length == questionNum) \r\n    //         return <p>질문이 없습니다.</p>\r\n    //     else if (questionList.length != questionNum)\r\n    //     {\r\n    //         let currentQuestion = questionList[questionNum];\r\n    //         let userNickName = currentQuestion.user_nickname;\r\n    //         let isVoice = currentQuestion.is_voice;\r\n    //         if (isVoice)\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userNickName} 음성 질문입니다</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         else {\r\n    //             let userQuestion = currentQuestion.question;\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userQuestion}</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         }\r\n    //     }\r\n    // }\r\n   \r\n}\r\n\r\n\r\nexport default CurrentQuestion","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"100%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n        display: \"\",\r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        float: \"left\",\r\n        height: theme.spacing(10),\r\n        // height: \"70px\",\r\n        borderRadius : \"15px\",\r\n      },\r\n    },\r\n    myPaper : {\r\n        border : \"3px solid white\",\r\n        boxShadow: \"0px 0px 2px 3px black\"\r\n    },\r\n    otherPaper: {\r\n        border : \"2px solid black\",\r\n    }\r\n  }));\r\n\r\nconst style = {\r\n    card : {\r\n        borderRadius : \"15px 15px 0 0\",\r\n        backgroundColor: \"#D95032\",\r\n        height: \"1.5rem\",\r\n        // height: \"20px\",\r\n        padding: \"0.3rem\",\r\n        // padding: \"3px\",\r\n    },\r\n\r\n}\r\n\r\nexport default function SimplePaper(props) {\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n    <>\r\n    {props.isFirst?\r\n    <div style={{marginLeft: \"10px\", marginBottom:\"10px\"}}>\r\n     <div style={{borderRadius:\"100%\", display:\"inline-block\", backgroundColor:\"#d95032\", width:\"10px\", height:\"10px\"}}></div>\r\n    <span className=\"CookieRun\" style={{marginLeft: \"8px\",marginBottom:\"10px\"}}>\r\n       지금 답변중!</span>\r\n    </div>\r\n    :\r\n    null\r\n    }\r\n    <div className={classes.root}>\r\n    <Paper className={props.myQuestion? classes.myPaper : classes.otherPaper} style={props.isVoice? {backgroundColor:\"#D95032\"} : null} elevation={2} >\r\n        <div style={style.card}>\r\n            <p style={{margin:\"4px 0 0 4px\", padding :\"0\"}}className=\"BMDOHYEON\">{props.userName}</p>\r\n        </div>\r\n        <div className=\"questionWrap\">\r\n            <p style={{margin:\"4px 0 0 8px\", padding :\"0\"}}className=\"NanumGothic2\">{props.value}</p>\r\n        </div>\r\n    </Paper>\r\n    </div>\r\n    {props.isFirst? \r\n    <>\r\n    <div style={{width:\"100%\", borderBottom:\"1px solid rgba(0, 0, 0, 0.5)\"}}/>\r\n    <br/>\r\n    </>\r\n    :\r\n    null\r\n    }\r\n    </>\r\n);\r\n}","import React, { useState }from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BorderColor } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Question from \"./Question\"\r\nimport \"../../styles/style.css\" \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: \"95%\",\r\n      '& > *': {\r\n        overflow: \"hidden\",\r\n        margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: theme.spacing(10),\r\n        // height: \"75px\",\r\n        backgroundColor: \"rgba(192, 0, 0, 0)\",\r\n      },\r\n      zIndex: \"3\",\r\n    },\r\n    border: {\r\n        borderRadius: \"15px\",\r\n        padding : \"0.5em\",\r\n        // padding : \"3px\",\r\n    }\r\n  }));\r\n\r\nexport default function QuestionSwiper(props) {\r\n\r\n    const classes = useStyles();\r\n    const [transStyle, setTransStyle] = useState({\r\n        transform : \"translate(0, 0)\",\r\n    })\r\n\r\n    // const handleTrans = () => {\r\n    //     setTransStyle\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.root}>\r\n        <Paper className={classes.border} elevation={0}>\r\n            <Grid style={transStyle} className=\"trans\" container justify=\"center\">\r\n                <Question isHost={props.isHost} userName=\"미\" value=\"무\" nextmove={()=>{setTransStyle({transform : \"translate(0, -6em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"어\" value=\"야\" nextmove={()=>{setTransStyle({transform : \"translate(0, -12em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"캣\" value=\"호\" nextmove={()=>{setTransStyle({transform : \"translate(0, -18em)\"})}}/>\r\n            </Grid>\r\n    \r\n        </Paper>\r\n        </div>\r\n        </>\r\n    );\r\n}","import { useSelector } from \"react-redux\" \r\nimport React, { useState }from 'react';\r\nimport Question from \"./Question\";\r\nimport axios from \"axios\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst style ={\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        bottom: \"90%\",\r\n        width: \"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\n\r\nconst QuestionList = (props) => {\r\n\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid black\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    const questionAry = useSelector(state => state.questionlist)\r\n    const myName = useSelector(state => state.user.data.detail.username)\r\n    console.log(myName);\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{setClick2(); setClick1({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">등록된 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{setClick1(); setClick2({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">답변된 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        \r\n        {click1 ?\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ? \r\n            questionAry.data.detail.findIndex((questionInfo) => !(questionInfo.is_answered)) === -1 ?\r\n            <div style={{display:\"flex\", justifyContent:\"center\", width:\"100%\", maxWidth:\"45em\"}}>\r\n                <p className=\"CookieRun\">등록된 질문이 없습니다</p>\r\n            </div>\r\n            :\r\n                questionAry.data.detail.map((questionInfo) =>\r\n                    questionInfo.is_answered ?\r\n                        null\r\n                    :\r\n                        questionInfo.user_username === myName?\r\n                        <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}\r\n                        isFirst={questionInfo === questionAry.data.detail[questionAry.data.detail.findIndex((value) => value.is_answered === false)]}/>\r\n                        :\r\n                        <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}\r\n                        isFirst={questionInfo === questionAry.data.detail[questionAry.data.detail.findIndex((value) => value.is_answered === false)]}/>\r\n                )\r\n\r\n                : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        :\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ?\r\n            questionAry.data.detail.findIndex((questionInfo) => questionInfo.is_answered) === -1 ?\r\n            <div style={{display:\"flex\", justifyContent:\"center\", width:\"100%\", maxWidth:\"45em\"}}>\r\n                <p className=\"CookieRun\">아직 답변된 질문이 없습니다.</p>\r\n            </div>\r\n            :\r\n                questionAry.data.detail.map((questionInfo) =>\r\n                    questionInfo.is_answered ?\r\n                        questionInfo.user_username === myName?\r\n                        <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}/>\r\n                        :       \r\n                        <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}/>\r\n                    :\r\n                        null\r\n                )\r\n\r\n                : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionList","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport useSelection from \"antd/lib/table/hooks/useSelection\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        maxWidth: \"42em\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"95%\",\r\n      bottom: \"0%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: \"11em\",\r\n        // height: \"70px\",\r\n        borderRadius : \"30px\",\r\n        border: \"1px solid #EF5941\",\r\n      },\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    paper : {\r\n        position: \"absolute\",\r\n        bottom:\"0%\",\r\n        width: \"100%\",\r\n        height : \"100%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"30px 30px 0 0 \"\r\n    },\r\n    questionbutton : {\r\n        width : \"100%\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        position: \"absolute\",\r\n        top : \"-0.7em\",\r\n        zIndex:\"3\",\r\n        height:\"1px\",\r\n    },\r\n    card : {\r\n        transform:\"translate(-1px, -1px)\",\r\n        paddingTop:\"4px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        maxWidth:\"42em\",\r\n        borderRadius : \"30px 30px 0 0\",\r\n        backgroundColor: \"#EF5941\",\r\n        height: \"3em\",\r\n        // height: \"20px\",\r\n        zIndex:\"3\",\r\n        // padding: \"3px\",\r\n    },\r\n    submitbtn : {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        right: \"1em\",\r\n        width: \"10%\",\r\n        top: \"0.5em\",\r\n        height: \"2.4em\",\r\n        zIndex: \"3\",\r\n    },\r\n    insert : {\r\n        marginTop: \"10px\",\r\n        display : \"block\",\r\n\r\n        top: \"4em\",\r\n        left : \"10px\",\r\n        height: \"7em\",\r\n        width:\"90%\",\r\n        border : \"none\",\r\n    },\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        top:\"0%\",\r\n        zIndex:\"3\",\r\n        width:\"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\nconst Questioning = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ask, setAsk] = useState(\"\")\r\n    const [voice, setVoice] = useState(true)\r\n    const [queStyle, setQueStyle] = useState({opacity: \"1\"})\r\n\r\n    const myInfo = useSelector(state => state.user);\r\n\r\n\r\n\r\n    const pressEnter = (e) => {\r\n        if (e.key == 'Enter'){\r\n            postApi(false, ask);\r\n            setAsk(\"\")\r\n            props.openQuestionAlert();\r\n            props.goQueUp({transform : \"translate(0, 100%)\"});\r\n            props.goDark({opacity: \"0\", animation: \"golight 0.7s\"});\r\n            setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n        }\r\n    }\r\n\r\n    const voiceClick = () => {\r\n        if (voice)\r\n        {\r\n            setQueStyle({opacity: \"0\", display : \"none\"}) \r\n            // setTimeout((()=>setQueStyle({display: \"none\"})),1000)\r\n        }\r\n        else\r\n            setQueStyle({opacity: \"1\"})\r\n            // setTimeout((()=>setQueStyle({display:\"flex\"})),1000)\r\n        setVoice(prevVoice => !prevVoice)\r\n    }\r\n\r\n    const postApi = async(isVoice, askValue) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: false,\r\n              is_voice: isVoice,\r\n              question: askValue,\r\n          };\r\n          console.log(data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId + \"/question/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n    }\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid #EF5941\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td style={{width:\"50%\"}}>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{\r\n                    setVoice(true); \r\n                    setQueStyle({opacity: \"1\"});\r\n                    setClick2(); \r\n                    setClick1({borderBottom:\"2px solid #EF5941\"})}}\r\n                className=\"Gmarket3\">음성 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{\r\n                    setVoice(false); \r\n                    setQueStyle({opacity: \"0\", display : \"none\"}) ;\r\n                    setClick1(); \r\n                    setClick2({borderBottom:\"2px solid #EF5941\"})}}\r\n                className=\"Gmarket3\">텍스트 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        <Paper style={style.paper} elevation={0}>\r\n            <Grid container justify=\"center\">\r\n                <div className={classes.root}>\r\n                    <Paper elevation={0} >\r\n                        <div style={style.card}>\r\n                            {\r\n                                myInfo.arrived?\r\n        \r\n                                <div \r\n                                style={{position:\"absolute\", marginLeft: \"1.5em\", marginTop: \"0.7em\"}}>\r\n                                    <span\r\n                                    style={{color:\"white\"}}\r\n                                    className=\"BMJUA\"\r\n                                    >{myInfo.data.detail.username}</span>\r\n                                    <span\r\n                                    style={{marginLeft: \"5px\", fontSize: \"0.8em\", color:\"white\"}}\r\n                                    >님의 질문</span>\r\n                                </div>\r\n    \r\n                                :\r\n                                <span> 로딩중 </span>\r\n                            }\r\n                        </div>\r\n                        <div style={queStyle} className=\"QuestioningWrapper\">\r\n                            <p className=\"Gmarket1\" style={{margin:\"2em 0 0 0\", color: \"white\", fontSize:\"1em\"}}>\r\n                                음성으로 물어볼래요!\r\n                            </p>\r\n                            <p className=\"NanumGothic2\" style={{margin:\"1em 0 0 0\",color: \"white\", fontSize:\"0.7em\"}}>\r\n                                차례가 됐을 때 호스트가\r\n                            </p>\r\n                            <p className=\"NanumGothic2\" style={{margin:\"0\",color: \"white\", fontSize:\"0.7em\"}}>\r\n                                음성권한을 부여할 수 있습니다\r\n                            </p>\r\n                        </div>\r\n                        <div style={{\r\n                            display: \"flex\", justifyContent:\"center\",\r\n                            width:\"100%\", height:\"8em\", transform:\"translate(0, 3em)\"}}>\r\n                            <textarea\r\n                            value={ask}\r\n                            style={style.insert}\r\n                            className=\"Gmarket2\"\r\n                            placeholder=\"질문을 입력하세요!\"\r\n                            maxLength=\"99\"\r\n                            onChange={(e) => setAsk(e.target.value)}\r\n                            onKeyPress={pressEnter}\r\n                            />\r\n                        </div>\r\n                        <div style={style.submitbtn}>\r\n                        <IconButton\r\n                            style = {{color: \"white\", fontSize: \"1em\"}}\r\n                            onClick={()=>{\r\n                                if (voice)\r\n                                {\r\n                                    postApi(true, \"(음성 질문입니다)\"); \r\n                                    setAsk(\"\");\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }\r\n                                else if (!voice && ask.length >= 1)\r\n                                {\r\n                                    postApi(false, ask); setAsk(\"\")\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }}}\r\n                            className=\"BMJUA\" \r\n                            aria-label=\"send\">\r\n                            등록\r\n                        </IconButton>\r\n                        </div>\r\n                        <div style={{display:\"block\", zIndex: \"1\"}}>\r\n                        <span style={{\r\n                            fontSize: \"13px\", position:\"absolute\", zIndex:\"1\", right:\"0\", bottom:\"0\", transform:\"translate(-2.5em, -0.5em)\"\r\n                        }}>{ask.length}/100</span>\r\n\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </Grid>\r\n        <div style={style.questionbutton}>\r\n            <IconButton style={{transform:\"translate(0, 1em)\"}} onClick={()=>{props.goQueUp({transform : \"translate(0, 100%)\"}); props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{props.goDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseQuestioning fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n        </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questioning","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\";\r\n\r\nimport ParticipantsButton from '@material-ui/icons/Group';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport QuestionListButton from '@material-ui/icons/FormatListBulleted';\r\nimport QuestionButton from '@material-ui/icons/ContactSupport';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { SportsRugbySharp } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"#3B3B3B\",\r\n    boxShadow: \"none\",\r\n    width: \"100%\",\r\n    height: \"2.5em\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  root2: {\r\n    padding: '0 0 0 10px',\r\n    margin : \"0\",\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n    boxShadow: \"none\",\r\n    Width : \"6em\",\r\n    height: \"2.5em\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    // backgroundColor: \"#D95032\",\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n    backgroundColor: \"#3B3B3B\",\r\n    flex: 1,\r\n  },\r\n  divider: {\r\n    height: 35,\r\n    margin: 4,\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    questioningBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        marginRight:\"5px\", \r\n        backgroundImage:\"url('/static/questionPlus.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      },\r\n    questionListBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/questionList.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n    participantBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/participant.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n}\r\n\r\nexport default function CustomizedInputBase(props) {\r\n\r\n    const dispatch = useDispatch();\r\n   const classes = useStyles();\r\n\r\n  const pressEnter = (e, length) => {\r\n      if (e.key == 'Enter'){\r\n          if (length >= 1)\r\n          props.goMessageSend();\r\n      }\r\n  }\r\n  return (\r\n      <>\r\n    <Paper className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"내용 입력하기\"\r\n        value={props.message}\r\n        onChange={(e) =>\r\n          {\r\n            if(e.target.value.length > 100)\r\n              alert('100자 이내로 입력이 가능합니다')\r\n            props.goSetMessage(e.target.value.substring(0, 100))}\r\n          }\r\n        onKeyPress={(e) => {pressEnter(e, props.message.length)}}\r\n      />\r\n        <IconButton onClick={()=>{\r\n            if(props.message.length >= 1)\r\n                props.goMessageSend() \r\n        }} \r\n            aria-label=\"send\">\r\n        <SendIcon style={{color:\"white\"}}/>\r\n      </IconButton>\r\n    </Paper>\r\n    <Paper className={classes.root2}>\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      {props.isHost?\r\n        <IconButton\r\n        style={style.participantBtn}\r\n        aria-label=\"participants\" \r\n        onClick={()=>{dispatch(getEnteredSession(props.channelNum)); props.goUserUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}}>\r\n        </IconButton>\r\n      :\r\n      <IconButton \r\n      onClick={()=>{props.goQueUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton} aria-label=\"question\"\r\n      style={style.questioningBtn}\r\n      >\r\n        {/* <QuestionButton/> */}\r\n      </IconButton>\r\n      }\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      <IconButton \r\n      style={style.questionListBtn}\r\n      onClick={()=>{console.log(\"press button\"); props.goListUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton2} aria-label=\"question_list\">\r\n        {/* <QuestionListButton/> */}\r\n      </IconButton>\r\n    </Paper>\r\n    </>\r\n  );\r\n}","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Comment, Tooltip } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Message = memo(props => {\r\n  const { message: { sender, sent_timestamp, text } } = props;\r\n\r\n\r\n  return (\r\n\r\n    <div style={{display:\"flex\", width: \"100%\"}}>\r\n        <div style={{color: \"rgba(255,255,255,0.5)\", display:\"flex\", width: \"9em\", margin: \"0 1em 15px 0\"}}>\r\n            {sender}\r\n        </div>\r\n        <div style={{position:\"relative\", width: \"100%\", maxWidth : \"37em\", display:\"flex\", wordBreak: \"break-all\" , textAlign: 'left' }}>\r\n         {text}\r\n        </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Empty, Card } from 'antd';\r\n\r\nconst EmptyScreen = props => {\r\n  return (\r\n    <Card className='empty-screen-container' style={props.containerStyle}>\r\n      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={props.description} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nEmptyScreen.propTypes = {\r\n  description: PropTypes.string,\r\n  containerStyle: PropTypes.object\r\n}\r\n\r\nexport default EmptyScreen;","import React, { useRef, useState, useEffect, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, PageHeader, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\nimport MessageInput from './MessageInput';\r\nimport EmptyScreen from './EmptyScreen';\r\nimport Spinner from './Spinner';\r\nimport { onRoomMessagesRead } from '../../../actions/MessagesActions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport InsertField from \"../InsertField\"\r\nimport \"../../../styles/style.css\"\r\nimport { useCacheErrors } from 'antd/lib/form/util';\r\n// import List from '@material-ui/core/List';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst windowPadding = 325;\r\n\r\nconst style = {\r\n    InsertfieldWrapper: {\r\n        position: \"fixed\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        justifyContainer : \"center\",\r\n        height : \"4.5em\",\r\n        bottom:\"0%\",\r\n        width: \"90%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"43em\",\r\n        zIndex:\"8\",\r\n    },\r\n    Insertfield:{\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        left : \"0%\",\r\n        width: \"100%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"44em\",\r\n        zIndex:\"8\",\r\n    },\r\n    top : {\r\n        zIndex:\"2\",\r\n        position : \"absolute\",\r\n        top : \"15%\",\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\",\r\n      flexDirection: \"column\",\r\n      color:\"rgba(239, 89, 65, 0.6)\",\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Chat = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let currentUrl = window.location.href;\r\n    console.log(\"Chat Url : \", currentUrl);\r\n    const params1 = currentUrl.split('?')\r\n    const params2 = params1[1].split('&')\r\n    const params3 = params2[1].split('=')\r\n    const roomId = params3[1]\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        let element = document.querySelector(\".chatting\");\r\n        if (element) {\r\n\r\n          element.scrollTop = element.scrollHeight ? element.scrollHeight : 0;\r\n        }\r\n        console.log(\"Here\");\r\n    }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [roomSocket, setRoomSocket] = useState(null);\r\n\r\n  // const roomId = \"c9c9dd9bb\";\r\n\r\n  \r\n  const { messages: { messages, loading: loadingChat }, username,  onRoomMessagesRead } = props;\r\n  const { room, windowHeight, onBack} = props;\r\n  \r\n\r\n  const user = useSelector(state => state.user.data.detail);\r\n\r\n  useEffect(() => {\r\n      roomSocket && roomSocket.close();\r\n      setRoomSocket(onRoomMessagesRead(roomId)); //세션에 관한 정보 중에서 session.id를 넣으면 채팅방이 구분됨\r\n      // 채팅 올라오는 속도 조절은 타임아웃으로.. \r\n      setTimeout(scrollToBottom,500);  \r\n    }, [room]);\r\n    \r\n    const onMessageSend = () => {\r\n      if (roomSocket) {\r\n        roomSocket.send(JSON.stringify({ command: 'new_message', data: { text: message, sender: user.username } }));\r\n        setMessage('');\r\n        setTimeout(scrollToBottom,300);\r\n      }\r\n    }\r\n\r\n    const handleInfiniteOnLoad = () => {\r\n        setLoading(true);\r\n        messages.length > 14 && setLoading(false) && setHasMore(false);\r\n    };\r\n    \r\n  const renderList = () => {\r\n    if (loadingChat) return  (\r\n        <>\r\n    <Grid style={style.top} container justify=\"center\">\r\n        <div  className={classes.root}>\r\n            <CircularProgress color=\"inherit\"/>\r\n            <p style={{color:\"black\", margin:\"5px 0 0 0\"}}>Loading Chat</p>\r\n        </div>\r\n    </Grid>\r\n        </>\r\n    )\r\n\r\n    if (!messages.length) return <EmptyScreen description='' containerStyle={{ borderWidth: 0 }} />;\r\n\r\n    return (\r\n        <>\r\n      <div className=\"chatting\">\r\n        <List\r\n          className=\"comment-list NanumGothic3\"\r\n          itemLayout=\"horizontal\"\r\n          dataSource={messages}\r\n          renderItem={message => <Message key={message.id.toString()} message={message} />}\r\n        >\r\n        {/* <List>\r\n            {messages.map((message => <Message key={message.id.toString()} message={message} />))} */}\r\n        </List>\r\n          {loading && hasMore && <div className=\"loading-container\"><Spin /></div>}\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nreturn (\r\n    <React.Fragment>\r\n      \r\n      <div style={{ height: windowHeight - windowPadding }}>\r\n        {renderList()}\r\n\r\n      </div >\r\n        <Grid container justify=\"center\">\r\n\r\n        <div style={style.InsertfieldWrapper}>\r\n            <div style={style.Insertfield}>\r\n                    <InsertField\r\n                    holeId={props.holeId}\r\n                    channelNum={props.channelNum} \r\n                    isHost={props.isHost} \r\n                    message={message} \r\n                    goSetMessage={setMessage} \r\n                    goMessageSend={onMessageSend} \r\n                    goListUp = {props.goListUp} \r\n                    goDark={props.goDark} \r\n                    goQueUp={props.goQueUp}\r\n                    goUserUp={props.goUserUp}/>\r\n            </div>\r\n        </div>\r\n        </Grid>\r\n      {/* <MessageInput message={message} onChange={e => setMessage(e.target.value)} onSendClick={onMessageSend} /> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nChat.propTypes = {\r\n  room: PropTypes.object.isRequired,\r\n  messages: PropTypes.object.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  windowHeight: PropTypes.number,\r\n  onBack: PropTypes.func,\r\n  onRoomMessagesRead: PropTypes.func.isRequired\r\n}\r\n\r\n//상태를 연결시키는 함수는 mapStateToTrops로 만들어서 connect에 전달해준다.\r\n//Store 안의 state 값을 props로 연결해준다.\r\nconst mapStateToProps = state => {\r\n  const { messages } = state;\r\n  const { username } = state.user;\r\n  return { username, messages };\r\n}\r\n\r\n// chat 컴포넌트를 어플리케이션의 데이터 레이어와 묶는 역할을 한다.\r\n// 함수가 여러개였다면 mapDispatchProps로 연결해줘야했을듯\r\nexport default connect(mapStateToProps, { onRoomMessagesRead })(Chat);","import ReconnectingWebSocket from 'reconnecting-websocket';\r\nimport { WS_ENDPOINT } from '../environment';\r\nimport { ON_MESSAGES_VALUE_CHANGE, ON_MESSAGES_READING, ON_MESSAGES_READ } from './types';\r\n\r\n//export const onMessagesValueChange = data => ( console.log('data',data));\r\nexport const onMessagesValueChange = data => ({ type: ON_MESSAGES_VALUE_CHANGE, payload: data });\r\n\r\nexport const onRoomMessagesRead = holeId => dispatch => {\r\n  dispatch({ type: ON_MESSAGES_READING });\r\n\r\n  const socket = new ReconnectingWebSocket(`${WS_ENDPOINT()}/hole/${holeId}/`);\r\n\r\n  socket.debug = true;\r\n\r\n  console.log(\"-----------socket--------------\",socket);\r\n\r\n  socket.onopen = event => console.log('WebSocket Connected');\r\n  socket.onerror = event => console.log('error event : ', event);\r\n  socket.onmessage = event => dispatch({ type: ON_MESSAGES_READ, payload: { messages: JSON.parse(event.data) } });\r\n  //\r\n  //\r\n  socket.onclose = event => console.log('WebSocket Disconnected');\r\n\r\n  return socket;\r\n}","export const WS_ENDPOINT = () => {\r\n  const location = window.location;\r\n\r\n  let protocol = 'ws://';\r\n\r\n  if (location.protocol === 'https:') {\r\n    protocol = 'wss://';\r\n  }\r\n\r\n  const endpoint = protocol + 'www.ask2live.me/ws';\r\n\r\n  return endpoint;\r\n}","import { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function MediaPlayer(props) {\r\n\r\n  const { audioTrack, client, user } = props;\r\n\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  useEffect(() => {\r\n\r\n    if (audioTrack && client.remoteUsers.length === 0) {\r\n      // console.log(\"여기는 호스트\");\r\n\r\n      audioTrack.setEnabled(true);\r\n      const volumeInter = setInterval(()=>{\r\n        // console.log(\"나의 오디오\", client.uid);\r\n        // console.log(\"나의 오디오\", audioTrack.getVolumeLevel());\r\n      }, 500)\r\n\r\n      return () => {\r\n        audioTrack.setEnabled(false);\r\n        clearInterval(volumeInter);\r\n        // audioTrack.stop();\r\n      };\r\n    }\r\n\r\n    else if(audioTrack && client.remoteUsers.length != 0) {\r\n      // console.log(\"여기는 게스트\");\r\n\r\n      audioTrack.play();\r\n      const volumeInter = setInterval(()=>{\r\n            // console.log(\"상대방오디오\", user.uid);\r\n            // console.log(\"상대방오디오\", audioTrack.getVolumeLevel());\r\n      }, 500)\r\n\r\n      return () => {\r\n        audioTrack.stop();\r\n        clearInterval(volumeInter)\r\n      };\r\n    }\r\n  }, [audioTrack]);\r\n  return (\r\n    <div className=\"video-player\">\r\n    </div>\r\n  );\r\n}\r\n","import { useLocation, withRouter } from \"react-router-dom\";\r\nimport React, { useCallback } from \"react\";\r\nimport MediaPlayer from \"./MediaPlayer\";\r\n\r\n\r\nconst PlayerWrapper = ({\r\n  client,\r\n  // rtmClient,\r\n  // host,\r\n  // joinState,\r\n  localAudioTrack,\r\n  remoteUsers,\r\n  // channelNum,\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"player-container\">\r\n        {/* <div> {client.uid} </div> */}\r\n        <div className=\"local-player-wrapper\">\r\n\r\n          <MediaPlayer\r\n            audioTrack={localAudioTrack}\r\n            client={client}\r\n          />\r\n        </div>\r\n        <div className=\"remotePlayers\">\r\n          {remoteUsers.map((user) => (\r\n            <div className=\"remote-player-wrapper\" key={user.uid}>\r\n\r\n              <MediaPlayer audioTrack={user.audioTrack} client={client} user={user}/>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayerWrapper)","import React, {useState, useEffect, useRef, useCallback} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\"\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport {\r\n    QUESTIONLIST_DELETE,\r\n    ENTEREDSESSION_DELETE\r\n} from \"../../actions/types.js\";\r\n\r\n\r\n\r\nimport ParticipantList from \"./ParticipantList\";\r\nimport CurrentQuestion from \"./CurrentQuestion\";\r\n\r\n\r\nimport QuestionSwiper from \"./QuestionSwiper\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport Questioning from \"./Questioning\";\r\nimport InsertField from \"./InsertField\";\r\nimport Chat from \"./chatting/Chat\";\r\nimport Question from \"./Question\";\r\nimport Avatar from \"../Avatar\";\r\nimport \"../../index.css\"\r\nimport PlayerWrapper from \"./agora/PlayerWrapper\";\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseListButton from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nimport \"../../styles/style.css\"\r\n\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { CenterFocusStrong, FilterNone, NoEncryption } from '@material-ui/icons';\r\n\r\n//^ =============================================================\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\nimport useAgora from \"./agora/useAgora\";\r\n//^ =============================================================\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        marginRight: theme.spacing(3),\r\n        width: 30,\r\n        height: 30,\r\n      top: 13,\r\n      borderRadius: \"20px\",\r\n      border: `3px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n  }))(Badge);\r\n\r\nconst style = {\r\n    livewrapper: {\r\n        display: \"inline-block\",\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n        height: \"100%\",\r\n        // backgroundColor: \"rgb(255, 239, 196)\"\r\n    },\r\n\r\n    livesession: {\r\n        position:\"absolute\",\r\n        maxWidth: \"45em\",\r\n        minHeight: \"35em\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        backgroundColor: \"#252525\",\r\n    },\r\n\r\n    session_top: {\r\n        zIndex:\"4\",\r\n        position: \"relative\",\r\n        minHeight: \"3em\",\r\n        height: \"5%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    \r\n    session_mid: {\r\n        position: \"relative\",\r\n        height: \"55%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    session_bottom: {\r\n        position: \"relative\",\r\n        borderRadius: \"30px 30px 0px 0px\",\r\n        bottom: \"0%\",\r\n        height: \" 40%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#252525\",\r\n        zIndex:\"0\",\r\n        // backgroundColor: \"rgb(255, 248, 225)\"\r\n    },\r\n    table: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n\r\n    td1: {\r\n        width: \"60%\",\r\n        fontSize: \"1em\",\r\n        padding: \"10px 0 0 10px\",\r\n        color: \"rgba(255,255,255,0.8)\"\r\n    },\r\n\r\n    td2: {\r\n        width: \"9em\",\r\n        padding: \"0 0 0 10px\",\r\n    },\r\n    lavel : {\r\n        marginLeft: \"-12px\",\r\n        marginRight: \"-0.7em\",\r\n    },\r\n    font_size : {\r\n        fontSize : \"1rem\"\r\n    },\r\n    checkIcon : {\r\n        height: \"0.6em\"\r\n    },\r\n\r\n    tablecell: {\r\n        display: \"table-cell\",\r\n        verticalAlign: \"middle\",\r\n        height: \"100%\",\r\n    },\r\n    follow: {\r\n        marginRight: \"3px\",\r\n        float: \"right\",\r\n    },\r\n\r\n    question: {\r\n        width : \"90%\",\r\n    },\r\n\r\n    listbutton : {\r\n        position: \"absolute\",\r\n        top: \"-0.5em\",\r\n    },\r\n\r\n    alert : {\r\n        boxShadow: \"2px 2px 2px 2px #D95032\",    // 섀도우 색\r\n        border:\"2px solid #4CC0D0\",    // 테두리 색\r\n        backgroundColor:\"white\"      // 배경색\r\n    },\r\n\r\n    closeBtn : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"1em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        background:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n    },\r\n    linkBtnWrap : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"3.5em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        backgroundColor:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    linkBtn : {\r\n        marginLeft: \"1px\",\r\n        width: \"1.8em\",\r\n        height: \"1.8em\",\r\n        backgroundImage: \"url('/static/linkBtn.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\"\r\n    }\r\n   \r\n}\r\n\r\n\r\n//^ =============================================================\r\nconst appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\nconst client = AgoraRTC.createClient({ codec: \"vp8\", mode: \"rtc\" });\r\nconst rtmClient = AgoraRTM.createInstance(appid);\r\n\r\n\r\n//^ =============================================================\r\n\r\nconst LiveSession = (props) => {\r\n    const history = useHistory();\r\n    // console.log(\"!!!!!!!!!!!!!!!!!\", props);\r\n    // console.log(\"history state: \", history.state)\r\n    // history.pushState(null, null, '');\r\n    // console.log(\"history state: \", history.state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const hostPostApi = async(hostUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              channel_num : props.channelNum,\r\n              host_uid : hostUid,\r\n          };\r\n          console.log(\"LiveSession Host Post :\", data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(res.data);\r\n    }\r\n    \r\n    const audiencePutApi = async(audienceUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              uid : audienceUid,\r\n          };\r\n          console.log(\"LiveSession Audience Post :\", data);\r\n          const res = await axios.put(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/join/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(res.data);\r\n    }\r\n\r\n    const leavePatchApi = async() =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {};\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/leave/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(res.data);\r\n    }\r\n\r\n\r\n    const [listup, setListUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [queUp, setQueUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [userUp, setUserUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [dark, setDark] = useState({display:\"none\"})\r\n\r\n    const [room, setRoom] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [questionAlert, setOuestionAlert] = useState(false);\r\n    const [copiedAlert, setCopiedAlert] = useState(false);\r\n    // const [refreshAlert, setRefreshAlert] = useState(false)\r\n\r\n    const [hostExit, setHostExit] = useState(false);\r\n\r\n    const openQuestionAlert = () => {\r\n        setOuestionAlert(true);\r\n      };\r\n    \r\n    const closeQuestionAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setOuestionAlert(false);\r\n    };\r\n\r\n    const openCopiedAlert = () => {\r\n        setCopiedAlert(true);\r\n      };\r\n    \r\n    const closeCopiedAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setCopiedAlert(false);\r\n    };\r\n    // const history = useHistory()\r\n    \r\n    let partiNum = \"로딩중\";\r\n    const holeInfo = useSelector(state => state.enteredSession, [partiNum])\r\n    const hostImage = holeInfo.arrived ? \r\n            holeInfo.data.detail.livehole.host_profile_image_url\r\n            : \"/static/live_png\";\r\n    partiNum = holeInfo.arrived ? \r\n         holeInfo.data.detail.participant.length + \"명\"\r\n        : \"로딩중\"\r\n\r\n    // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n    const handleClick = () => {\r\n        // console.log(\"호스트 나감2\", hostExit)\r\n        setOpen(true);\r\n    };\r\n    \r\n    // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n    const handleClose = (event, reason) => { \r\n        setHostExit(true);\r\n\r\n        // history.replace('/main')\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        setTimeout(window.location.replace('/main'), 300);\r\n    };\r\n    \r\n    //^ =============================================================\r\n    let rtmChannel;\r\n\r\n    const {\r\n        localAudioTrack,\r\n        leave,\r\n        join,\r\n        joinState,\r\n        remoteUsers,\r\n        authority,\r\n    } = useAgora(client);\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        dispatch({type: QUESTIONLIST_DELETE})\r\n        dispatch({type: ENTEREDSESSION_DELETE})\r\n        \r\n        const liveInter = setInterval(()=>{\r\n            dispatch(getEnteredSession(props.channelNum))\r\n            dispatch(getQuestionList(props.holeId))\r\n        }, 5000);\r\n\r\n        \r\n        \r\n        const refreshOut = () => {\r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            clearInterval(liveInter);\r\n            window.location.replace('/main')\r\n            // clearInterval(volumeInter);\r\n        };\r\n        window.addEventListener(\"beforeunload\", refreshOut);\r\n        window.onpageshow =  function(event) { // BFCahe\r\n            if (event.persisted) {\r\n                refreshOut();\r\n                window.location.replace('/main')\r\n            }\r\n        }\r\n\r\n        rtmChannel = rtmClient.createChannel(props.channelNum);\r\n        join(props.channelNum, null, rtmClient, rtmChannel, props.isHost);\r\n        rtmChannel.on('ChannelMessage', (message, memberId) => {\r\n            console.log(`Message ${message}, from ${memberId}`);\r\n            \r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            clearInterval(liveInter);\r\n            // clearInterval(volumeInter);\r\n            handleClick();\r\n        });\r\n\r\n        if (props.isHost)\r\n            setTimeout(()=>{hostPostApi(client.uid)}, 4000);\r\n        else\r\n            setTimeout(()=>{audiencePutApi(client.uid)}, 4000);\r\n             \r\n        // if (props.isHost)\r\n        // {\r\n            const unblock = history.block('정말 떠나시겠습니까?');\r\n            return () => {\r\n                // dispatch({type: QUESTIONLIST_DELETE})\r\n                // dispatch({type: ENTEREDSESSION_DELETE})\r\n\r\n                console.log(\"호스트!!!: \", props.isHost)\r\n                window.removeEventListener(\"beforeunload\", refreshOut);\r\n                if(props.isHost){\r\n\r\n                    rtmChannel.sendMessage({ text: \"hostOut\" }).then(() => {\r\n                        // Your code for handling the event when the channel message is successfully sent.\r\n                            console.log('host is leaving')\r\n                        }).catch(error => {\r\n                        // Your code for handling the event when the channel message fails to be sent.\r\n                            console.log('host leaving error')\r\n                        });\r\n                }\r\n\r\n                rtmClient.logout();\r\n                leave();\r\n                leavePatchApi();\r\n                clearInterval(liveInter)\r\n                // clearInterval(volumeInter);\r\n                unblock();\r\n                \r\n                // history.replace('/main');\r\n                setTimeout(window.location.replace('/main'), 300);\r\n                \r\n            }\r\n\r\n        // }\r\n        \r\n        // else {\r\n        //     const unblock = history.block('정말 떠나시겠습니까?');\r\n        //     return () => {\r\n        //         // dispatch({type: QUESTIONLIST_DELETE})\r\n        //         // dispatch({type: ENTEREDSESSION_DELETE})\r\n\r\n        //         console.log(\"게스트가 스스로 나가는경우!!!!!!!!!!\", hostExit)\r\n        //         window.removeEventListener(\"beforeunload\", refreshOut);\r\n\r\n        //         // rtmChannel.leave();\r\n        //         rtmClient.logout();\r\n        //         leave();\r\n        //         leavePatchApi();\r\n        //         clearInterval(liveInter)\r\n        //         // clearInterval(volumeInter);\r\n        //         unblock();\r\n                \r\n        //         // history.replace('/main');\r\n        //         setTimeout(window.location.replace('/main'), 300);\r\n        //     }\r\n        // }\r\n    }, [history])\r\n\r\n    // ^ =============================================================\r\n    \r\n    const [liveVoice,setLiveVoice] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <div style={style.livewrapper}>\r\n            <div style={style.livesession}>\r\n                <div style={style.session_top}>\r\n                    <table style={style.table}>\r\n                        <tr>\r\n                            <td  colspan=\"2\" className=\"NanumGothic4\" style={style.td1} >{props.holeTitle}</td>\r\n                            <td  rowspan=\"2\">\r\n                                <div style={style.follow}>\r\n                                <div\r\n                                    style={style.closeBtn}\r\n                                    onClick={()=>{history.push('/main')}}\r\n                                    >\r\n                                        <span \r\n                                        className=\"NanumGothic2\"\r\n                                        style={{fontSize: \"0.6em\"}}>종료</span>\r\n                                </div>\r\n                                <div\r\n                                style={style.linkBtnWrap}\r\n                                >\r\n                                    <CopyToClipboard\r\n                                        onCopy={openCopiedAlert}\r\n                                        text={window.location.href}\r\n                                    >\r\n                                    <div style={style.linkBtn}/>\r\n                                    </CopyToClipboard>\r\n                                </div>\r\n                                \r\n                                </div>\r\n                                \r\n                            </td>      \r\n                        </tr>\r\n                        <tr>\r\n                            <td style={style.td2}>\r\n                                <img className=\"live_img\" src=\"/static/live.png\"/>\r\n                                <span style={{marginLeft:\"9px\", color:\"rgba(255, 255, 255, 0.6)\"}} className=\"NotoSans3\">{partiNum}</span>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </table>  \r\n                </div>\r\n                <div style={style.session_mid}>\r\n                    <div style={{position:\"relative\", height:\"40%\"}}>\r\n                        <div className=\"forLiveWrapper\" \r\n                        style={liveVoice?\r\n                        {transform:\"translate(-25%, 70%)\"}\r\n                        :\r\n                        null\r\n                        }>\r\n                                <div className=\"forLiveVoice\">\r\n                                    <tr>\r\n                                    <StyledBadge badgeContent={<MicIcon/>} color=\"error\">\r\n                                        <Avatar hostName={props.hostName} imageLink={props.imageLink}/>\r\n                                    </StyledBadge>\r\n                                    </tr>\r\n                                    <tr className=\"centered\">\r\n                                        <span style={{color: \"rgba(255,255,255,0.8)\"}}className=\"BMDOHYEON\">{props.hostName}</span>\r\n                                    </tr>\r\n                                </div>\r\n\r\n                        </div>\r\n        \r\n                     \r\n                    </div>\r\n                    <div style={{position:\"relative\", height:\"50%\"}}>\r\n                        {/* <Grid container justify=\"center\"> */}\r\n                            <div>\r\n                                 <CurrentQuestion \r\n                                 setLiveVoice={setLiveVoice}\r\n                                 liveVoice={liveVoice}\r\n                                 holeId={props.holeId} \r\n                                 isHost={props.isHost}\r\n                                 client={client}\r\n                                 rtmClient={rtmClient}\r\n                                 host={authority}\r\n                                 localAudioTrack={localAudioTrack}\r\n                                 remoteUsers={remoteUsers}\r\n                                 channelNum={props.channelNum}\r\n                                 />\r\n                            </div>\r\n                        {/* </Grid>  */}\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.session_bottom}>\r\n                    <div className=\"chattingWrapper\"/>\r\n                    <Chat holeId={props.holeId} isHost={props.isHost} channelNum={props.channelNum} goQueUp={setQueUp} goListUp = {setListUp} goUserUp = {setUserUp} goDark={setDark} room={room} windowHeight=\"1000px\" onBack={()=>setRoom(null)}/>                   \r\n                </div>\r\n            \r\n           \r\n        </div>\r\n        {props.isHost?\r\n        <div style={userUp} className=\"hiddenlist\">\r\n            <ParticipantList holeId={props.holeId} channelNum={props.channelNum} goUserUp = {setUserUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setUserUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n        :   \r\n        <div style={queUp} className=\"hiddenQue\">\r\n            <Questioning openQuestionAlert={openQuestionAlert} holeId={props.holeId} goQueUp = {setQueUp} goDark={setDark}/>\r\n        </div>\r\n        }\r\n        <div style={listup} className=\"hiddenlist\">\r\n            <QuestionList holeId={props.channelNum} goListUp = {setListUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setListUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n\r\n        <div style={dark} className=\"layerfordark\"></div>\r\n\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n            <span className=\"BMJUA\">호스트 [{props.hostName}]가<br/>세션을 종료하였습니다</span>\r\n        </Alert>\r\n        </Snackbar>\r\n\r\n        <div className=\"host-player\">\r\n            <PlayerWrapper\r\n                client={client}\r\n                // rtmClient={rtmClient}\r\n                // host={authority}\r\n                localAudioTrack={localAudioTrack}\r\n                remoteUsers={remoteUsers}\r\n                // channelNum={props.channelNum}\r\n            />\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={questionAlert} autoHideDuration={1500} onClose={closeQuestionAlert}>\r\n            <Alert onClose={closeQuestionAlert} style={{ backgroundColor:\"white\", boxShadow: \"2px 2px 2px 2px #D95032\", border:\"2px solid #4CC0D0\"}} severity=\"success\">\r\n                <span className=\"BMJUA\">질문 등록 성공!</span>\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={copiedAlert} autoHideDuration={1500} onClose={closeCopiedAlert}>\r\n            <Alert onClose={closeCopiedAlert} style={{ backgroundColor:\"white\", boxShadow: \"2px 2px 2px 2px #D95032\", border:\"2px solid #4CC0D0\"}} severity=\"success\">\r\n                <span className=\"BMJUA\">링크 복사 완료</span>\r\n            </Alert>\r\n        </Snackbar>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default LiveSession","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport AgoraRTC, {\r\n  MicrophoneAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig,\r\n} from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\n\r\nimport { AirlineSeatReclineExtraOutlined } from \"@material-ui/icons\";\r\n\r\nexport default function useAgora(client) {\r\n  console.log(\"useAgora\");\r\n  const appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\n\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(\"\");\r\n  const [joinState, setJoinState] = useState(false);\r\n  const [remoteUsers, setRemoteUsers] = useState([]);\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  async function createLocalTracks() {\r\n    const microphoneTrack = await AgoraRTC.createMicrophoneAudioTrack(\r\n      // MicrophoneAudioTrackInitConfig\r\n      { AEC: true, ANS: true }\r\n    );\r\n    setLocalAudioTrack(microphoneTrack);\r\n    return microphoneTrack;\r\n  }\r\n  \r\n  async function join(channel, token, rtmClient, rtmChannel, isHost) {\r\n    console.log(\"join\");\r\n\r\n    if (!client) return;\r\n    \r\n    const microphoneTrack = await createLocalTracks();\r\n    await client.join(appid, channel, token);    \r\n    \r\n    // rtm 클라이언트 로그인\r\n    await rtmClient\r\n    .login({ token: null, uid: String(client.uid) })\r\n        .then(() => {\r\n          console.log(\"AgoraRTM client login success !!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"AgoraRTM client login failure !!\", err);\r\n        });\r\n        \r\n    // rtm 클라이언트 메시지 받기 모드\r\n    await rtmClient.on(\"ConnectionStateChanged\", (newState, reason) => {\r\n      console.log(\r\n        \"on connection state changed to \" + newState + \" reason: \" + reason\r\n        );\r\n      });\r\n    \r\n    //rtm 메시지채널 join\r\n    await rtmChannel.join();\r\n\r\n      // event listener for receiving a peer-to-peer message.\r\n    await rtmClient.on(\"MessageFromPeer\", (msg, peerId) => {\r\n        // text: text of the received message; peerId: User ID of the sender.\r\n        console.log(\r\n          \"AgoraRTM Peer Msg: from user \" + peerId + \" recieved: \\n\" + msg.text\r\n        );\r\n\r\n        // check if mute or leave command\r\n        if (msg.text === \"host\") {\r\n          console.log(\"make host\");\r\n\r\n          client.publish(microphoneTrack);\r\n          // localAudioTrack.stop();\r\n          // localAudioTrack.setEnabled(true);\r\n\r\n        } else if (msg.text === \"audience\") {\r\n          console.log(\"make audience\");\r\n          \r\n          client.unpublish();\r\n          // localAudioTrack.play();\r\n\r\n        } else {\r\n          console.log(\"[Warning] unknown message:\", msg);\r\n        }\r\n        \r\n        \r\n      });\r\n\r\n    if (isHost) {\r\n      console.log(\"client Role in JOIN \");\r\n      await dispatch({type: \"superHost\", payload: \"host\"});\r\n      await client.publish(microphoneTrack);\r\n\r\n    } else {\r\n      console.log(\"audience Role in JOIN\");\r\n      await dispatch({type: \"audience\"});\r\n    }\r\n\r\n    console.log(\"end useAgora\");\r\n    setJoinState(true);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n    // if (localVideoTrack) {\r\n    //   localVideoTrack.stop();\r\n    //   localVideoTrack.close();\r\n    // }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    //! leave하면 이상해지더라..\r\n    // await rtmChannel.leave();\r\n    await client.leave();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n    \r\n    const handleUserPublished = async (user, mediaType) => {\r\n      await client.subscribe(user, mediaType);\r\n\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserUnpublished = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserJoined = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserLeft = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    client.on(\"user-published\", handleUserPublished);\r\n    client.on(\"user-unpublished\", handleUserUnpublished);\r\n    client.on(\"user-joined\", handleUserJoined);\r\n    client.on(\"user-left\", handleUserLeft);\r\n\r\n    return () => {\r\n      client.off(\"user-published\", handleUserPublished);\r\n      client.off(\"user-unpublished\", handleUserUnpublished);\r\n      client.off(\"user-joined\", handleUserJoined);\r\n      client.off(\"user-left\", handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    joinState,\r\n    leave,\r\n    join,\r\n    remoteUsers,\r\n    authority,\r\n  };\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useHistory, withRouter} from \"react-router-dom\"\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width : \"94%\",\r\n    maxWidth: \"23em\",\r\n    height: \"11em\"\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    paddingTop: 0,\r\n},\r\ncover: {\r\n    width: \"20px\",\r\n    borderLeft: \"solid rgba(0, 0, 0, 0.3) 1px\"\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  top : {\r\n      position : \"fixed\",\r\n      top: \"30%\"\r\n  }\r\n}));\r\n\r\nconst style = {\r\n  loginCard : {\r\n      top : \"20%\",\r\n      // backgroundColor: \"skyblue\",\r\n      border: \"1px solid black\",\r\n      borderRadius: \"15px\",\r\n      boxShadow: \"1px 1px 2px 2px black\",\r\n      paddingTop: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      maxWidth : \"23em\",\r\n      width : \"16em\",\r\n      height : \"10.5em\",\r\n      position : \"fixed\",\r\n  },\r\n  loginBtnWrapper : {\r\n      position: \"absolute\",\r\n      top : \"88%\",\r\n      backgroundColor: \"black\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  mikeBtn : {\r\n    height: '2.5em',\r\n    width: '4em',\r\n    backgroundColor: \"black\",\r\n    boxShadow: \"1px 1px 1px 1px black\",\r\n    borderColor: \"white\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n  },\r\n  loginBtn : {\r\n      height: '2.5em',\r\n      width: '4em',\r\n      backgroundColor: \"#EF5941\",\r\n      boxShadow: \"1px 1px 1px 1px black\",\r\n      borderColor: \"#EF5941\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  liveBtn : {\r\n    height: '2.5em',\r\n    width: '7em',\r\n    backgroundColor: \"#EF5941\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    borderColor: \"#EF5941\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n},\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst JoinCard = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [mike, setMike] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getMike = () => {\r\n      navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(function(stream) {\r\n        console.log('You let me use your mic!')\r\n        setMike(1);\r\n      })\r\n      .catch(function(err) {\r\n        handleOpen();\r\n      });\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    \r\n<Grid className={classes.top} container justify=\"center\">\r\n    <Card style={style.loginCard}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            {props.hostName}\r\n          </Typography>\r\n          {props.isHost ?  \r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A를 시작합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>    \r\n            :\r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A에 입장합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>\r\n            }\r\n        <div>\r\n          {console.log(props.isHost)}\r\n            {props.isHost ?\r\n                mike?\r\n                    <button \r\n                    onClick={()=>{\r\n                        history.push({\r\n                            pathname : \"/session/live\",\r\n                            search: \"?holeId=\" + props.holeId + \"&channelNum=\" + props.channelNum,\r\n                            state : {\r\n                                joinPass : true,\r\n                                isHost : true,\r\n                                hostName : props.hostName,\r\n                                hostImage: props.hostImage,\r\n                            }\r\n                        })\r\n                    }}\r\n                    // style={{margin:\"0 0 1em 2em\"}}\r\n                    style={style.liveBtn}\r\n                    >라이브열기</button>\r\n                :\r\n                <></>\r\n            :   \r\n                mike?\r\n                <button \r\n                style={style.loginBtn}\r\n                onClick={()=>props.setJoin(1)} aria-label=\"play/pause\">\r\n                    입장\r\n                </button>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n\r\n</Grid>\r\n  <Snackbar style={{top: \"40%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert style={{width: \"90%\"}} onClose={handleClose} severity=\"warning\">\r\n        [마이크 권한]이 차단되었습니다<br/><br/>\r\n        브라우저 상단에서<br/>\r\n        [마이크 권한]을 허용해주세요!\r\n      </Alert>\r\n  </Snackbar>\r\n</>\r\n  );\r\n}\r\n\r\nexport default withRouter(JoinCard)","import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport LiveSession from \"../components/liveSession/LiveSession\"\r\nimport JoinCard from \"../components/JoinCard\"\r\nimport getEnteredSession from \"../actions/EnteredSessionActions\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../index.css\"\r\nimport { sessionDummy } from \"../dummydatas/sessionDummy\"\r\n\r\n\r\nconst LiveSessionContainer = (props) => {\r\n\r\n    // console.log(\"LiveSessionContainer Props\", props.joinPass);\r\n\r\n    const [join, setJoin] = useState(props.joinPass); // ?���? ?��?��코딩\r\n\r\n    console.log(join);\r\n\r\n    // if (1) //props.isHost\r\n    //     return <LiveSession hostName={hostName} imageLink={imageLink} channelNum={channelNum} isHost={1}/>\r\n    if (!join){\r\n        // console.log(\"!join\", join)\r\n        return <JoinCard holeId={props.holeId} channelNum={props.channelNum} hostName={props.hostName} hostImage={props.hostImage} setJoin={setJoin} isHost={props.isHost}/>\r\n    }else\r\n    {\r\n        // console.log(\"join\",join)\r\n        return <LiveSession holeTitle={props.holeTitle} holeId={props.holeId} hostName={props.hostName} imageLink={props.hostImage} channelNum={props.channelNum} isHost={props.isHost}/>\r\n    }\r\n}\r\n\r\nexport default LiveSessionContainer","import React from \"react\";\r\nimport {useSelector} from \"react-redux\"\r\nimport JoinCard from \"./JoinCard\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\n\r\nconst ReserveToLive = (props) => {\r\n    console.log(\"Enter : ReserveToLive\")\r\n\r\n    const holeId = props.holeId\r\n    const sessions = useSelector(state => state.session.data)\r\n    let channelNumAry = []\r\n\r\n    sessions.map((session) => {\r\n        channelNumAry = [...channelNumAry, session.livehole_id];\r\n    })\r\n\r\n    let channelNum;\r\n\r\n    while (true)\r\n    {\r\n        channelNum = Math.floor(Math.random() * 10001)\r\n        if (channelNumAry.indexOf(channelNum) == -1)\r\n            break\r\n    }\r\n\r\n    console.log(\"MakeChannelNum\", channelNum);\r\n    console.log(\"ReserveToLive Props\", props);\r\n\r\n    return <LiveSessionContainer hostName={props.hostName} hostImage={props.hostImage} holeId={holeId} channelNum={channelNum} isHost={true}/>\r\n}\r\n\r\nexport default ReserveToLive","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\nimport ReserveToLive from \"../components/ReserveToLive\"\r\nimport axios from \"axios\"\r\n\r\nconst LIVE = \"live\"\r\nconst RESERVE = \"reserve\" \r\n\r\nconst SessionMatchContainer = (props) => {\r\n    const history = useHistory()\r\n    const [match, setMatch] = useState()\r\n\r\n    // console.log(props);\r\n    const sessionKind = props.routerInfo.match.params.state;\r\n    let urlSearchParams = new URLSearchParams(props.routerInfo.location.search.slice(1));\r\n    // console.log(props);\r\n    // console.log(sessionKind);\r\n\r\n    const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n    const tmp =  useSelector(state => state.user.data)\r\n    const currUser = tmp.detail? tmp.detail.username : \"\";\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n            (res) => {\r\n                if (res.data.response === \"SUCCESS\")\r\n                    setMatch(res.data.detail);\r\n            }\r\n        )\r\n    },[holeId])\r\n    \r\n    switch (sessionKind) {\r\n        case LIVE:\r\n            const channelNum = urlSearchParams.get(\"channelNum\");\r\n            // console.log(\"----Match----\", match)\r\n            if (match) \r\n            {\r\n                if (match.status === \"DONE\")\r\n                    return (\r\n                    <>\r\n                        <div style={{\r\n                            position:\"fixed\",\r\n                            display:\"flex\", \r\n                            width:\"100%\", \r\n                            height:\"100%\",\r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                        }}>\r\n                            <div>\r\n                                <div style={{\r\n                                    position:\"relative\",\r\n                                    zIndex:\"1\",\r\n                                    width:\"15em\",\r\n                                    height:\"15em\",\r\n                                    backgroundImage:\"url('/static/wallcat.png')\",\r\n                                    backgroundSize:\"contain\",\r\n                                    backgroundRepeat:\"no-repeat\",\r\n                                }}></div>\r\n                                <div style={{\r\n                                    zIndex:\"0\",\r\n                                    transform:\"translate(0, -9em) rotate(7deg)\",\r\n                                    display:\"flex\", \r\n                                    justifyContent:\"center\",\r\n                                    alignItems:\"center\",\r\n                                    backgroundColor:\"white\",\r\n                                    width: \"15em\",\r\n                                    height:\"4em\",\r\n                                    border:\"2px solid grey\"\r\n                                }}\r\n                                    >\r\n                                    <p style={{fontSize:\"1em\"}} className=\"CookieRun\">\r\n                                        이미 라이브가 종료된 방입니다.\r\n                                    </p>\r\n\r\n                                </div>\r\n                        \r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n\r\n                        </div>\r\n                        <div  style={{\r\n                            position:\"fixed\",\r\n                            display:\"flex\", \r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                            height:\"100%\",\r\n                            width:\"100%\",\r\n                            transform:\"translate(0, 3em)\"\r\n                            }}>\r\n                            <span\r\n                            style={{cursor:\"pointer\", borderBottom:\"1px solid black\"}} \r\n                            className=\"Gmarket2\"\r\n                            onClick={()=>{\r\n                                history.push(\"/main\")\r\n                            }}\r\n                            >메인으로 가기</span>\r\n                        </div>\r\n                    </>)\r\n\r\n                const isHost = (currUser === match.host_username);\r\n                return <LiveSessionContainer holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.routerInfo.location.state?.joinPass} isHost={isHost}/>\r\n            }\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n\r\n        case RESERVE:\r\n            if (match)\r\n                return <ReserveToLive holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId}/>\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n            \r\n        default:\r\n            return (\r\n                <p>SessionMatchContainer ERROR</p>     \r\n            )\r\n        }\r\n    // switch (sessionKind) {\r\n    //     case LIVE:\r\n    //         const holeId = urlSearchParams.get(\"holeId\");\r\n    //         const channelNum = urlSearchParams.get(\"channelNum\");\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     const isHost = (currUser === res.data.detail.host_username);\r\n    //                     return <LiveSessionContainer hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.location.state?.joinPass} isHost={isHost}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     case RESERVE: // 占쏙옙占쏙옙 호占쏙옙트占쏙옙 占쏙옙占식곤옙占쏙옙\r\n    //         const holeId_reserve = urlSearchParams.get(\"holeId\");\r\n    //         console.log(holeId_reserve)\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     return <ReserveToLive hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId_reserve}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     default:\r\n    //         return (\r\n    //             <p>SessionMatchContainer ERROR</p>     \r\n    //         )\r\n    //     }\r\n}\r\n\r\nexport default SessionMatchContainer","import React, { useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {getUserInfo} from '../actions/UserActions';\r\n\r\nexport default (SpecialComponent, option, adminRoute=null) => {\r\n\r\n  /* \r\n     ��)  option: null -> ������ ������ ������ ������ (home)\r\n                 true -> �α����� ������ ������ ������ ������\r\n                 false -> �α����� ������ ������ �Ұ����� ������\r\n                 \r\n        false�� �������� �α����� ������ ������ �� �ְ� ¥�� �ȵ�����, Ȥ�ó� �������� ���� �Ʒ� �ڵ� ��� �α��������� ���Եȴ�.\r\n        ���� ���� �������� �������ҵ�??\r\n  */\r\n  const AuthenticateCheck = (props) => {\r\n\r\n    const isLoggedIn = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n      if (!isLoggedIn && option) {\r\n        props.history.push({\r\n            pathname : \"/login\",\r\n            before : props.location.pathname + props.location.search  \r\n        });\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <SpecialComponent routerInfo={props}/>\r\n    )\r\n\r\n  };\r\n  return AuthenticateCheck;\r\n};","import { NativeSelect } from '@material-ui/core';\r\nimport React, {useEffect, useState, } from 'react';\r\nimport CounterContainer from './containers/CounterContainer';\r\nimport NavContainer from './containers/NavContainer'\r\nimport SessionCardContainer from './containers/SessionCardContainer';\r\nimport MypageContainer from './containers/MypageContainer';\r\nimport SessionCreateContainer from './containers/SessionCreateContainer';\r\nimport ProfileDetail from './components/mypage/ProfileDetail';\r\nimport MypageEdit from './components/mypage/MypageEdit';\r\nimport PreQuestions from './components/sessionCard/PreQuestions';\r\n// import MainPage from \"./components/MainPage\" \r\n// import 'fontsource-roboto'\r\n\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport SessionMatchContainer from './containers/SessionMatchContainer';\r\n\r\nimport {LoginPage} from './components/onBoard'\r\n\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\n// import Chat from \"./components/liveSession/chatting/Chat\"\r\n\r\nimport { getSessionInfo, getUserSessionInfo } from './actions/SessionActions'\r\nimport { getUserInfo } from './actions/UserActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst App = () => {\r\n    \r\n    useEffect(() => {\r\n        if(document.body.getAttribute('__donot_urlopenlink') || !/mobile/i.test(navigator.userAgent) || !/inapp|KAKAOTALK|Line\\/|FB_IAB\\/FB4A|FBAN\\/FBIOS|Instagram|DaumDevice\\/mobile|SamsungBrowser\\/[^1]/i.test(navigator.userAgent)) return;\r\n        else {\r\n            const script = document.createElement(\"script\");\r\n\r\n            if(/(iPad|iPhone|iPod)/g.test(navigator.userAgent)) {                \r\n                // script.text = \"location.href='ftp://13.125.22.142/pub/bridge.html'\"\r\n                script.src = \"https://urlopen.link/direct.js\";\r\n                script.async = true;\r\n                document.body.appendChild(script);\r\n                \r\n            } else {\r\n                script.text = \"location.href='intent://www.ask2live.me#Intent;scheme=https;package=com.android.chrome;end'\";\r\n                document.body.appendChild(script);\r\n            }\r\n    \r\n            return () => {\r\n                document.body.removeChild(script);\r\n            }\r\n        }\r\n    })\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token')\r\n    if(token){\r\n        dispatch(getUserInfo(token));\r\n        // dispatch(getUserSessionInfo(token));\r\n    }\r\n    \r\n    dispatch(getSessionInfo());\r\n    \r\n    // dispatch(getAllUsersInfo());\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* <Route exact path=\"/hole/c9c9dd9bb\" component={Chat}/> */}\r\n        \r\n        <Route exact path=\"/main\" component={Auth(SessionCardContainer, true)}/>\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={LoginPage}/>\r\n            <Route exact path=\"/\" component={LoginPage}/>\r\n            <Route exact path=\"/session/:state\" component={Auth(SessionMatchContainer, true)}/>\r\n            {/* <Route exact path=\"/session/:state\" render={(matchProps) => <SessionMatchContainer {...matchProps}/>}/>  */}\r\n            <Route exact path=\"/createSession\" component={Auth(SessionCreateContainer, true)}/>\r\n            <Route exact path=\"/mypage/:username\" component={Auth(ProfileDetail, true)}/>\r\n            <Route exact path=\"/mypage/:username/edit\" component={Auth(MypageEdit, true)}/>\r\n            {/* <Route path=\"/\" component={NavContainer}/> */}\r\n        </Switch>\r\n        <Route exact path=\"/preQuestions/:pk\" component={Auth(PreQuestions, true)}/>    \r\n        <Route exact path=\"/mypage\" component={Auth(MypageContainer, true)}/>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default App\r\n","\r\nimport {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    arrived : false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case USER_GET_SUCCESS:\r\n            const userInfo = action.payload.data; // 경로 수정 필요할수도\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                arrived: true,\r\n                data: userInfo\r\n            };\r\n        case USER_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        // case GIVEUSER:\r\n        //     // state = action.user; //state 이렇게 바꿔도 되나?\r\n        //     return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","\r\nimport {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport const session = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SESSION_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case SESSION_GET_SUCCESS:\r\n            const sessionInfo = action.payload.data; \r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: sessionInfo\r\n            };\r\n        case SESSION_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case SETLIVE:\r\n            return {\r\n                ...state[state.findIndex(e => e.holeId === action.holeId)],\r\n                isLive : action.livestate,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default session;","import {\r\n  MY_SESSION_GET_PENDING,\r\n  MY_SESSION_GET_SUCCESS,\r\n  MY_SESSION_GET_FAILURE,\r\n  MY_SETLIVE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  pending: false,\r\n  error: false,\r\n  data: [],\r\n};\r\n\r\nconst mySession = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MY_SESSION_GET_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n        error: false,\r\n      };\r\n    case MY_SESSION_GET_SUCCESS:\r\n      const sessionInfo = action.payload.data;\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: sessionInfo,\r\n      };\r\n    case MY_SESSION_GET_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: true,\r\n      };\r\n    // case MY_SETLIVE:\r\n    //   return {\r\n    //     ...state[state.findIndex((e) => e.holeId === action.holeId)],\r\n    //     isLive: action.livestate,\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mySession;\r\n","import {\r\n    ON_MESSAGES_VALUE_CHANGE,\r\n    ON_MESSAGES_READING,\r\n    ON_MESSAGES_READ\r\n  } from '../actions/types';\r\n  \r\n  const INITIAL_STATE = {\r\n    messages: [],\r\n    loading: false,\r\n    error: '',\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ON_MESSAGES_VALUE_CHANGE:\r\n        return { ...state, ...action.payload };\r\n      case ON_MESSAGES_READING:\r\n        return { ...state, loading: true, error: '' };\r\n      case ON_MESSAGES_READ:\r\n        return { ...state, ...action.payload, loading: false, error: '' };\r\n      default:\r\n        return state;\r\n    }\r\n  };","const initialState = \"\";\r\n\r\nconst authorize = (state = initialState, action) => {\r\n\r\n  switch(action.type){\r\n    case \"superHost\":\r\n      console.log(\"make super HOST\", action.payload);\r\n      state = action.payload;\r\n      return state;\r\n\r\n    case \"audience\":\r\n      state = initialState;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport default authorize;","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR,\r\n    QUESTIONLIST_DELETE\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//���༭\r\nconst questionlist = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case QUESTIONLIST_GET_PENDING:\r\n            console.log(\"PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case QUESTIONLIST_GET_SUCCESS:\r\n            console.log(\"SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case QUESTIONLIST_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case QUESTIONLIST_DELETE:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default questionlist;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR,\r\n    ENTEREDSESSION_DELETE,\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//����??����\r\nconst enteredSession = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENTEREDSESSION_GET_PENDING:\r\n            console.log(\"EnteredSession PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ENTEREDSESSION_GET_SUCCESS:\r\n            console.log(\"EnteredSession SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case ENTEREDSESSION_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case ENTEREDSESSION_DELETE:\r\n            return {\r\n                ...state,\r\n                ...initialState,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default enteredSession;","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport user from './user';\r\nimport session from './session';\r\nimport mySession from './mySession';\r\nimport messages from './messages';\r\nimport authorize from './authorize';\r\nimport questionlist from './questionlist';\r\nimport enteredSession from './enteredSession'\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n    user,\r\n    session,\r\n    mySession,\r\n    messages,\r\n    authorize,\r\n    questionlist,\r\n    enteredSession,\r\n});\r\n\r\nexport default rootReducer;","import reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport axios from 'axios';\r\n\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n// axios.defaults.headers.common['X-CSRFToken'] = getCookie(\"csrftoken\");\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>        \r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}