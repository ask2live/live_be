{"version":3,"sources":["reportWebVitals.js","reducers/counter.js","components/Nav.js","components/CheckString.js","actions/types.js","actions/UserActions.js","components/onBoard/LoginPage.js","actions/QuestionListActions.js","actions/SessionActions.js","components/sessionCard/CurrentReserveSessionsCards.js","components/sessionCard/OtherLiveSessionsCards.js","components/sessionCard/MyLiveSessionsCards.js","components/sessionCard/HostConfirmedSessionsCards.js","components/SessionCreateButton.js","components/ProfileEditButton.js","containers/SessionCardContainer.js","components/mypage/ProfileGate.js","components/mypage/MypageNav.js","components/mypage/Mypage.js","actions/SessionToReserveActions.js","components/mypage/SessionConfirm.js","components/mypage/MypageLiveSession.js","components/mypage/MypageConfirmedSession.js","components/Emoji.js","containers/MypageContainer.js","containers/SessionCreateContainer.js","components/mypage/ProfileDetail.js","components/mypage/MypageEdit.js","components/sessionCard/PreQuestionNav.js","components/sessionCard/PreQuestions.js","actions/EnteredSessionActions.js","components/liveSession/Participant.js","components/liveSession/ParticipantList.js","components/liveSession/StringQuestion.js","components/Avatar.js","components/liveSession/VoiceQuestion.js","components/liveSession/CurrentQuestion.js","components/liveSession/Question.js","components/liveSession/QuestionList.js","components/liveSession/Questioning.js","components/liveSession/chatting/Message.js","components/liveSession/chatting/EmptyScreen.js","actions/MessagesActions.js","environment.js","components/liveSession/InsertField.js","components/liveSession/chatting/Chat.js","components/liveSession/agora/MediaPlayer.js","components/liveSession/agora/PlayerWrapper.js","components/liveSession/LiveSession.js","components/liveSession/agora/useAgora.js","components/JoinCard.js","containers/LiveSessionContainer.js","components/ReserveToLive.js","containers/SessionMatchContainer.js","hoc/auth.js","App.js","reducers/user.js","reducers/session.js","reducers/mySession.js","reducers/messages.js","reducers/authorize.js","reducers/questionlist.js","reducers/enteredSession.js","reducers/volume.js","reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INCREMENT","DECREMENT","counterReducer","state","action","type","Person","Home","makeStyles","theme","root","menuButton","marginRight","spacing","title","flexGrow","appBar","top","bottom","left","right","margin","backgroundColor","borderRadius","width","maxWidth","zIndex","blank","special","CheckSpaceNSpecial","string","test","ReplaceSpaceNSpecial","replace","ON_MESSAGES_VALUE_CHANGE","ON_MESSAGES_READING","ON_MESSAGES_READ","ON_MESSAGES_INIT","USER_GET_PENDING","USER_GET_SUCCESS","USER_GET_FAILURE","QUESTIONLIST_GET_PENDING","QUESTIONLIST_GET_SUCCESS","QUESTIONLIST_GET_ERROR","QUESTIONLIST_DELETE","QUESTIONLIST_SOCKET_READ","SESSION_GET_PENDING","SESSION_GET_SUCCESS","SESSION_GET_FAILURE","MY_SESSION_GET_PENDING","MY_SESSION_GET_SUCCESS","MY_SESSION_GET_FAILURE","ENTEREDSESSION_GET_PENDING","ENTEREDSESSION_GET_SUCCESS","ENTEREDSESSION_GET_ERROR","ENTEREDSESSION_DELETE","PATCH_VOLUME","CLEAR_VOLUME","getUserInfo","token","dispatch","config","headers","Authorization","axios","get","userGetApi","response","payload","catch","error","Alert","props","elevation","variant","defaults","xsrfCookieName","xsrfHeaderName","marginTop","list","palette","background","paper","style","login","position","display","justifyContent","flexDirection","loginWrapper","height","loginCard","border","boxShadow","paddingTop","loginBtnWrapper","color","loginBtn","infoIcon","cursor","logo","backgroundImage","backgroundPosition","backgroundSize","LoginPage","history","useHistory","localStorage","push","useState","loginId","setLoginId","loginPassword","setLoginPassword","open","setOpen","openTwo","setOpenTwo","lengthError","setLengthError","valueError","setValueError","handleClose","event","reason","handleCloseTwo","useDispatch","Login","a","dataToSubmit","username","password","post","res","window","setItem","data","detail","location","before","err","Grid","container","justify","fontSize","className","marginBottom","TextField","helperText","value","placeholder","size","id","onChange","target","length","substring","onClick","Snackbar","autoHideDuration","onClose","severity","getQuestionlist","holeId","getApi","getSessionInfo","getUserSessionInfo","userSessionGetApi","useStyles","flexWrap","minWidth","successContent","transform","content","date","work_field","marginLeft","wish","questions","questionIcon","avatarWrapper","avatar","check","chipGrid","wishButton","textAlign","hostProfile","opacity","frame","onClickWish","sessionId","patch","e","alert","onClickWishCancel","CurrentReserveSessionsCards","currentReserveSessions","classes","user","useSelector","map","session","Paper","progress","strokeWidth","strokeColor","trailColor","gapDegree","format","percent","Avatar","src","host_profile_image","hole_reservations","Math","ceil","guests","target_demand","commingSoon","alignItems","Chip","label","Typography","component","host_username","host_work_company","host_work_field","item","reserve_date","count_questions","Button","clickable","startIcon","Object","keys","indexOf","setTimeout","pathname","host","borderBottom","padding","bullet","paddingBottom","pos","avatarRoot","small","large","imageWrapper","float","paddingRight","contentTime","contentTitle","textOverflow","contentName","contentField","whiteSpace","overflow","buttonWrapper","profileimage","livelogo1","livelogo1_back","OtherLiveSessionsCards","otherLiveSessions","setTitle","subtitle","setSubtitle","now","Date","Card","CardContent","search","livehole_id","hostName","hostImage","alt","count_participant","description","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","cardContent","cookieWrapper","backgroundRepeat","useCookie","living","contentWrapper","contentWork","live2","MyLiveSessionsCard","React","MyLiveSessionsCards","myLiveSessions","HostConfirmedSessionsCards","hostConfirmedSessions","reserveDate","setReserveDate","toDate","posision","paddingLeft","textWrap","balloonWhite","balloonColor","mike","SessioinCreateButton","noMyLive","profileBalloon","ProfileEditButton","MyPageIcon","mainLogo","mainOragne","descript","descript2","cookie1","cookie2","button","buttonIcon","fontColor","buttonText","align","fontWeight","swiperLeft","swiperLeftHidden","swiperRight","swiperRightHidden","logOut","SessionCardContainer","userDetail","setFlag","sessions","mySession","clear","status","cnt","swiperCnt","setSwiperCnt","IconButton","aria-label","borderColor","toString","where","swipping","prev","direction","Divider","profile","ProfileGate","CardActionArea","profile_image","CardHeader","fontFamily","borderbox","text","MypageNav","goBack","my","myBottomCard","Logout","MyPage","postSessionToReserve","font","font2","font3","SessionConfirm","goListUp","goDark","handleClick","animation","layerfordark","minHeight","LinearProgressWithLabel","Box","mr","LinearProgress","round","MypageLiveSession","listup","setListUp","dark","setDark","demand","setDemand","open2","setOpen2","handleDemandClose","handleDeleteClose","onDelete","delete","subheader","parseInt","current_demand","CardActions","MypageConfirmedSession","Emoji","role","aria-hidden","symbol","nested","itemText","MyPageContainer","wishSessions","useEffect","myDoneSessions","myWishSessions","myConfirmSessions","my_hole","reservation_status","wish_hole","openDone","setOpenDone","openWish","setOpenWish","openConfirm","setOpenConfirm","Mypage","ListItem","Collapse","in","timeout","unmountOnExit","List","disablePadding","NumAlert","form","submit","SessionCreateContainer","urlSearchParams","URLSearchParams","routerInfo","slice","nowDate","defaultDate","setDate","getMinutes","toISOString","titleValid","setTitleValid","setDescription","descriptionValid","setDescriptionValid","reserveDateValid","setReserveDateValid","earlyDateValid","setEarlyDateValid","count","setCount","skipValid","setSkipValid","split","disable","setDisable","onIncrease","onDecrease","handleClick2","handleClose2","Container","required","fullWidth","name","autoFocus","InputLabelProps","shrink","checked","disabled","justifyContents","xs","inputProps","min","cur_date","getTime","multiline","rows","root2","work_company","bio","editWrapper","editBtn","ProfileDetail","host_bio","editFlag","buttonGroup","file","button2","MypageEdit","usernameValue","setUsername","profileImage","setProfileImage","workField","setWorkField","workCompany","setWorkCompany","setBio","image","setImage","useCallback","files","preview","imageUrl","URL","createObjectURL","preventDefault","formData","FormData","append","resGet","autoComplete","card","cardText","labelBMJUA","fontStyle","questionText","submitbtn","insert","borderTop","borderLeft","borderRight","MyQuestionCards","myQuestions","questionlist","userId","questionsList","question","questionAuthor","light","MyQuestionSend","ask","setAsk","postApi","isVoice","askValue","is_answered","is_voice","maxLength","iconButton","QuestionCard","user_profile_image_url","user_username","TabPanel","children","index","other","hidden","aria-labelledby","p","a11yProps","PreQuestionNav","setValue","AppBar","Tabs","newValue","Tab","time","desc","SessionDetail","undefined","ListPreQuestions","PreQuestions","targetSession","href","getEnteredSession","channelNum","participant","tmp","follow","Participant","nickName","participantlist","ParticipantList","participants","enteredSession","arrived","profile_image_url","audience1","audience2","StringQuestion","questionStr","userQuestion","finish","setFinish","btnDisable","setBtnDisable","imageLink","userNickName","isHost","onAnswered","currentQuestionId","circleWrap","circle1","circle2","circleWhite","UserAvatar","memo","volume","liveInfo","isHostAvatar","hostUid","livehole","host_uid","userUid","VoiceQuestion","click","setClick","clickStyle","setClickStyle","exitClick","setExitClick","setHidden","sendP2PMessage","recipientUID","peerMsg","remoteUID","String","rtmClient","sendMessageToPeer","sendResult","hasPeerReceived","wait","CurrentQuestion","questionPatchApi","questionId","roomSocket","send","JSON","stringify","command","pk","forQuestionidx","questionList","findIndex","questionResponse","questionIdx","liveVoice","setLiveVoice","currentQuestion","user_uid","client","localAudioTrack","remoteUsers","myPaper","otherPaper","SimplePaper","isFirst","myQuestion","userName","nav","QuestionList","click1","setClick1","click2","setClick2","questionAry","myName","questionInfo","questionbutton","Questioning","voice","setVoice","queStyle","setQueStyle","myInfo","onKeyPress","key","openQuestionAlert","goQueUp","Message","message","sender","sent_timestamp","wordBreak","EmptyScreen","containerStyle","Empty","PRESENTED_IMAGE_SIMPLE","onRoomMessagesRead","realHoleId","socket","ReconnectingWebSocket","protocol","WS_ENDPOINT","debug","onopen","console","log","onerror","onmessage","parse","messages","onclose","Width","input","flex","divider","questioningBtn","questionListBtn","participantBtn","CustomizedInputBase","InputBase","goSetMessage","goMessageSend","pressEnter","goUserUp","iconButton2","InsertfieldWrapper","justifyContainer","Insertfield","connect","scrollToBottom","element","document","querySelector","scrollTop","scrollHeight","loading","hasMore","setMessage","loadingChat","room","windowHeight","onBack","Fragment","CircularProgress","itemLayout","dataSource","renderItem","borderWidth","InsertField","MediaPlayer","audioTrack","setEnabled","volumeInter","setInterval","uid","userVolume","getVolumeLevel","clearInterval","play","stop","withRouter","StyledBadge","withStyles","badge","Badge","livewrapper","livesession","session_top","session_mid","session_bottom","table","td1","td2","lavel","font_size","checkIcon","tablecell","verticalAlign","listbutton","closeBtn","linkBtnWrap","linkBtn","AgoraRTC","createClient","codec","mode","AgoraRTM","createInstance","LiveSession","rtmChannel","hostPostApi","channel_num","audiencePutApi","audienceUid","put","leavePatchApi","queUp","setQueUp","userUp","setUserUp","setRoom","questionAlert","setOuestionAlert","copiedAlert","setCopiedAlert","setRoomSocket","closeQuestionAlert","closeCopiedAlert","holeInfo","host_profile_image_url","appid","setLocalAudioTrack","joinState","setJoinState","setRemoteUsers","authority","Authorize","createLocalTracks","createMicrophoneAudioTrack","AEC","ANS","microphoneTrack","channel","join","on","newState","msg","peerId","publish","unpublish","close","leave","handleUserPublished","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","off","useAgora","unblock","block","refreshOut","logout","addEventListener","onpageshow","persisted","performance","navigation","getQuestionList","createChannel","memberId","removeEventListener","sendMessage","colspan","holeTitle","rowspan","onCopy","badgeContent","details","cover","controls","playIcon","mikeBtn","liveBtn","useTheme","setMike","getMike","navigator","mediaDevices","getUserMedia","audio","stream","handleOpen","joinPass","setJoin","LiveSessionContainer","ReserveToLive","channelNumAry","floor","random","SessionMatchContainer","match","setMatch","sessionKind","params","currUser","SpecialComponent","option","AuthenticateCheck","isLoggedIn","getItem","App","body","getAttribute","userAgent","script","createElement","async","appendChild","removeChild","exact","path","Auth","MypageContainer","initialState","pending","userInfo","sessionInfo","INITIAL_STATE","authorize","tmpState","rootReducer","combineReducers","counter","shift","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f59728d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// actions 액션 타입\r\nconst INCREMENT = 'counterReducer/INCREMENT';\r\nconst DECREMENT = 'counterReducer/DECREMENT';\r\n// 이 패턴에서 따를 규칙은, 액션 타입을 만들때 reducer/ACTION_TYPE 의 형식으로 만들어야 합니다.\r\n\r\n// action creator 액션 생성자\r\nexport const increment = () => ({ type : INCREMENT }); \r\nexport const decrement = () => ({ type : DECREMENT });\r\n\r\nconst initialState = 0;\r\n\r\n//리듀서\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return state + 1;\r\n        case DECREMENT:\r\n            if (state > 0){\r\n                return state - 1;\r\n            } else {\r\n                return state;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import { useHistory } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport ExitButton from '@material-ui/icons/PowerSettingsNew';\r\nimport LoginButton from '@material-ui/icons/MeetingRoom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Alert from '@material-ui/icons/Notifications';\r\nimport { Person, Home } from '@material-ui/icons';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Apps';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst [MyPageIcon, HomeIcon] = [Person, Home];\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"up\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: \"2%\",\r\n        left : \"0\",\r\n        right: \"0\",\r\n        margin : \"auto\",\r\n        backgroundColor: \"#eb4e27\",\r\n        borderRadius: \"15px\", \r\n        width: \"90%\",\r\n        maxWidth: \"44em\",\r\n        zIndex: \"1\"\r\n      },\r\n  }));\r\n  \r\n\r\nconst NavOfGuest = (props) => { // 지금은 쓰지 않는다\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n                <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n                    <HomeIcon/>\r\n                </IconButton>\r\n                <IconButton  color=\"inherit\" aria-label=\"login\" onClick={()=>{\r\n                        history.push('/login');\r\n                    }}>\r\n                    <LoginButton/>\r\n                </IconButton>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n\r\n// const Logout = async() => {\r\n//   const headers = {\r\n//     'Authorization': 'Token ' + localStorage.token\r\n//   }\r\n//   const data = {}\r\n//   const res = await axios.post('https://143.248.226.7:8000/api/user/logout', data, {headers:headers})\r\n//   // window.location.replace('/')\r\n// }\r\n\r\nconst NavOfUser = (props) => {\r\n    \r\n    const user = props.user.data.detail;\r\n    \r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n            <table style={{borderSpacing : \"1.5em 0px\"}}>\r\n                <tr>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"menu\">\r\n                            <HomeIcon onClick={() => {\r\n                            history.push('/');}} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"mypage\">\r\n                            <MyPageIcon onClick={ () => {\r\n                            history.push(\"/mypage\");\r\n                            } }/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    {/* <td >\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"logout\">\r\n                        <ExitButton onClick={()=> {\r\n                          Logout()\r\n                          localStorage.clear()\r\n                          window.location.replace('/')\r\n                          }}/>\r\n                         </IconButton>\r\n                    </Grid>\r\n                    </td> */}\r\n                </tr>                \r\n                <tr>\r\n                    <td style={{fontSize : \"0.5em\"}}>Home</td>\r\n                    <td style={{fontSize : \"0.5em\"}}>Mypage</td>\r\n                    {/* <td style={{fontSize : \"0.5em\"}}>Logout</td> */}\r\n                </tr>                \r\n            </table>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      {/* <Toolbar /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport {\r\n    NavOfGuest,\r\n    NavOfUser,\r\n}","let blank = /\\s+/g;\r\nlet special = /[\\[\\]\\{\\}\\(\\),.`~!@#$%^&*|\\\\\\'\\\";:\\/?]/gi;\r\n\r\nexport const CheckSpaceNSpecial = (string) => {\r\n    // console.log(\"string\", string)\r\n    return blank.test(string) || special.test(string);\r\n}\r\n\r\n// export const CheckSpecial = (string) => {\r\n\r\n//     return special.test(string);\r\n// }\r\n\r\nexport const ReplaceSpaceNSpecial = (string) => {\r\n\r\n    return string.replace(blank, \"\").replace(special, \"\");\r\n}\r\n\r\n// export const ReplaceSpecial = (string) => {\r\n\r\n//     return string.replace(special, \"\");\r\n// }","// MESSAGES ACTIONS TYPES\r\nexport const ON_MESSAGES_VALUE_CHANGE = 'ON_MESSAGES_VALUE_CHANGE';\r\nexport const ON_MESSAGES_READING = 'ON_MESSAGES_READING';\r\nexport const ON_MESSAGES_READ = 'ON_MESSAGES_READ';\r\nexport const ON_MESSAGES_INIT = 'ON_MESSAGES_INIT';\r\n\r\n// USER ACTIONS TYPES\r\nexport const USER_GET_PENDING = 'USER_GET_PENDING';\r\nexport const USER_GET_SUCCESS = 'USER_GET_SUCCESS';\r\nexport const USER_GET_FAILURE = 'USER_GET_FAILURE';\r\nexport const GIVEUSER = 'user/GIVEUSER';\r\n\r\n// Question List Types\r\nexport const QUESTIONLIST_GET_PENDING = 'questionlist/QUESTIONLIST_GET_PENDING';\r\nexport const QUESTIONLIST_GET_SUCCESS = 'questionlist/QUESTIONLIST_GET_SUCCESS';\r\nexport const QUESTIONLIST_GET_ERROR = 'questionlist/QUESTIONLIST_GET_ERROR';\r\nexport const QUESTIONLIST_DELETE = 'questionlist/QUESTIONLIST_DELETE'\r\nexport const QUESTIONLIST_SOCKET_READ = 'questionlist/QUESTIONLIST_SOCKET_READ';\r\n// export const QUESTIONLIST_DELETE = 'questionlist/QUESTIONLIST_DELETE'\r\n// export const QUESTIONLIST_INIT = 'questionlist/QUESTIONLIST_INIT'\r\n\r\n// SESSION ACTIONS TYPES\r\nexport const SETLIVE = 'session/setlive';\r\nexport const SESSION_GET_PENDING = 'SESSION_GET_PENDING';\r\nexport const SESSION_GET_SUCCESS = 'SESSION_GET_SUCCESS';\r\nexport const SESSION_GET_FAILURE = 'SESSION_GET_FAILURE';\r\n\r\n// MY_SESSION ACTIONS TYPES\r\nexport const MY_SETLIVE = 'mySession/setlive';\r\nexport const MY_SESSION_GET_PENDING = 'MY_SESSION_GET_PENDING';\r\nexport const MY_SESSION_GET_SUCCESS = 'MY_SESSION_GET_SUCCESS';\r\nexport const MY_SESSION_GET_FAILURE = 'MY_SESSION_GET_FAILURE';\r\n\r\n// Entered Session Types\r\nexport const ENTEREDSESSION_GET_PENDING = 'enteredSession/ENTEREDSESSION_GET_PENDING';\r\nexport const ENTEREDSESSION_GET_SUCCESS = 'enteredSession/ENTEREDSESSION_GET_SUCCESS';\r\nexport const ENTEREDSESSION_GET_ERROR = 'enteredSession/ENTEREDSESSION_GET_ERROR';\r\nexport const ENTEREDSESSION_DELETE = 'enteredSession/ENTEREDSESSION_DELETE'\r\n\r\n// Volume Type\r\nexport const PATCH_VOLUME = 'volume/PATCH_VOLUME';\r\nexport const CLEAR_VOLUME = 'volume/CLEAR_VOLUME';","import {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction userGetApi(token){\r\n    const config = {\r\n                headers: { Authorization: 'Token ' + token }\r\n            }\r\n    return axios.get('https://143.248.226.7:8000/api/user/read', config)\r\n}\r\n\r\n\r\nexport const getUserInfo = token => dispatch => {\r\n\r\n    return userGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: USER_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: USER_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, {useState, memo} from 'react';\r\nimport axios from \"axios\";\r\nimport { CheckSpaceNSpecial, ReplaceSpaceNSpecial } from \"../CheckString\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoginButton from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport \"../../styles/style.css\";\r\nimport {getUserInfo} from \"../../actions/UserActions\";\r\nimport { SignalCellularNoSimOutlined } from '@material-ui/icons';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .MuiTextField-root': {\r\n      width: '25ch',\r\n    },\r\n    '& > *': {\r\n    },\r\n  },\r\n  list: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst style = {\r\n    login : {\r\n        position : \"absolute\",\r\n        display:\"flex\",\r\n        width:\"100%\",\r\n        justifyContent:\"center\",\r\n        flexDirection: \"column\",\r\n        top : \"43%\",\r\n    },\r\n    loginWrapper : {\r\n        position : \"fixed\",\r\n        backgroundColor : \"white\",\r\n        width : \"100%\",\r\n        height : \"100%\",\r\n    },\r\n    loginCard : {\r\n        top : \"18%\",\r\n        // backgroundColor: \"skyblue\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"15px\",\r\n        boxShadow: \"1px 1px 2px 2px black\",\r\n        paddingTop: \"1em\",\r\n        maxWidth : \"23em\",\r\n        width : \"16em\",\r\n        height : \"21em\",\r\n        position : \"fixed\",\r\n    },\r\n    loginBtnWrapper : {\r\n        position: \"absolute\",\r\n        top : \"88%\",\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    loginBtn : {\r\n\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    infoIcon : {\r\n        color :\"grey\",\r\n        position: \"absolute\",\r\n        top: \"88%\",\r\n        right: \"4%\",\r\n        cursor: \"pointer\",\r\n    },\r\n    logo : {\r\n        height: \"2.3em\",\r\n        width : \"2.3em\", \r\n        backgroundImage:\"url('/static/logo.png')\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"contain\",\r\n    }\r\n}\r\n\r\nconst LoginPage = (props) => { \r\n    const history = useHistory();\r\n    if (localStorage.token) {\r\n      history.push('/main')\r\n    }\r\n\r\n    const [loginId, setLoginId] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [openTwo, setOpenTwo] = useState(false);\r\n    const [lengthError, setLengthError] = useState(false);\r\n    const [valueError, setValueError] = useState(false);\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleClickTwo = () => {       \r\n        setOpenTwo(true);\r\n    };\r\n    \r\n    const handleCloseTwo = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpenTwo(false);\r\n    };\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // const [id, setId] = useState(\"\") \r\n\r\n    const Login = async({loginId, loginPassword}) => {\r\n      let dataToSubmit = {\r\n        username : loginId,\r\n        password : loginPassword\r\n      }\r\n      axios.post('https://143.248.226.7:8000/api/user/login', \r\n      dataToSubmit,\r\n      ).then((res) => {\r\n        // console.log(\"res\", res)\r\n        window.localStorage.setItem('token', res.data.detail.token)\r\n        dispatch(getUserInfo(res.data.detail.token));\r\n        // console.log(res);\r\n        if (props.location.before)\r\n            history.push(props.location.before)\r\n        else\r\n            history.push('/main')\r\n      }).catch(\r\n        (err) => handleClick())\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={style.loginWrapper}>\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.loginCard}>\r\n                        <Grid container justify=\"center\">\r\n                             <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">ASK</p>\r\n                             {/* <div style={{display:\"flex\", paddingBottom: \"4px\", alignItems: \"center\"}}>\r\n                                 <ContactSupportIcon style={{fontSize:40}}/>\r\n                            </div> */}\r\n                            <div style={style.logo}>\r\n                            </div>\r\n\r\n                            <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">LIVE</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginBottom:\"0\",fontSize : \"0.8em\"}}>궁금한 점을 자유롭게 물어보고</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginTop: \"8px\", fontSize : \"0.8em\"}}>라이브로 생생한 답변을 들어보세요!</p>   \r\n                        </Grid>\r\n                        <div style={style.login}>\r\n                            <Grid style={{height: \"5em\"}} container justify=\"center\">\r\n                                <TextField \r\n                                error={valueError || lengthError}\r\n                                helperText={valueError ? \"특수문자와 공백은 불가합니다\"\r\n                                                    : lengthError ? \"닉네임은 6자까지만 가능합니다.\"\r\n                                                        : \"\" }\r\n                                value={loginId}\r\n                                placeholder=\"닉네임\"\r\n                                size=\"1em\"\r\n                                style= {{marginBottom : \"1em\"}}\r\n                                id=\"outlined-search\" type=\"search\" variant=\"outlined\"\r\n                                onChange={(event) => {\r\n                                    // console.log(\"TARGET ::\", event.target.value)\r\n                                    if (event.target.value.length > 6)\r\n                                        setLengthError(true)\r\n                                    else if (CheckSpaceNSpecial(event.target.value)){\r\n                                        setValueError(true)\r\n                                        ReplaceSpaceNSpecial(event.target.value)\r\n                                    }\r\n                                    else {\r\n                                        // console.log(\"TARGET IN ::\", event.target.value)\r\n                                        setValueError(false)\r\n                                        setLengthError(false)\r\n                                        setLoginId(event.target.value.substring(0, 6))\r\n                                    }\r\n                                    // console.log(\"LOGIN ID :: \", loginId)\r\n                                }\r\n                                }\r\n                                />\r\n                            </Grid>\r\n                            <Grid container justify=\"center\">\r\n                                <TextField\r\n                                style={{position:\"absolute\"}}\r\n                                id=\"outlined-search\" placeholder=\"패스워드\" type=\"password\" variant=\"outlined\"\r\n                                onChange={(event) => setLoginPassword(event.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </div>\r\n                \r\n                        <Grid container justify=\"center\">\r\n                            <div style={style.loginBtnWrapper}>\r\n                                <button style={style.loginBtn} onClick={() => Login({loginId, loginPassword})}>\r\n                                    <span style={{fontSize: \"1.2em\"}} className=\"BMJUA\">로그인</span>\r\n                                </button>\r\n                                {/* <button type=\"button\" onClick={() => loginMatch(loginId)}/> */}\r\n                            </div>\r\n                        </Grid>\r\n                        <InfoIcon \r\n                        onClick={handleClickTwo}\r\n                        style={style.infoIcon}/>\r\n                    </div>      \r\n                </Grid>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                    유효하지 않은 정보입니다.\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar \r\n                style={{position:\"fixed\", top: \"80%\"}}\r\n                open={openTwo} autoHideDuration={6000} onClose={handleCloseTwo}>\r\n                    <Alert \r\n                    style={{backgroundColor:\"black\"}}\r\n                    onClose={handleCloseTwo} severity=\"error\">\r\n                    중복되지 않은 닉네임으로<br/>\r\n                    회원가입과 동시에 로그인이<br/>\r\n                    가능합니다!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default LoginPage","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(holeId){\r\n    return axios.get('https://143.248.226.7:8000/api/hole/' + holeId + '/questions');\r\n}\r\n\r\nconst getQuestionlist = holeId => dispatch => {\r\n    // console.log('-----getQuestionlist-----')\r\n    dispatch({type: QUESTIONLIST_GET_PENDING}); // ��û�� ���۵Ǿ��ٴ� ���� �˸�\r\n\r\n    // ��û ����\r\n    return getApi(holeId).then(\r\n        (response) => {\r\n            // console.log(response);\r\n            dispatch({ type: QUESTIONLIST_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: QUESTIONLIST_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getQuestionlist;\r\n","import {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    MY_SESSION_GET_PENDING,\r\n    MY_SESSION_GET_SUCCESS,\r\n    MY_SESSION_GET_FAILURE,\r\n  } from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction sessionGetApi(){\r\n    return axios.get('https://143.248.226.7:8000/api/hole')\r\n}\r\n\r\nfunction userSessionGetApi(token){\r\n    const config = {\r\n        headers: {Authorization: 'Token ' + token}\r\n    }\r\n    return axios.get('https://143.248.226.7:8000/api/user/read/hole',\r\n        config\r\n    )\r\n}\r\n\r\nexport const getSessionInfo = () => dispatch => {\r\n    // console.log('-----getSessionInfo start-----')\r\n    dispatch({type: SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return sessionGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\nexport const getUserSessionInfo = token => dispatch => {\r\n    dispatch({type: MY_SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userSessionGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: MY_SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: MY_SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import getQuestionlist from \"../../actions/QuestionListActions\";\r\nimport { getSessionInfo } from '../../actions/SessionActions';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport { Progress } from 'antd';\r\nimport React, {useState} from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport axios from \"axios\";\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../styles/style.css\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { CardActions, Divider } from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      flexGrow: 1,\r\n      justifyContent : \"center\",\r\n      maxWidth:\"40em\",\r\n      \r\n      \"& > *\": {\r\n        margin: \"0 1em 1em 1em\",\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(40)\r\n      }\r\n    },\r\n    paper: {\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      paddingTop: \"0.5em\",\r\n      // paddingBottom: \"1em\",\r\n      maxWidth: \"20em\",\r\n      minWidth: \"17em\",\r\n      cursor:\"pointer\",\r\n\r\n    },\r\n    title: {\r\n      width: \"100%\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      fontSize: \"14\",\r\n      // paddingBottom: \"1em\"\r\n    },\r\n    successContent: {\r\n      width: \"80%\",\r\n      position: \"relative\",\r\n      // top: \"5px\",\r\n      transform: \"translate(0,-2em)\",\r\n      // display: \"inline-Block\",\r\n    },\r\n    content: {\r\n      width: \"80%\",\r\n      position: \"relative\",\r\n      // top: \"5px\",\r\n      transform: \"translate(0,-2em)\",\r\n      // display: \"inline-Block\",\r\n    },\r\n    date: {\r\n      position: \"relative\",\r\n      top: \"10px\",\r\n      display: \"inline-Block\",\r\n    },\r\n    work_field: {\r\n      fontSize:\"xx-small\",\r\n      marginLeft: \"1em\",\r\n    },\r\n    wish: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questions: {\r\n      fontSize:\"x-small\",\r\n      marginLeft: \"0.5em\",\r\n    },\r\n    questionIcon : {\r\n      marginLeft: \"2.5em\"\r\n    },\r\n    avatarWrapper : {\r\n      display: \"table\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      transform: \"translate(0,-4.9em)\",\r\n    },\r\n    avatar : {\r\n      width: theme.spacing(14),\r\n      height: theme.spacing(14),\r\n      // opacity: 0.7,\r\n      \r\n    },\r\n    check : {\r\n      position: \"absolute\",\r\n      paddingTop: \"80px\",\r\n    },\r\n\r\n    chipGrid : {\r\n      width: \"15%\",\r\n      position: \"absolute\",\r\n      paddingTop: \"110px\"\r\n    },\r\n\r\n    wishButton : {\r\n      width:\"250px\",\r\n      height: \"35px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: '#F24822',\r\n      marginTop: '7px',\r\n      zIndex: \"1\",\r\n      transform : \"translate(0,-5.5em)\",\r\n    },\r\n    hostProfile : {\r\n      width:\"110px\",\r\n      height: \"110px\",\r\n      textAlign: \"center\",\r\n      borderRadius: \"50%\",\r\n      marginTop: '7px',\r\n      zIndex: \"1\",\r\n      transform : \"translate(0,-21.5em)\",\r\n      opacity: \"0\",\r\n      cursor:\"pointer\",\r\n    },\r\n    frame : {\r\n      position:\"absolute\",\r\n      width : \"10px\",\r\n      height : \"10px\",\r\n      backgroundColor:\"skyblue\",\r\n      transform : \"translate(-2em,-0.5em)\",\r\n    }\r\n\r\n  }));\r\n\r\nconst onClickWish = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n  axios.patch(\r\n    \"https://143.248.226.7:8000/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    // console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    // console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n}\r\n\r\nconst onClickWishCancel = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  axios.patch(\r\n    \"https://143.248.226.7:8000/api/reservation/hole/\" + sessionId + \"/wishcancel\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    // console.log('onClickWishCacel 응답 받음', response)\r\n  }).catch((e) => {\r\n    // console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  });;\r\n}\r\n\r\nconst CurrentReserveSessionsCards = ({currentReserveSessions}) => {\r\n  // console.log(\"컴포넌트 시작 Enter : CurrentReserveSessionsCards\")\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = () => {       \r\n         setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.user)\r\n    let i = 0;\r\n    return (\r\n        <>\r\n        \r\n        <div className={classes.root}>\r\n            {currentReserveSessions.map((session) => (\r\n                <>\r\n                {/* {console.log(session)} */}\r\n                <Paper elevation={3} className={classes.paper} onClick={() => {\r\n                  history.push('/preQuestions/'+session.id)\r\n                  dispatch(getQuestionlist(session.id))\r\n                }}>\r\n                <Grid container justify=\"center\">\r\n                  <Progress \r\n                    className={classes.progress}\r\n                    strokeWidth=\"5\"\r\n                    type=\"dashboard\"\r\n                    strokeColor=\"#F24822\"\r\n                    trailColor=\"#dddddd\"\r\n                    gapDegree = \"85\"\r\n                    width={140}\r\n                    format={percent => {\r\n                      if(percent == 100){\r\n                        return(\r\n                          <>\r\n                          <div className={classes.avatarWrapper}>\r\n                            <Avatar className={classes.avatar} src={session.host_profile_image?\r\n                            `https://143.248.226.7:8000${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                            \r\n                            {/* <CheckIcon size=\"large\" style={{fontSize: \"55\", opacity: 0.6, position:\"absolute\", top:\"25\", left:\"30\"}} color='error'/> */}\r\n                          </div>\r\n                          </>\r\n                        )\r\n                      }else{\r\n                        return(\r\n                          <>\r\n                          {/* {percent} Days */}\r\n                          <div className={classes.avatarWrapper}>\r\n                          <Avatar className={classes.avatar} src={session.host_profile_image?\r\n                            `https://143.248.226.7:8000${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                          </div>\r\n                          {/* <div className=\"NotoSans3\" style={{fontSize:\"large\", position:\"absolute\", transform:\"translate(1em, -3em)\"}}>안녕안녕</div> */}\r\n                          </>\r\n                        )}\r\n                      \r\n                      }}\r\n                    percent={(session.hole_reservations) ? \r\n                      Math.ceil(\r\n                        session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                        session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0}/>\r\n                          \r\n                        {session.hole_reservations.target_demand === 0 || session.hole_reservations.guests.length / session.hole_reservations.target_demand >= 1 ?\r\n                          <>\r\n                          <div className={classes.commingSoon}></div>\r\n                          </>\r\n                          :\r\n                          <>\r\n                          </>\r\n                        }\r\n                        <Grid container className={classes.chipGrid} justify=\"center\" alignItems=\"center\">\r\n                          <Chip \r\n                            size=\"small\"  \r\n                            color=\"default\" \r\n                            label={<>\r\n                          <span className=\"NanumGothic3\">{session.hole_reservations.target_demand == 0? \r\n                            100 : Math.ceil(session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100)}%달성</span></>} \r\n                          />\r\n                        </Grid>\r\n                        \r\n                        <Grid justify=\"flex-start\" className={classes.content}>\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {session.title}\r\n                            </span>\r\n                          <Typography variant='caption' component=\"div\" color=\"textSecondary\">\r\n                            {session.host_username? session.host_username : \"익명\"} \r\n                            <span className={classes.work_field}>\r\n                            {session.host_work_company? session.host_work_company : \" \"}\r\n                            {session.host_work_field? \" | \"+session.host_work_field : \" \"}\r\n                            </span>\r\n                          </Typography>\r\n                          <Grid item className={classes.date}>\r\n                          <Typography variant='caption' component=\"p\" >\r\n                            <span className=\"fontGradi NanumGothic3\" style={{fontSize: \"1.2em\", color: \"#D95032\"}}>\r\n                              <span >{`예정일자 `}</span>\r\n                            <Moment format=\"MM월 DD일 A h:mm\">\r\n                              {session.reserve_date}\r\n                            </Moment></span>\r\n                          </Typography>\r\n\r\n                          <Grid container alignItems=\"stretch\" >\r\n                            <div style={{color:\"#F24822\", paddingTop:\"0.4em\"}}><FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon></div>\r\n                            <p className={classes.wish} >\r\n                            <span className=\"NanumGothic3\">찜 {session.hole_reservations.guests.length}/{session.hole_reservations.target_demand}</span>\r\n                            </p>\r\n                            <div className={classes.questionIcon} style={{color:\"#F24822\", paddingTop:\"0.5em\"}}><CommentIcon fontSize=\"small\"></CommentIcon></div>\r\n                            <p className={classes.questions}>\r\n                            <span className=\"NanumGothic3\">질문 {session.count_questions}개</span>\r\n                            </p>\r\n                          </Grid>\r\n                        </Grid> \r\n                        </Grid>\r\n                        </Grid>\r\n                </Paper>\r\n\r\n                <Grid style={{width:\"100%\", margin: \"auto\", height: \"1em\", display: \"flex\", justifyContent: \"center\",}}>       \r\n                <Button \r\n                className={classes.wishButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                clickable='true' \r\n                startIcon={<FavoriteBorderIcon fontSize=\"small\"></FavoriteBorderIcon>}\r\n                onClick={() => {\r\n                  if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                  }else{\r\n                    session.hole_reservations.guests.indexOf(user.data.detail.id) === -1 ?\r\n                  <>\r\n                  {onClickWish(session.id)}\r\n                  {handleClick()}\r\n                  {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                  </>\r\n                  : \r\n                  <>\r\n                  {onClickWishCancel(session.id)}\r\n                  {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                  </>}\r\n                  }\r\n                  }\r\n                  >{Object.keys(user.data).length != 0 && session.hole_reservations.guests.indexOf(user.data.detail.id) != -1 ? \"취소하기\" : \"찜하기\"}</Button>\r\n                  </Grid> \r\n                  <Grid style={{width:\"100%\", margin: \"auto\", height: \"1em\", display: \"flex\", justifyContent: \"center\",}}>  \r\n                  <div className={classes.hostProfile} onClick={() => {\r\n                    history.push({\r\n                      pathname: '/mypage/' + session.host_username,\r\n                      state:{host : session}})\r\n                  }}>\r\n                  \r\n                  </div>\r\n                  </Grid>\r\n                  \r\n            </>\r\n            ))\r\n            }\r\n        </div>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">라이브가 열리면 알려줄게요! </span>\r\n                    </Alert>\r\n        </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrentReserveSessionsCards;","import { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport EnterIcon from '@material-ui/icons/MeetingRoom';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { useSelector } from \"react-redux\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    padding :\"0px\",\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"0 3px 5px 1px #3B568C\",\r\n    backgroundColor : \"rgba(255,255,255,1)\",\r\n    cursor : \"pointer\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n        paddingRight: \"5px\",\r\n        // backgroundColor : \"skyblue\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        marginTop: \"8px\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 6px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        marginBottom : \"3px\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"5em\",\r\n        height : \"5em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -1.6em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -0.5em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst OtherLiveSessionsCards = ({otherLiveSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>?</span>;\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {otherLiveSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card \r\n            key={session.livehole_id} \r\n            className={classes.root}\r\n            >\r\n                <CardContent \r\n                onClick={()=>{\r\n                    if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                    }else{\r\n                    history.push({\r\n                        pathname: \"/session/live\",\r\n                        search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                        state : {\r\n                            hostName : session.host_username,\r\n                            hostImage : session.host_profile_image,\r\n                        }\r\n                })\r\n                }}}\r\n                style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                    <div style={style.profileimage}>\r\n                        <div className={classes.avatarRoot}>\r\n                        <Avatar alt=\"Remy Sharp\" style={{transform:\"translate(5px, 8px)\"}} className={classes.large} src={session.host_profile_image?\r\n                            `https://143.248.226.7:8000${session.host_profile_image}`\r\n                            : \"/static/reigns/1.jpg\"} />\r\n                            \r\n                        </div>\r\n                        <div style={style.livelogo1_back}/>\r\n                        <div style={style.livelogo1}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTime}>\r\n                        <PeopleIcon style={{marginRight : \"3px\", padding:\"0px\"}} fontSize=\"small\"/>\r\n                        <span\r\n                        className=\"NanumGothic3\"\r\n                        style={{marginRight: \"2px\", fontSize: \"13px\", color: \"black\"}}>\r\n                            {session.count_participant}명\r\n                        </span>\r\n                        <span \r\n                        className=\"fontGradi NanumGothic3\"\r\n                        style={{fontSize: \"0.7em\", color: \"#D95032\"}}>\r\n                        <Moment format=\" · mm분 전 시작\">\r\n                            {now - toDate(session.reserve_date)}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {/* {session.title.indexOf(\" \") > 7 ? \r\n                                session.title.splice(7, 0, \" \")\r\n                                :\r\n                                null                            \r\n                                } */}\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n               \r\n                \r\n                </CardContent>\r\n                    <div \r\n                    style={{position: \"absolute\", transform:\"translate(2.8em, -3.5em)\"}}>\r\n             \r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n\r\n                \r\n                    </div>\r\n            </Card>\r\n  \r\n   \r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OtherLiveSessionsCards;\r\n","import { useHistory } from 'react-router';\r\nimport React from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../../styles/style.css\";\r\nimport \"../../App.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 250,\r\n      height: 250,\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n      float :\"left\",\r\n      margin:\"10px 10px\",\r\n    },\r\n    media: {\r\n        cursor: \"pointer\",\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    cardContent: {\r\n        height: \"30px\"\r\n    },\r\n    cookieWrapper: {\r\n        backgroundColor:\"#EEAC4B\",\r\n        backgroundPosition:\"center center\",\r\n        display : \"block\",\r\n        width: \"6.3em\",\r\n        height: \"6.3em\",\r\n        marginLeft: \"1em\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        overflow: \"hidden\",\r\n\r\n        \r\n    },\r\n    useCookie: {\r\n        margin: \"auto\",\r\n        backgroundImage: \"url('/static/cookieMould.png')\",\r\n        backgroundPosition : \"center center\",\r\n        backgroundSize: \"100%\",\r\n        width: \"6.3em\",\r\n        height : \"6.3em\",\r\n        overflow: \"hidden\",\r\n    },\r\n    living : {\r\n        background: \"url('/static/living.gif') no-repeat\",\r\n        width : \"17px\",\r\n        height: \"17px\",\r\n        backgroundSize: \"contain\",\r\n        position:\"absolute\",\r\n        transform : \"translate(13.2em, -13.7em)\",\r\n    }\r\n  }));\r\n  \r\n\r\nconst style = {\r\n    contentWrapper : {\r\n        // backgroundColor : \"skyblue\",\r\n        width : \"13.5em\",\r\n        height : \"6em\",\r\n        margin : \"0.7em 1.05em 1.05em 1.05em\",\r\n    },\r\n    contentTime : {\r\n        // backgroundColor : \"pink\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n    },\r\n    contentTitle : {\r\n        // backgroundColor : \"coral\",\r\n        width : \"13.5em\",\r\n        height : \"1.8em\",\r\n        whiteSpace : \"\"\r\n    },\r\n    contentName : {\r\n        // backgroundColor : \"yellow\",\r\n        width : \"13.5em\",\r\n        height : \"1em\",\r\n        marginBottom : \"3px\"\r\n    },\r\n    contentWork : {\r\n        // backgroundColor : \"green\",\r\n        width : \"13.5em\",\r\n        height : \"1.2em\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    live2 : {\r\n        display: \"inline-block\",\r\n        backgroundImage : \"url('/static/Live_2.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        width : \"40px\",\r\n        height : \"28px\",\r\n    },\r\n\r\n}\r\n\r\nconst MyLiveSessionsCard = ({session}) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    \r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n  return (\r\n    <>\r\n    {/* <div className=\"padding\" onClick={() => {history.push({\r\n        pathname: \"/session?state=mylive&i_r_d=\"+ session.roomId + \"&channelNum=\" + session.channelNum\" \r\n    })}}> */}\r\n    <div \r\n    onClick={()=>{\r\n                history.push({\r\n                    pathname: \"/session/live\",\r\n                    search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                    state : {\r\n                        hostName : session.host_username,\r\n                        hostImage : session.host_profile_image,\r\n                    }\r\n            })}}\r\n    style={{cursor:\"pointer\"}}>\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n            <br/>\r\n            <div\r\n            style={{backgroundImage: session.host_profile_image? \"url('https://143.248.226.7:8000\"+session.host_profile_image + \"')\" : \"url('/static/reigns/1.jpg')\"}}\r\n            className={classes.cookieWrapper}\r\n\r\n            ><div className={classes.useCookie}></div> </div>\r\n            <div style={style.contentWrapper}>\r\n                <div style={style.contentTime}>\r\n                    <Grid container alignItems=\"center\">\r\n\r\n                    <div\r\n                    style={style.live2}\r\n                    />\r\n                    <span\r\n                    style={{fontSize:\"0.8em\"}}\r\n                    className=\"NanumGothic3\"\r\n                    >\r\n                        {session.count_participant}명\r\n                    </span>\r\n                    <span \r\n                    className=\"NanumGothic3\"\r\n                    style={{fontSize: \"0.8em\", color:\"rgba(0, 0, 0, 0.4)\", margin : \"0px 3px\"}}>\r\n                        ·\r\n                    </span>\r\n                    <span className=\"fontGradi BMJUA\" style={{fontSize:\"0.9em\"}}>\r\n                        <Moment format=\"mm분 전 시작\">\r\n                             {now - toDate(session.reserve_date)}\r\n                        </Moment>\r\n                    </span>\r\n                    </Grid>\r\n                </div>\r\n                <div style={style.contentTitle}>\r\n                    <span className=\"BMDOHYEON\" style={{fontSize:\"1em\"}}>\r\n                        {session.title}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentName}>\r\n                    <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                        {session.host_username}\r\n                    </span>\r\n                </div>\r\n                <div style={style.contentWork}>\r\n                    <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {/* <CardMedia\r\n            className={classes.media}\r\n            image={\"/static/live_IU.png\"}\r\n            title={session.title}\r\n            onClick={()=>{\r\n                history.push(\"/session/live?roomId=\" + session.livehole_id + \"&channelNum=\" + session.livehole_id)\r\n            }}\r\n            /> */}\r\n            {/* <div \r\n             <CardHeader\r\n            avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {session.host_username}\r\n                </Avatar>\r\n            }\r\n            action={\r\n                <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n                </IconButton>\r\n            }\r\n            title={session.title}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"mm분 전 시작\">\r\n                {toDate(session.reserve_date) - now}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <div className=\"centered\">\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {session.description}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent> \r\n             <CardActions disableSpacing>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n            </IconButton>\r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon/>\r\n            </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography paragraph>\r\n                    라이브 중\r\n                </Typography>\r\n            </CardContent>\r\n            </Collapse> */}\r\n        <div className={classes.living}/>\r\n        </Card>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MyLiveSessionsCards = ({myLiveSessions}) => {\r\n    return (\r\n        <>\r\n            {myLiveSessions.map((session) => (\r\n                <>\r\n                <MyLiveSessionsCard session={session} />\r\n                </>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyLiveSessionsCards;","import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\"\r\nimport React, {useMemo, useState} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport \"../../App.css\"\r\nimport \"../../styles/style.css\"\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"17em\",\r\n    height: \"11.5em\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    borderRadius: \"0px\",\r\n    boxShadow: \"0 0 0 0\",\r\n    backgroundColor : \"rgba(255,255,255,0)\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n  avatarRoot: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(11),\r\n    height: theme.spacing(11),\r\n    border : \"1px solid rgba(0,0,0,0.3)\",\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        width : \"6em\",\r\n        height : \"10em\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        float : \"right\",\r\n        width : \"9em\",\r\n        height : \"10em\",\r\n    },\r\n    contentTime: {\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n        alignItems: \"center\",\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"coral\",\r\n    },\r\n    contentTitle: {\r\n        width : \"9em\",\r\n        height : \"4em\",\r\n        textOverflow: \"ellipsis\",\r\n        // backgroundColor : \"grey\",\r\n        margin: \"4px 0px 0px 0px\",\r\n    },\r\n    contentName: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"yellow\",\r\n    },\r\n    contentField: {\r\n        width : \"inherit\",\r\n        height : \"1.5em\",\r\n        // backgroundColor : \"green\",\r\n        textOverflow:\"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow:\"hidden\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"6em\",\r\n        height : \"4em\",\r\n        // backgroundColor : \"pink\",\r\n        overflow: \"auto\",\r\n    },\r\n    profileimage : {\r\n        width : \"6em\",\r\n        height : \"6em\",\r\n    },\r\n    livelogo1: {\r\n        backgroundImage : \"url('/static/Live_1.png')\",\r\n        backgroundSize : \"contain\",\r\n        width : \"40px\",\r\n        height: \"25px\",\r\n        transform: \"translate(2.1em, -2.1em)\",\r\n        zIndex : \"3\",\r\n    },\r\n    livelogo1_back: {\r\n        backgroundColor: \"white\",\r\n        backgroundSize : \"contain\",\r\n        width : \"22px\",\r\n        height: \"12px\",\r\n        transform: \"translate(2.7em, -1em)\",\r\n        zIndex : \"0\",\r\n    }\r\n}\r\n\r\nconst HostConfirmedSessionsCards = ({hostConfirmedSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState(\"제목\");\r\n    const [subtitle, setSubtitle] = useState(\"제목\");\r\n    const [reserveDate, setReserveDate] = useState(\"시작\");\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    function rand(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {hostConfirmedSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card key={session.livehole_id} className={classes.root}>\r\n                <CardContent style={{padding : \"5px 5px 20px 5px\", backgroundColor : \"rgba(255,255,255,0)\"}}>\r\n                <div style={style.imageWrapper}>\r\n                <div style={style.profileimage}>\r\n                    <div className={classes.avatarRoot}>\r\n                        <Avatar alt=\"Remy Sharp\" className={classes.large} src={session.host_profile_image?\r\n                        `https://143.248.226.7:8000${session.host_profile_image}`\r\n                        : \"/static/reigns/1.jpg\"} />\r\n                    </div>\r\n                </div>\r\n                <div style={style.buttonWrapper}>\r\n                    <div \r\n                    style={{posision: \"absolute\",width:\"5em\", paddingLeft:\"0.9em\",marginTop:\"1.2em\"}}>\r\n                    <Grid container justify=\"center\">\r\n                        <HelpIcon \r\n                        onClick={()=>{\r\n                            setTitle(session.title);\r\n                            setSubtitle(session.description);\r\n                            setReserveDate(<>\r\n                                <Moment format=\"MM월 DD일 A h:mm\">\r\n                                     {toDate(session.reserve_date)}\r\n                                </Moment>\r\n                                </>);\r\n                            handleClick();\r\n                        }}\r\n                        style={{color: \"rgba(255,255,255,0.9)\", borderRadius: \"100%\", padding : \"2px\", backgroundColor: \"#1C418C\" }}/>\r\n\r\n                    </Grid>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div style={style.content}>\r\n                    <div style={style.contentTitle}>\r\n                        <div className=\"contentTitle\">\r\n                            <span className=\"BMDOHYEON\" style={{color: \"#1C418C\", fontSize: \"1.1em\"}}>\r\n                                {session.title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={style.contentTime}>\r\n                        <span \r\n                        className=\"NanumGothic3 fontGradi\"\r\n                        style={{fontSize: \"0.9em\", color: \"black\"}}>\r\n                        <Moment format=\"MM.DD A h:mm\">\r\n                            {toDate(session.reserve_date)}\r\n                        </Moment>\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentName}>\r\n                        <span className= \"NanumGothic3\" style={{fontSize : \"0.8em\"}}>\r\n                            {session.host_username}\r\n                        </span>\r\n                    </div>\r\n                    <div style={style.contentField}>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {session.host_work_company ? \r\n                            <>\r\n                             {session.host_work_company}\r\n                            </>\r\n                             : null}\r\n                            {session.host_work_field ? \r\n                            <>\r\n                             {\" | \" + session.host_work_field}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !session.host_work_company && !session.host_work_field ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n        <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert \r\n                    style={{color: \"black\", backgroundColor:\"white\"}}\r\n                    onClose={handleClose} severity=\"error\">\r\n                    <span className=\"BMJUA\">제목 :</span> {title} <br/>\r\n                    <span className=\"BMJUA\">설명 :</span> {subtitle} <br/>\r\n                    <span className=\"BMJUA\">시작 :</span> {reserveDate}\r\n                    </Alert>\r\n        </Snackbar>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nexport default HostConfirmedSessionsCards;","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    balloonWhite : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/Balloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    balloonColor : {\r\n        backgroundImage: \"url('/static/BalloonColor.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n    mike : {\r\n        position : \"absolute\",\r\n        width :\"2em\", \r\n        height: \"2em\", \r\n        margin:\"0.7em 0em 0.5em 0.6em\",\r\n        backgroundImage: \"url('/static/mike.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize : \"contain\",\r\n        transform :\"translate(1.5em, 0.3em)\",\r\n    }\r\n}\r\n\r\n\r\nconst SessioinCreateButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={props.noMyLive? \r\n                {backgroundColor: \"white\"}\r\n                :\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push(\"/createSession\");\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>Live Q&A을 개설해서</p>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>경험을 나누어 보세요</p>\r\n                        <p\r\n                        className=\"NanumGothic4\"\r\n                        style={props.noMyLive?\r\n                            {color: \"#163780\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                            :\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(개설하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        props.noMyLive?\r\n                        style.balloonColor\r\n                        :\r\n                        style.balloonWhite\r\n                        }>\r\n                        <div\r\n                        style={style.mike}/>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       flexGrow: 1,\r\n//       padding: theme.spacing(2),\r\n//     },\r\n//   }));\r\n\r\n\r\n// const style = {\r\n//     button : {\r\n//         position: 'relative',\r\n//         width: '60%',\r\n//         minWidth : \"19em\",\r\n//         marginBottom: '20px',\r\n//         backgroundColor: \"rgb(255,255,255)\",\r\n//         border : \"3px solid #F24822\"\r\n//     },\r\n//     buttonIcon: {\r\n//         fontSize: 30,\r\n//         color: 'white',\r\n//         backgroundColor: '#F24822',\r\n//         borderRadius: '50%',\r\n//     },\r\n//     buttonText: {\r\n//         align: 'left',\r\n//         fontSize: '1em',\r\n//         margin: '8px',\r\n//     },\r\n// }\r\n\r\n\r\n\r\n\r\n{/* <>\r\n<div className={classes.root}>\r\n    <Grid container justify=\"center\">\r\n      <Button\r\n        style={style.button}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        endIcon={<AddIcon style={style.buttonIcon} />}\r\n        onClick={() => {\r\n          history.push(\"/createSession\");\r\n        }}\r\n      >\r\n        <div style={style.buttonText} align=\"left\" className=\"NanumGothic3\">\r\n          Live Q&A를 개설해서\r\n          <br></br>\r\n          경험을 함께 나누어보세요\r\n        </div>\r\n      </Button>\r\n    </Grid>\r\n  </div>\r\n  </> */}\r\n\r\n\r\nexport {SessioinCreateButton}\r\n","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    textWrap : {\r\n        position: \"absolute\",\r\n        // backgroundColor: \"pink\",\r\n        height : \"4em\",\r\n        margin : \"1em 0.5em\",\r\n        width : \"9em\",\r\n        transform :\"translate(-1.7em, 0)\",\r\n    },\r\n    profileBalloon : {\r\n        position: \"absolute\",\r\n        backgroundImage: \"url('/static/profileBalloon.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        height : \"7em\",\r\n        margin : \"0.5em 0 \",\r\n        width : \"7em\",\r\n        transform :\"translate(5.3em, 0)\",\r\n    },\r\n}\r\n\r\n\r\nconst ProfileEditButton = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n        <Grid container justify=\"center\">\r\n            <div \r\n            style={\r\n                {marginTop:\"1.5em\", backgroundColor: \"#4CC0D0\"}\r\n            }\r\n            onClick={() => {\r\n                history.push({\r\n                    pathname :\"/mypage/\" + props.user.data.detail.username,\r\n                    state : props.user.data.detail\r\n                    });\r\n\r\n            }}\r\n            className=\"createBtn\">\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.textWrap}>\r\n                        <p\r\n                        className=\"CookieRun\"\r\n                        style={\r\n                            {color: \"white\", margin : \"-3px 0 0 0\", fontSize : \"0.9em\"}\r\n                        }>프로필 완성하셨나요?</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"0.7em 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>프로필을 완성하면</p>\r\n                        <p\r\n                        className=\"NanumGothic2\"\r\n                        style={\r\n                            {color: \"white\", margin : \"2px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>많은 관심을 끌 수 있어요!</p>\r\n                        <p\r\n                        className=\"NanumGothic3\"\r\n                        style={\r\n                            {color: \"white\", margin : \"4px 0 0 0\", fontSize : \"0.6em\"}\r\n                        }>(프로필 편집하려면 클릭!)</p>\r\n                    </div>\r\n                    <div style={\r\n                        style.profileBalloon\r\n                        }>\r\n                    </div>\r\n                    </Grid>\r\n            </div>\r\n\r\n        </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileEditButton","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useSelector } from 'react-redux';\r\nimport {MyLiveSessionsCards, OtherLiveSessionsCards, CurrentReserveSessionsCards, HostConfirmedSessionsCards} from '../components/sessionCard' \r\nimport {SessioinCreateButton} from '../components/SessionCreateButton';\r\nimport  ProfileEditButton from \"../components/ProfileEditButton\";\r\n// material-ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Person } from '@material-ui/icons';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../App.css\"\r\nimport { Opacity } from '@material-ui/icons';\r\n\r\nconst [MyPageIcon] = [Person];\r\n\r\nlet myLiveSessions = []\r\nlet otherLiveSessions = []\r\nlet currentReserveSessions = []\r\nlet hosts = []\r\nlet hostConfirmedSessions = []\r\n\r\nconst style = {\r\n    mainLogo : {\r\n        backgroundImage : \"url('/static/LogoWhite.png')\",\r\n        backgroundSize : \"contain\",\r\n        backgroundRepeat : \"no-repeat\",\r\n        width : \"8em\",\r\n        height : \"3em\",\r\n        margin : \"0.5em 0 0 1.5em\"\r\n    },\r\n    mainOragne: {\r\n        position : \"absolute\",\r\n        backgroundColor: \"#eb4e27\",\r\n        height : \"15em\",\r\n        width: \"100%\",\r\n        zIndex : \"-1\",\r\n        overflow: \"hidden\",\r\n    },\r\n    descript: {\r\n        fontSize: \"1.2em\",\r\n        color: \"white\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    descript2: {\r\n        fontSize: \"1.2em\",\r\n        color: \"#1C418C\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    cookie1: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"3em\",\r\n        right : \"-2.5em\",\r\n    },\r\n    cookie2: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"-1.5em\",\r\n        width: \"2em\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        left : \"60%\",\r\n    },\r\n    button : {\r\n        position: 'relative',\r\n        width: '80%',\r\n        marginBottom: '20px',\r\n    },\r\n    buttonIcon: {\r\n        fontSize: 30,\r\n        fontColor: 'black',\r\n        backgroundColor: '#C0C0C0',\r\n        borderRadius: '50%',\r\n        marginLeft: '150%',\r\n    },\r\n    buttonText: {\r\n        align: 'left',\r\n        fontSize: '80%',\r\n        margin: '8px',\r\n        marginLeft: '-20%',\r\n        fontWeight: 900,\r\n    },\r\n    swiperLeft : {\r\n        backgroundImage: \"url('/static/toLeft.png')\",\r\n    },\r\n    swiperLeftHidden : {\r\n        display : \"none\"\r\n    },\r\n    swiperRight: {\r\n        backgroundImage: \"url('/static/toRight.png')\"\r\n    },\r\n    swiperRightHidden : {\r\n        display : \"none\"\r\n    },\r\n    logOut : {\r\n        position :\"absolute\",\r\n        transform:\"translate(-0.5em, -3em)\",\r\n        right: \"0%\",\r\n        color: \"white\",\r\n        cursor:\"pointer\",\r\n    }\r\n}\r\n\r\n    \r\nconst SessionCardContainer = (props) => {\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    const user = useSelector(state => state.user);\r\n    const sessions = useSelector(state => state.session.data);\r\n    const history = useHistory();\r\n    const mySession = useSelector(state => state.mySession.data);\r\n\r\n    const wrapperCnt = (cnt) => {\r\n        let defaultSize = 270;\r\n        const rst = cnt * defaultSize;\r\n        return rst.toString() + \"px\";\r\n    }\r\n\r\n    if(user.error){\r\n        localStorage.clear()\r\n        window.location.replace('/')\r\n    }\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        let userDetail;\r\n        if(user.data.detail){\r\n            userDetail = user.data.detail\r\n        }else{\r\n            userDetail = {id:-1} // 반찬고 >_<\r\n        }\r\n        myLiveSessions = []\r\n        otherLiveSessions = []\r\n        currentReserveSessions = []\r\n        hostConfirmedSessions = []\r\n        hosts = []\r\n\r\n        sessions.map((session) => {\r\n            // console.log(session)\r\n            if (session.status == \"DOING\" && session.hole_reservations && (session.hole_reservations).guests.indexOf(userDetail.id) != -1) {\r\n                myLiveSessions = [...myLiveSessions, session];\r\n                // console.log(\"myLiveSEssion:\",myLiveSessions)\r\n            }\r\n            else if (session.status == \"DOING\") {\r\n                otherLiveSessions = [...otherLiveSessions, session];\r\n                // console.log(\"otherLiveSessions\",otherLiveSessions)\r\n            }\r\n            else if (session.hole_reservations && session.hole_reservations.status==\"HOST_CONFIRMED\"){\r\n                hostConfirmedSessions = [...hostConfirmedSessions, session];\r\n                // console.log(\"hostConfirmedSessions\",hostConfirmedSessions)\r\n            }else{\r\n                currentReserveSessions = [...currentReserveSessions, session];\r\n                // console.log(\"currentReserveSessions\",currentReserveSessions)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const [swiperCnt, setSwiperCnt] = useState(1);\r\n\r\n    const leftBtnTrigger = () => {\r\n        if (swiperCnt == 1){\r\n            return style.swiperLeftHidden\r\n        }\r\n        else \r\n            return style.swiperLeft\r\n    }\r\n    const rightBtnTrigger = () => {\r\n        if (myLiveSessions.length == 1 || swiperCnt == myLiveSessions.length)\r\n            return style.swiperRightHidden\r\n        else\r\n            return style.swiperRight\r\n    }\r\n\r\n    const swipping = () => {\r\n        const where = swiperCnt == 1 ? \"0\" : ((swiperCnt - 1) * -270).toString() \r\n        return \"translate(\" + where.toString(where) + \"px, 0)\"\r\n    } \r\n\r\n    const Logout = async() => {\r\n        const headers = {\r\n          'Authorization': 'Token ' + localStorage.token\r\n        }\r\n        const data = {}\r\n        const res = await axios.post('https://143.248.226.7:8000/api/user/logout', data, {headers:headers})\r\n        // window.location.replace('/')\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={style.mainOragne}>\r\n            <div style={style.cookie1} className=\"helloCookie\"/>\r\n        </div>\r\n        <div style={{float: \"right\", transform: \"translate(-1em, 0.6em)\", textAlign: \"center\", color: \"white\"}}>\r\n\r\n\r\n                <IconButton color=\"inherit\" aria-label=\"mypage\" style={{}}>\r\n                    <MyPageIcon style={{border: \"2px solid\", borderColor: \"white\", borderRadius: \"100%\"}} onClick={ () => {\r\n                    history.push(\"/mypage\");\r\n                    } }/>\r\n                </IconButton>\r\n\r\n\r\n        </div>\r\n        <br></br>\r\n        \r\n        <div style={style.mainLogo}/>\r\n        {/* <span \r\n        className=\"BMJUA\" \r\n        style={style.logOut}\r\n        onClick={()=> {\r\n            Logout()\r\n            localStorage.clear()\r\n            window.location.replace('/')\r\n            }}\r\n        >로그아웃</span> */}\r\n\r\n            {\r\n                myLiveSessions.length == 0 ?\r\n                <>\r\n                <br/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                어서오세요!<br/>\r\n                ASK2LIVE를 즐겨보세요!\r\n                </div>\r\n                </>\r\n                :\r\n                <>\r\n                <div\r\n                style={{\r\n                    backgroundImage: \"url('/static/mainLive.png')\",\r\n                    backgroundSize : \"contain\",\r\n                    backgroundRepeat : \"no-repeat\",\r\n                    width: \"25px\",\r\n                    height :\"25px\",\r\n                    marginLeft : \"1.5em\",\r\n                }}/>\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                찜했던<br/>\r\n                Live Q&A가 시작했어요!\r\n                </div>\r\n                </>\r\n            } \r\n        \r\n        <br/>\r\n\r\n \r\n\r\n            { myLiveSessions.length != 0 ?\r\n            <> \r\n                <Grid container justify=\"center\">\r\n                    <div className=\"myLiveWrapper\">\r\n                        <div className=\"myLive\" style={{display:\"block\", height: \"300px\", width: wrapperCnt(myLiveSessions.length), transform: swipping()}}>\r\n                            <MyLiveSessionsCards myLiveSessions={myLiveSessions} />\r\n                        </div>\r\n                        <div\r\n                        style={leftBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev - 1)\r\n                        }}\r\n                        className=\"swiperLeft\"/>\r\n                        <div\r\n                        style={rightBtnTrigger()}\r\n                        onClick={()=>{\r\n                            setSwiperCnt((prev) => prev + 1)\r\n                        }}\r\n                        className=\"swiperRight\"/>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n            : <></>\r\n            }\r\n\r\n        <br></br>\r\n        <SessioinCreateButton noMyLive={myLiveSessions.length == 0}/>\r\n\r\n\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">LIVE 중인 Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { otherLiveSessions.length != 0 ? <OtherLiveSessionsCards otherLiveSessions={otherLiveSessions}/> : <p>라이브 중인 다른 세션이 없어요</p> }\r\n        </Grid>\r\n    \r\n        <br/>\r\n        <ProfileEditButton user={user}/>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">다가오는 LIVE Q&A</p>\r\n\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hostConfirmedSessions.length != 0 ? <HostConfirmedSessionsCards hostConfirmedSessions={hostConfirmedSessions}/> : <p>예정된 다른 세션이 없어요</p> }\r\n        </Grid>\r\n\r\n        <div className=\"center divider\">\r\n            <Divider variant=\"middle\"/>\r\n        </div>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">오픈 신청중인 LIVE Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { currentReserveSessions.length != 0 ? <CurrentReserveSessionsCards currentReserveSessions={currentReserveSessions} setFlag={setFlag}/> : <p>요청 받고있는 다른 세션이 없어요</p>}\r\n        </Grid>\r\n\r\n        {/* <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hosts.length != 0 ? <HostCards hosts={hosts}/> : <p>등록된 호스트가 없어요</p>}\r\n        </Grid> */}\r\n\r\n        \r\n        </>\r\n\r\n    \r\n    )\r\n};\r\n\r\nexport default SessionCardContainer\r\n","import { useHistory } from \"react-router\";\r\nimport React from \"react\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    maxWidth: \"70em\",\r\n  },\r\n  profile: {\r\n    flexGrow: 1,\r\n    maxWidth: \"43em\",\r\n    display: \"flex\",\r\n    height: 80,\r\n    alignItems: \"center\",\r\n    elevation: 3,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\n\r\nconst ProfileGate = (props) => {\r\n  // if(!props.location.state) history.push('/mypge');\r\n    // console.log(\"profileGate\", props.user.detail);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const goToDetail = () => {\r\n        history.push({\r\n          pathname: '/mypage/' + props.user.detail.username,\r\n          state: props.user.detail});\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <div style={{margin: \"auto\", maxWidth: \"43em\"}}>\r\n        <h2 className=\"CookieRun\" style={{color: \"#FFFFFF\"}}>My Page</h2>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        <Card className={classes.profile}>\r\n          <CardActionArea onClick={goToDetail}>\r\n            {props.user.detail.profile_image?\r\n              <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src={`https://143.248.226.7:8000${props.user.detail.profile_image}`}\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<p className=\"BMDOHYEON\" style={{ fontSize: \"1.2em\", transform: \"translate(0, 1.5px)\"}}>{props.user.detail.username}</p>}\r\n              // subheader=\"September 14, 2016\"\r\n              />\r\n            :\r\n              <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src=\"static/reigns/1.jpg\"\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<p className=\"BMDOHYEON\" style={{ fontSize: \"1.2em\", transform: \"translate(0, 1.5px)\"}}>{props.user.detail.username}</p>}\r\n              // subheader=\"September 14, 2016\"\r\n              />\r\n            }\r\n            \r\n\r\n              <ExitToAppIcon style={{ position: \"absolute\", right: 0, top: \"36%\", marginRight: \"4%\", color: \"rgba(0, 0, 0, 0.6)\"}}/>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileGate;\r\n","import { useHistory } from \"react-router\";\r\n\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Home } from '@material-ui/icons';\r\n\r\nconst style = {\r\n  root: {\r\n    height: \"7%\",\r\n    left: 0,\r\n    right: 0,\r\n    position: \"fixed\",\r\n    margin: \"auto\",\r\n    // maxWidth: \"73em\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    backgroundColor: \"#fff8ef\",\r\n    borderBottom: \"2px solid\",\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n  borderbox: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  text: {\r\n    transform: \"translate(0, 1px)\",\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nconst MypageNav = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div style={style.root}>\r\n        <IconButton\r\n          style={{ position: \"absolute\", left: 0, height: \"100%\" }}\r\n          aria-label=\"back\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n        <IconButton style={{ position: \"absolute\", right: 0, height: \"100%\", marginRight:\"10px\"}} color=\"inherit\" aria-label=\"menu\">\r\n            <Home onClick={() => {\r\n            history.push('/');}} />\r\n        </IconButton>\r\n\r\n        <div style={style.borderbox}>\r\n          <span style={style.text}>{props.text}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageNav;\r\n","import React, { useCallback } from \"react\";\r\nimport ProfileGate from \"./ProfileGate\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { SessioinCreateButton } from \"../SessionCreateButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    top: \"9%\",\r\n    backgroundColor: \"#EF5941\",\r\n  },\r\n  my: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(0),\r\n    textAlign: \"left\",\r\n    // color: theme.palette.text.secondary,\r\n    // position: \"absolute\",\r\n    backgroundColor: \"#EF5941\",\r\n    width: \"100%\",\r\n    height: \"90%\",\r\n    // maxWidth: \"43em\",\r\n    // borderRadius: \"15px\",\r\n  },\r\n  myBottomCard: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  logOut : {\r\n\r\n    transform:\"translate(-0.5em,  1em)\",\r\n    float:\"right\",\r\n    color: \"white\",\r\n    cursor:\"pointer\",\r\n  }\r\n}\r\n\r\nconst Logout = async() => {\r\n  const headers = {\r\n    'Authorization': 'Token ' + localStorage.token\r\n  }\r\n  const data = {}\r\n  await axios.post('https://143.248.226.7:8000/api/user/logout', data, {headers:headers})\r\n  // window.location.replace('/')\r\n}\r\n\r\nconst MyPage = (props) => {\r\n  const classes = useStyles();\r\n  // console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필\"} />\r\n    <div style={{position: \"relative\", height: \"7vh\", width:\"100%\", backgroundColor: \"#EF5941\",}}/>\r\n      {/* <div className={classes.root}>{}</div> */}\r\n      <Grid container justify=\"center\" >\r\n        <div className={classes.my}>\r\n          <div style={{width: \"100%\", maxWidth: \"43em\", margin: \"auto\"}}>\r\n\r\n            <span \r\n              className=\"BMJUA\" \r\n              style={style.logOut}\r\n              onClick={()=> {\r\n                  Logout()\r\n                  localStorage.clear()\r\n                  window.location.replace('/')\r\n                  }}\r\n              >로그아웃</span>\r\n              <ProfileGate user={props.user} />\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Grid>\r\n      <div style={{ position: \"relative\", top: \"50%\" }}>\r\n        <SessioinCreateButton />\r\n      </div>\r\n      <div style={{ padding: \"0 16px\", margin: \"auto\", maxWidth: \"43em\" }}>\r\n        <h3 className=\"CookieRun\">Live QnA</h3>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import axios from \"axios\";\r\n\r\nexport const postSessionToReserve = async(session) => {\r\n  // console.log(\"-----postSessionToReserve start-----\");\r\n\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  const res = await axios.patch(\r\n    \"https://143.248.226.7:8000/api/reservation/hole/\" + session.id + \"/hostconfirm\",\r\n    data,\r\n    config,\r\n  );\r\n  // console.log(\"hole reserved: \", res);\r\n};\r\n","import { postSessionToReserve } from '../../actions/SessionToReserveActions';\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { getUserSessionInfo } from '../../actions/SessionActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  paper: {\r\n    position: \"absolute\",\r\n    bottom: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"20px 20px 0 0 \",\r\n    zIndex : \"3\",\r\n  },\r\n  title: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font2: {\r\n    color: \"#030916\",\r\n    fontSize: \"1em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font3: {\r\n    fontSize: \"1em%\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    margin: \"3% 5% 0 0\",\r\n  },\r\n};\r\n\r\nconst SessionConfirm = (props) => {\r\n  // console.log(\"SessionConfirm\");\r\n  const { session, goListUp, goDark, handleClick } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  \r\n  return (\r\n    <>\r\n    <Paper style={style.paper} elevation={1}>\r\n      <div className=\"BMDOHYEON\" style={style.title}>\r\n        {/* <Typography variant=\"h3\"  gutterBottom> */}\r\n        오픈 확정하기\r\n        {/* </Typography> */}\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font}>\r\n        {Date(session.reserve_date).substring(0, 21)}에 예정된 <br></br>\"\r\n        {session.title}\"의 스케쥴을 확정하시겠어요?\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font2}>\r\n        스케줄을 확정하면 '찜하기' 버튼을 누른 유저에게\r\n        <br></br>\r\n        알림이 전송됩니다!\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <Button\r\n            style={style.button}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              goListUp({ transform: \"translate(0, 100%)\" });\r\n              goDark({ animation: \"golight 0.7s\" });\r\n              setTimeout(() => {\r\n                goDark({ display: \"none\" });\r\n              }, 700);\r\n            }}\r\n          >\r\n            <div style={style.font3} color=\"030916\">\r\n              취소하기\r\n            </div>\r\n          </Button>\r\n\r\n          <Button\r\n            style={style.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => \r\n              {\r\n                postSessionToReserve(session);\r\n                handleClick();\r\n              }}\r\n              >\r\n            <div style={style.font3} color=\"030916\">\r\n              확정하기\r\n            </div>\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SessionConfirm };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport Moment from \"react-moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"7.5em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    backgroundColor:\"#EEAC4B\",\r\n    float: \"left\",\r\n    width: \"4em\",\r\n    height: \"4em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"4em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n    color: \"white\",\r\n    backgroundColor:\"black\",\r\n    border:\"2px solid #4CC0D0\",\r\n    boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"\r\n  }\r\n}\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" >\r\n      <Box width=\"100%\" mr={1} style={{marginLeft:\"0.8em\"}}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst MypageLiveSession = (props) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const { session, setFlag } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [demand, setDemand] = useState(false);\r\n  const [open2, setOpen2] = useState(false);\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {       \r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = async(event, reason) => {\r\n    await dispatch(getUserSessionInfo(localStorage.token))\r\n    setListUp({ transform: \"translate(0, 100%)\" });\r\n    setDark({ animation: \"golight 0.7s\" });\r\n    setTimeout(() => {\r\n    setDark({ display: \"none\" });\r\n    }, 700);\r\n    history.replace(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDemand = () => {\r\n    setDemand(true);\r\n  }\r\n\r\n  const handleDemandClose = (event, reason) => {\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setDemand(false);\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    setOpen2(true)\r\n  }\r\n\r\n  const handleDeleteClose = (event, reason) => {\r\n    onDelete()\r\n    setTimeout(\r\n      () => dispatch(getUserSessionInfo(localStorage.token)),\r\n      200\r\n    )\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setOpen2(false);\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    // console.log(\"DELETE SESSION!\");\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    await axios.delete(\r\n      \"https://143.248.226.7:8000/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"21em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root} >\r\n          <br></br>\r\n\r\n          {session.host_profile_image? \r\n          <>\r\n          <div\r\n            style={{ backgroundImage: `url('https://ask2live.me${session.host_profile_image}')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          </>\r\n            :\r\n            <div\r\n            style={{ backgroundImage: `url('/static/reigns/1.jpg')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          }\r\n          \r\n\r\n          <CardHeader\r\n            style={{ padding: \"0 8px 0 8px\", transform: \"translate(0, -5px)\" }}\r\n            title={<Typography style={{whiteSpace:\"nowrap\",width:\"13em\", overflow:\"hidden\", textOverflow:\"ellipsis\"}} variant=\"body2\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM월 DD일 A h:mm\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>\r\n                }\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon fontSize=\"small\"/>\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          {/* 게이지바 추가 */}\r\n          <div style={{width: \"18em\"}}>\r\n            <LinearProgressWithLabel \r\n            value={(session) ?\r\n              Math.ceil(\r\n                session.current_demand / session.target_demand <= 1 ?\r\n                session.current_demand / session.target_demand * 100 : 100) : 0}/>\r\n           </div>\r\n\r\n          <CardContent style={{padding: 0, }}>\r\n            <CardActions style={{paddingLeft: 4, paddingTop: 0}}>\r\n              {session.status != \"DONE\" && user.id === parseInt(session.host) && (\r\n                <Button\r\n                  style={{ backgroundColor: \"#3f51b5\", paddingTop: 0, paddingBottom: 0 }}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    // console.log(session)\r\n                    if(session.current_demand === session.target_demand){\r\n                      setListUp({ transform: \"translate(0, 50%)\" });\r\n                      setDark({ animation: \"godark 0.7s\" });\r\n                    } else {\r\n                      handleDemand();\r\n                    }\r\n                  }}\r\n                >\r\n                  {/* <Typography variant=\"body2\" style={{ fontWeight: 600 }}> */}\r\n                  <span className=\"BMJUA\" style={{color: \"#FFFFFF\"}}>\r\n                    예약 확정하기\r\n                  </span>\r\n                  {/* </Typography> */}\r\n                </Button>\r\n              )}\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  style={{borderColor: \"#3f51b5\", marginLeft: \"1.5em\",}}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={handleDelete}\r\n                >\r\n                  {/* <Typography variant=\"body2\" style={{ fontWeight: 600 }}> */}\r\n                  <span className=\"BMJUA\" color=\"#3f51b5\">\r\n                    삭제하기\r\n                  </span>\r\n                  {/* </Typography> */}\r\n                </Button>\r\n                \r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      <div style={listup} className=\"hiddenlist\" maxWidth=\"\">\r\n        <SessionConfirm\r\n          session={session}\r\n          goListUp={setListUp}\r\n          goDark={setDark}\r\n          handleClick={handleClick}\r\n        />\r\n      </div>\r\n      <div style={dark} className=\"mypagelayerfordark\"></div>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", top: \"0%\" }}\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          <span className=\"BMJUA\">Live Q&A 확정 완료</span>\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n    <Snackbar open={demand} autoHideDuration={1500} onClose={handleDemandClose}>\r\n      <Alert style={{width: \"100%\", backgroundColor: \"black\", color: \"white\"}} onClose={handleDemandClose} severity=\"info\">\r\n        아직 목표 인원 수에<br/>\r\n        도달하지 않았습니다.<br/><br/>\r\n        다른 유저가 찜하는 것을<br/>\r\n        기다려 주세요!\r\n      </Alert>\r\n    </Snackbar>\r\n    <Snackbar style={{position:\"fixed\", top: \"0%\"}} open={open2} autoHideDuration={1500} onClose={handleDeleteClose}>\r\n      <Alert style={style.alert} onClose={handleDeleteClose} severity=\"success\">\r\n        <span className=\"BMJUA\">삭제 완료</span>\r\n      </Alert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageLiveSession;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Moment from \"react-moment\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport \"../../styles/style.css\";\r\nimport {\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"6.8em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    border: 'solid',\r\n    borderColor: '#D95032',\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    backgroundColor:\"#EEAC4B\",\r\n    float: \"left\",\r\n    width: \"4em\",\r\n    height: \"4em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"4em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n    color: \"black\",\r\n    backgroundColor:\"white\",\r\n    border:\"2px solid #4CC0D0\",\r\n    boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"\r\n  }\r\n}\r\n\r\nconst MypageConfirmedSession = ({ session }) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [open2, setOpen2] = useState(false)\r\n\r\n  const handleDelete = () => {\r\n    setOpen2(true)\r\n  }\r\n\r\n  const handleDeleteClose = (event, reason) => {\r\n    onDelete()\r\n    setTimeout(\r\n      () => dispatch(getUserSessionInfo(localStorage.token)),\r\n      200\r\n    )\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setOpen2(false);\r\n  }\r\n\r\n  // const onChangeDoing = async(session, user) => {\r\n\r\n  //   const config = {\r\n  //     headers: { Authorization: \"Token \" + localStorage.token },\r\n  //   };\r\n  //   const data = {\r\n      \r\n  //     channel_num : String(session.id) + '123',\r\n  //     host_uid : user.id,\r\n      \r\n  //   }\r\n  //   const res = await axios.post(\r\n  //     \"https://143.248.226.7:8000/api/hole/\" + session.id + \"/live/create\",\r\n  //     data,\r\n  //     config,\r\n  //   );\r\n\r\n  // }\r\n\r\n  const onDelete = async () => {\r\n    // console.log(\"DELETE SESSION!\");\r\n    // await postSessionDelete(session);\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    await axios.delete(\r\n      \"https://143.248.226.7:8000/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"21em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n          <br></br>\r\n\r\n          {session.host_profile_image? \r\n          <>\r\n          <div\r\n            style={{ backgroundImage: `url('https://ask2live.me${session.host_profile_image}')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          </>\r\n            :\r\n            <div\r\n            style={{ backgroundImage: `url('/static/reigns/1.jpg')`}}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n          }\r\n\r\n          <CardHeader\r\n            style={{ padding: \"0 8px 0 8px\", transform: \"translate(0, -5px)\" }}\r\n            title={<Typography style={{whiteSpace:\"nowrap\",width:\"13em\", overflow:\"hidden\", textOverflow:\"ellipsis\"}}variant=\"body2\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM월 DD일 A h:mm\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {history.push({\r\n                        pathname: '/createSession',\r\n                        search: '?holeId=' + session.id,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon fontSize=\"small\"/>\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          <CardContent style={{padding:0}}>\r\n            <CardActions style={{paddingLeft: 4, paddingTop: 0}}>\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  style={{ backgroundColor: \"#3f51b5\", paddingTop: 0, paddingBottom: 0 }}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    history.push({\r\n                        pathname: \"/session/reserve\",\r\n                        search: \"?holeId=\" + session.id,\r\n                    })\r\n                  }}\r\n                >\r\n                  <span className=\"BMJUA\" style={{color: \"#FFFFFF\"}}>\r\n                    라이브하기\r\n                  </span>\r\n                </Button>\r\n                <Button\r\n                 style={{borderColor: \"#3f51b5\", marginLeft: \"1.5em\",}}\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={handleDelete}\r\n                >\r\n                  <span className=\"BMJUA\" color=\"#3f51b5\">\r\n                    삭제하기\r\n                  </span>\r\n                </Button>\r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Snackbar style={{position:\"fixed\", top: \"0%\"}} open={open2} autoHideDuration={1500} onClose={handleDeleteClose}>\r\n      <Alert style={style.alert} onClose={handleDeleteClose} severity=\"success\">\r\n        <span className=\"BMJUA\">삭제 완료</span>\r\n      </Alert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageConfirmedSession;","export const Emoji = props => (\r\n    <span\r\n      className=\"emoji\"\r\n      role=\"img\"\r\n      aria-label={props.label ? props.label : \"\"}\r\n      aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n      {props.symbol}\r\n    </span>\r\n  )","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Mypage from \"../components/mypage/Mypage\";\r\nimport MypageLiveSession from \"../components/mypage/MypageLiveSession\";\r\nimport MypageConfirmedSession from \"../components/mypage/MypageConfirmedSession\";\r\nimport { getUserSessionInfo } from \"../actions/SessionActions\";\r\n// import { getUserInfo } from \"../actions/UserActions\";\r\nimport { Emoji } from \"../components/Emoji\";\r\n\r\n// material-ui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    width: \"100%\",\r\n    maxWidth: \"70em\",\r\n    paddingLeft: theme.spacing(4),\r\n    borderBottom: \"solid thin\",\r\n    margin: \"auto\"\r\n    // marginBottom: \"2%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n\r\n  alert: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    zIndex: 2,\r\n    maxWidth: \"25em\",\r\n    size: \"large\",\r\n  },\r\n  itemText: {\r\n    width: \"100%\",\r\n    paddingLeft: \"5%\",\r\n    transform: \"translate(0, 1.5px)\",\r\n    // marginTop: \"1%\",\r\n  },\r\n};\r\n\r\n\r\n\r\nconst MyPageContainer = (props) => {\r\n  // console.log(\"컴포넌트 실행!\");\r\n\r\n  // const [render, setRender] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector((state) => state.user.data);\r\n  const sessions = useSelector((state) => state.mySession.data);\r\n  const wishSessions = useSelector((state) => state.mySession.data);\r\n\r\n  // console.log(\"세션 :\", sessions);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.token\r\n    // dispatch(getUserInfo(token));\r\n    dispatch(getUserSessionInfo(token));\r\n    // setRender(true);\r\n  }, []);\r\n\r\n  let myLiveSessions = [];\r\n  let myDoneSessions = [];\r\n  let myWishSessions = [];\r\n  let myConfirmSessions = [];\r\n\r\n  if (Object.keys(sessions).length != 0) {\r\n    sessions.detail.my_hole.map((session) => {\r\n      if (\r\n        session.status === \"NOT_START\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        if (session.reservation_status === \"HOST_CONFIRMED\") {\r\n          myConfirmSessions = [...myConfirmSessions, session];\r\n        } else {\r\n          myLiveSessions = [...myLiveSessions, session];\r\n        }\r\n      } else if (\r\n        session.status === \"DONE\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        myDoneSessions = [...myDoneSessions, session];\r\n      }\r\n    });\r\n  }\r\n\r\n  if (Object.keys(wishSessions).length != 0) {\r\n    wishSessions.detail.wish_hole.map((session) => {\r\n      myWishSessions = [...myWishSessions, session];\r\n    });\r\n  }\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const [openDone, setOpenDone] = useState(true);\r\n  const [openWish, setOpenWish] = useState(true);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const handleConfirmClick = () => {\r\n    setOpenConfirm(!openConfirm);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickDone = () => {\r\n    setOpenDone(!openDone);\r\n  };\r\n\r\n  const handleClickWish = () => {\r\n    setOpenWish(!openWish);\r\n  };\r\n\r\n\r\n  if (!user.detail || !sessions.detail) return <p>로딩중...</p>;\r\n\r\n  return (\r\n    <>\r\n      <Mypage user={user} />\r\n      {/* <SessioinCreateButton /> */}\r\n\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <div\r\n          style={{ display: \"inline-block\", width: \"100%\", maxWidth: \"43em\" }}\r\n        >\r\n          <ListItem\r\n            button\r\n            onClick={handleConfirmClick}\r\n            className={classes.nested}\r\n          >\r\n            {/* <ListItemIcon> */}\r\n              <Emoji symbol=\"🔊\" />\r\n            {/* </ListItemIcon> */}\r\n            <p className=\"BMJUA\" style={style.itemText} >진행 확정된 Q&A</p>\r\n            {openConfirm ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openConfirm} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myConfirmSessions.length != 0 ?\r\n                myConfirmSessions.map((session) => (\r\n                  <>\r\n                    <MypageConfirmedSession\r\n                      session={session}\r\n                    />\r\n                  </>\r\n                )) :\r\n                  <>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                      <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 진행 확정된 Q&A가 없습니다</p>\r\n                    </div>\r\n                  </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClick}\r\n            className={classes.nested}\r\n          >\r\n            <Emoji symbol=\"💬\" />\r\n            <p className=\"BMJUA\" style={style.itemText} >모집 중인 Q&A</p>\r\n            {open ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myLiveSessions.length != 0 ?\r\n                myLiveSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                  <>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                      <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 모집 중인 Q&A가 없습니다</p>\r\n                    </div>\r\n                  </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClickWish}\r\n            className={classes.nested}\r\n          >\r\n            <Emoji symbol=\"❤️\" />\r\n\r\n            <p className=\"BMJUA\" style={style.itemText} >찜한 Q&A</p>\r\n            {openWish ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openWish} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myWishSessions.length != 0 ?\r\n                myWishSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                <>\r\n                  <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 찜한 Q&A가 없습니다</p>\r\n                  </div>\r\n                </>\r\n              }\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            button\r\n            onClick={handleClickDone}\r\n            className={classes.nested}\r\n          >\r\n\r\n              <Emoji symbol=\"🔇\" />\r\n\r\n            <p className=\"BMJUA\" style={style.itemText} >진행 완료 Q&A</p>\r\n            {openDone ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openDone} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myDoneSessions.length != 0 ?\r\n                myDoneSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} />\r\n                  </>\r\n                ))\r\n                :\r\n                <>\r\n                  <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <p className=\"Gmarket2\" style={{color: \"#3f51b5\"}}> 진행 완료한 Q&A가 없습니다</p>\r\n                  </div>\r\n                </>\r\n                }\r\n            </List>\r\n          </Collapse>\r\n\r\n        </div>\r\n      </Grid>\r\n\r\n      <div\r\n        style={{\r\n          height: \"4em\",\r\n          width: \"100%\",\r\n          marginBottom: \"4%\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPageContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { postSessionToReserve } from '../actions/SessionToReserveActions';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport { Checkbox } from 'antd';\r\n\r\nimport axios from \"axios\";\r\nimport { getSessionInfo, getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport MypageNav from \"../components/mypage/MypageNav\";\r\n\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction NumAlert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    // fontFamily: \"BMJUA\"\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#EF4D57\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    fontSize: '0.8em'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#EF4D57\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert : {\r\n    color: \"white\",\r\n    backgroundColor:\"black\",\r\n    border:\"2px solid #4CC0D0\",\r\n    boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"\r\n  }\r\n}\r\n\r\nconst SessionCreateContainer = (props) => {\r\n\r\n  let urlSearchParams = new URLSearchParams(\r\n    props.routerInfo.location.search.slice(1)\r\n  );\r\n\r\n  let nowDate = new Date()\r\n  let afterOneMinutes = new Date(nowDate.setDate(nowDate.getMinutes() + 1))\r\n\r\n  let defaultDate = afterOneMinutes.toISOString()\r\n  // console.log(\"defaultDate\", defaultDate)\r\n\r\n  const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleValid, setTitleValid] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionValid, setDescriptionValid] = useState(false);\r\n  \r\n  const [reserveDate, setReserveDate] = useState(defaultDate);\r\n  const [reserveDateValid, setReserveDateValid] = useState(false);\r\n  const [earlyDateValid, setEarlyDateValid] = useState(false);\r\n  const [count, setCount] = useState(0)\r\n\r\n  const [skipValid, setSkipValid] = useState(false);\r\n\r\n  const toDate = (reserve_date) => {\r\n    let date = new Date(reserve_date);\r\n    return date;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (holeId) {\r\n      axios\r\n        .get(\"https://143.248.226.7:8000/api/hole/read/\" + holeId)\r\n        .then((res) => {\r\n          const session = res.data.detail;\r\n          // console.log(session)\r\n          setTitle(session.title);\r\n          setDescription(session.description);\r\n          let date = session.reserve_date.split(\":\");\r\n          setReserveDate(date[0] + \":\" + date[1]);\r\n          setCount(session.hole_reservations.target_demand);\r\n        });\r\n    }\r\n  }, [holeId]);\r\n\r\n  const [open, setOpen] = useState(0);\r\n  const [open2, setOpen2] = useState(0);\r\n  const [disable, setDisable] = useState(false)\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onIncrease = () => setCount(count + 1);\r\n  const onDecrease = () => count > 0 ? setCount(count - 1) : null;\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = (event, reason) => {\r\n    history.push(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick2 = () => {\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose2 = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen2(false);\r\n  };\r\n\r\n  const onClick = async () => {\r\n    if (earlyDateValid)\r\n        return;\r\n    setDisable(true)\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    // console.log(localStorage.token);\r\n    \r\n    let session = {}\r\n    \r\n    const data = {\r\n      title: title,\r\n      description: description,\r\n      reserve_date: reserveDate,\r\n      target_demand: count,\r\n    };\r\n    // console.log(data);\r\n    if (holeId) {\r\n      await axios\r\n        .patch(\r\n          \"https://143.248.226.7:8000/api/hole/update/\" + holeId,\r\n          data,\r\n          config\r\n        )\r\n        .then((res) => {\r\n          // console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    } else if(skipValid){\r\n      // sessionCreate\r\n      await axios\r\n      .post(\"https://143.248.226.7:8000/api/hole/create\", data, config)\r\n        .then((res) => {\r\n          // console.log(\"hole created: \", res);\r\n          session = res.data.detail\r\n          // sessionToReserve\r\n          postSessionToReserve(session);\r\n          // console.log(\"postSessionToReserve success\")\r\n          // 라이브 하기\r\n          history.push({\r\n            pathname: \"/session/reserve\",\r\n            search: \"?holeId=\" + session.id,\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        })\r\n      \r\n      \r\n      \r\n      \r\n    }else {\r\n      await axios\r\n        .post(\"https://143.248.226.7:8000/api/hole/create\", data, config)\r\n        .then((res) => {\r\n          // console.log(\"hole created: \", res);\r\n          handleClick();\r\n          setTimeout(() => {\r\n            dispatch(getUserSessionInfo(localStorage.token));\r\n            dispatch(getSessionInfo());\r\n          }, 200);\r\n        })\r\n        .catch((err) => {\r\n          if (title.length === 0) setTitleValid(true);\r\n          if (reserveDate.length === 0) setReserveDateValid(true);\r\n          if (description.length === 0) setDescriptionValid(true);\r\n          setDisable(false)\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {holeId ? (\r\n        <MypageNav text={\"Live Q&A 수정하기\"} />\r\n      ) : (\r\n        <MypageNav text={\"Live Q&A 만들기\"} />\r\n      )}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        {/* <CssBaseline /> */}\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <AssignmentIcon />\r\n          </Avatar>\r\n\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"body1\"\r\n            style={{ fontFamily: \"BMJUA\" }}\r\n          >\r\n            세션 정보를 입력하세요\r\n          </Typography>\r\n          {/* <Typography variant=\"subtitle1\" gutterBottom>\r\n                    세션 정보를 입력하세요\r\n                </Typography> */}\r\n          <div className={classes.form}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"title\"\r\n              label=\"session title\"\r\n              name=\"title\"\r\n              error={titleValid}\r\n              helperText={titleValid ? \"제목을 입력해 주세요\" : \"\"}\r\n              // autoComplete=\"title\"\r\n              placeholder=\"세션 제목을 입력해주세요\"\r\n              autoFocus\r\n              value={title}\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 20)\r\n                  alert(\"제목은 20자 이내로 입력이 가능합니다!\");\r\n                setTitle(e.target.value.substring(0, 20));\r\n                setTitleValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            \r\n            <Checkbox onChange={(e) => {\r\n              // console.log(\"e.target.checked\", e.target.checked)\r\n              if(e.target.checked){\r\n                setSkipValid(true)\r\n                setCount(0)\r\n              }else{\r\n                setSkipValid(false)\r\n              }\r\n            }}><span style={{fontSize:\"small\"}} className=\"BMDOHYEON\">지금 당장 라이브 세션 열기</span></Checkbox>\r\n            \r\n            {skipValid ? \r\n            \r\n            <>\r\n                <TextField\r\n                margin=\"normal\"\r\n                disabled=\"true\"\r\n                fullWidth\r\n                id=\"reserveDate\"\r\n                label=\"Live Q&A 진행 예정일\"\r\n                name=\"reserveDate\"\r\n                type=\"datetime-local\"\r\n                autoFocus\r\n                value={reserveDate}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <Grid\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <HelpIcon\r\n                    color=\"disabled\"\r\n                    onClick={()=>\r\n                        handleClick2()\r\n                    }\r\n                  /><span style={{color:\"gray\"}}> &nbsp; 목표 인원 수</span>\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton disabled=\"true\" size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                disabled=\"true\"\r\n                  // margin=\"normal\"\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={count}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton disabled=\"true\" size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n              </>\r\n              \r\n            :\r\n            <>\r\n              <TextField\r\n                // variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                error={reserveDateValid || earlyDateValid}\r\n                helperText={reserveDateValid ? \"예약 일자를 입력해 주세요\" : \r\n                              earlyDateValid ? \"이전 날짜로는 입력할 수 없어요\" : \"\"}\r\n                id=\"reserveDate\"\r\n                label=\"Live Q&A 진행 예정일\"\r\n                name=\"reserveDate\"\r\n                type=\"datetime-local\"\r\n                // autoComplete=\"title\"\r\n                autoFocus\r\n                value={reserveDate}\r\n                // defaultValue={reserveDate}\r\n                onChange={(e) => {\r\n                  setReserveDate(e.target.value);\r\n                  let cur_date = new Date();\r\n                  // console.log(reserveDate);\r\n                  // console.log(\"설정한시간\", toDate(e.target.value).getTime());\r\n                  // console.log(\"현재시간\", cur_date.getTime());\r\n                  // console.log(\r\n                    // (toDate(e.target.value).getTime() - cur_date.getTime()) / 1000\r\n                  // );\r\n                  if (toDate(e.target.value).getTime() - cur_date.getTime() < 0)\r\n                      setEarlyDateValid(true)\r\n                  else\r\n                      setEarlyDateValid(false)\r\n                  setReserveDateValid(false);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n\r\n              <Grid\r\n              disabled=\"true\"\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <HelpIcon\r\n                    onClick={()=>\r\n                        handleClick2()\r\n                    }\r\n                  /> &nbsp; 목표 인원 수\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={count}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n              </>\r\n            }\r\n            \r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              name=\"description\"\r\n              placeholder=\"소개글을 입력해주세요\"\r\n              error={descriptionValid}\r\n              helperText={\r\n                descriptionValid ? \"어떤 내용의 Q&A인지 설명해 주세요\" : \"\"\r\n              }\r\n              value={description}\r\n              label=\"Live Q&A 짧은 소개\"\r\n              type=\"password\"\r\n              id=\"description\"\r\n              onChange={(e) => {\r\n                if (e.target.value.length > 200)\r\n                  alert(\"소개는 200자 이내로 입력이 가능합니다!\");\r\n                setDescription(e.target.value.substring(0, 200));\r\n                setDescriptionValid(false);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            {holeId ? \r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                onClick={onClick}\r\n                disabled={disable}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            </>\r\n             : \r\n            <>\r\n            {skipValid?\r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={onClick}\r\n            disabled={disable}\r\n          >\r\n            Live Q&A 세션 바로 만들기\r\n            </Button>\r\n            :\r\n            <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={onClick}\r\n            disabled={disable}\r\n          >\r\n            Live Q&A 만들기\r\n            </Button>\r\n            }\r\n              \r\n            </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", bottom: \"50%\" }}\r\n        open={open}\r\n        autoHideDuration={1500}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          {holeId ? (\r\n            <span className=\"BMJUA\">Live Q&A 수정 완료!</span>\r\n          ) : (\r\n            <span className=\"BMJUA\">Live Q&A 생성 완료!</span>\r\n          )}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar \r\n                style={{position:\"fixed\", top: \"0%\"}}\r\n                open={open2} autoHideDuration={6000} onClose={handleClose2}>\r\n                    <NumAlert \r\n                    style={{color: \"black\", backgroundColor:\"white\", border:\"2px solid #4CC0D0\", boxShadow:\"2px 2px 15px 10px rgba(0, 0, 0, 0.6)\"}}\r\n                    onClose={handleClose2} severity=\"error\">\r\n                    <span style={{fontSize:\"1.1em\"}} className=\"BMJUA\">목표인원</span> \r\n                    을 달성하면 <br/>\r\n                    <span style={{fontSize:\"1.1em\"}} className=\"BMJUA\">예약 확정하기</span>\r\n                    를 할 수 있어요.<br/>\r\n                    예약을 확정하면\r\n                    <span style={{fontSize:\"0.9em\"}} className=\"Gmarket3\"> Live Q&A</span>\r\n                    를 열 수 있어요.\r\n                    </NumAlert>\r\n        </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SessionCreateContainer;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport \"../../styles/style.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { getUserInfo } from \"../../actions/UserActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontSize: \"1.3em\",\r\n    top: \"9%\",\r\n    left: \"5%\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform:\"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  editWrapper: {\r\n    height: \"7%\",\r\n    // left: 0,\r\n    right: 0,\r\n    position: \"absolute\",\r\n    margin: \"auto\",\r\n    // width: \"100%\",\r\n    // maxWidth: \"73em\",\r\n    bottom: 0,\r\n    // zIndex: 1,\r\n    // pointerEvents: \"none\",\r\n  },\r\n  editBtn: {\r\n    // pointerEvents:\"auto\",\r\n    // position: \"absolute\",\r\n    // right:0,\r\n    height: \"100%\",\r\n    // fontFamily: \"BMJUA\",\r\n    fontSize: \"1em\",\r\n    // transform: \"translate(0, 1px)\",\r\n  },\r\n};\r\n\r\nconst ProfileDetail = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // console.log(\"PROPS\", props);\r\n  const user = props.routerInfo.location.state;\r\n\r\n  let profile = {};\r\n  useEffect(() => {\r\n    dispatch(getUserInfo(localStorage.token));\r\n  });\r\n\r\n  if (props.routerInfo.location.state.host) {\r\n    const host = props.routerInfo.location.state.host;\r\n    // console.log(\"host : \", host);\r\n    if (!host.host_work_company.length)\r\n      host.host_work_company = \"\";\r\n    if (!host.host_work_field.length) host.host_work_field = \"\";\r\n\r\n    profile = {\r\n      username: host.host_username,\r\n      profile_image: host.host_profile_image,\r\n      work_company: host.host_work_company,\r\n      work_field: host.host_work_field,\r\n      bio: host.host_bio,\r\n    };\r\n  } else {\r\n    if (!user.work_company.length)\r\n      user.work_company = \"\";\r\n    if (!user.work_field.length) user.work_field = \"\";\r\n    \r\n    profile = {\r\n      username: user.username,\r\n      profile_image: user.profile_image,\r\n      work_company: user.work_company,\r\n      work_field: user.work_field,\r\n      bio: user.bio,\r\n    };\r\n  }\r\n\r\n  let editFlag = false;\r\n  if(user.username === profile.username) editFlag = true\r\n\r\n  const goToEdit = () => {\r\n    history.replace({\r\n      pathname: `${profile.username}/edit`,\r\n      state: user});\r\n  }\r\n  if (!user || !profile) return<p> 로딩중 </p>\r\n\r\n  return (\r\n    <>\r\n        <MypageNav text={\"프로필\"} editFlag={editFlag} />\r\n        \r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n        {user.username === profile.username && (\r\n          <>\r\n          <div style={style.editWrapper}>\r\n            <Button onClick={goToEdit} style={style.editBtn}>\r\n              <span className=\"CookieRun\">편집</span>\r\n            </Button>\r\n          </div>\r\n          </>\r\n        )}\r\n          <div>\r\n            <p className={classes.username}>{profile.username}</p>\r\n            {profile.profile_image?\r\n            <Avatar\r\n            className={classes.avatar}\r\n            aria-label=\"recipe\"\r\n            src={`https://143.248.226.7:8000${profile.profile_image}`}\r\n          ></Avatar>\r\n          :\r\n          <Avatar\r\n            className={classes.avatar}\r\n            aria-label=\"recipe\"\r\n            src=\"/static/reigns/1.jpg\"\r\n          ></Avatar>\r\n          }\r\n\r\n            \r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            [근무 회사] {profile.work_company}\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            [일하는 분야] {profile.work_field}\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n                \r\n              <p style={{fontFamily: \"BMJUA\", marginTop: 0, whiteSpace: \"pre-wrap\"}}>\r\n                {profile.bio}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDetail;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport \"../../styles/style.css\";\r\n\r\nimport axios from \"axios\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { getUserInfo, updateUserInfo } from \"../../actions/UserActions\";\r\nimport { CheckSpaceNSpecial, ReplaceSpaceNSpecial } from \"../CheckString\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#EF5941\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    height: \"95.3%\",\r\n    width: \"88%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"15px 15px 0 0\",\r\n    boxShadow: \"2px 1px 5px 3px rgba(0,0,0, 0.7)\",\r\n    maxWidth: \"70em\",\r\n  },\r\n  avatar: {\r\n    position: \"absolute\",\r\n    top: \"8%\",\r\n    right: \"5%\",\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    // fontFamily: \"BMDOHYEON\",\r\n    // fontSize: \"1.3em\",\r\n    top: \"9%\",\r\n    left: \"5%\",\r\n    // top: \"12%\",\r\n    // left: \"6.6%\",\r\n    // maxWidth: \"6em\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"28%\",\r\n    left: \"5%\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"34%\",\r\n    left: \"5%\",\r\n    color: \"grey\",\r\n  },\r\n  bio: {\r\n    position: \"absolute\",\r\n    transform: \"translate(0, -3em)\",\r\n    fontFamily: \"BMJUA\",\r\n    // top: \"50%\",\r\n    left: \"5%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  buttonGroup: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    left: 0,\r\n    right: 0,\r\n    bottom: \"5.5%\",\r\n    margin: \"auto\",\r\n    justifyContent: \"center\",\r\n  },\r\n  file: {\r\n    fontFamily: \"BMJUA\",\r\n    // fontWeight: \"bold\",\r\n    position: \"absolute\",\r\n    top: \"24%\",\r\n    left: \"5%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontWeight: \"lighter\",\r\n    padding: \"1px\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n    color: \"#EF5941\",\r\n    borderColor: \"#EF5941\",\r\n  },\r\n  button2: {\r\n    position: \"relative\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    padding: \"1px\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n    backgroundColor: \"#EF5941\",\r\n    opacity: \"0.9\",\r\n  },\r\n};\r\n\r\nconst MypageEdit = (props) => {\r\n  // console.log(\"MypageEdit\");\r\n  // console.log(props)\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = props.routerInfo.location.state;\r\n  \r\n  let usernameValue;\r\n  const [username, setUsername] = useState(user.username);\r\n  const [profileImage, setProfileImage] = useState(\"https://143.248.226.7:8000\" + user.profile_image)\r\n  const [workField, setWorkField] = useState(user.work_field);\r\n  const [workCompany, setWorkCompany] = useState(user.work_company);\r\n  const [bio, setBio] = useState(user.bio);\r\n\r\n  const [image, setImage] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n  const onChange = useCallback((e) => {\r\n    // console.log(\"e.target.name\",e.target.name)\r\n    if(e.target.name === \"image\"){\r\n      if(e.target.files[0].size > 6000000){\r\n        alert(\"6MB 이상의 파일은 업로드되지 않습니다.\")\r\n      }else{\r\n        setImage({\r\n          profile_image: e.target.files,\r\n        });\r\n\r\n        const preview = e.target.files[0];\r\n        const imageUrl = URL.createObjectURL(preview);\r\n        setProfileImage(imageUrl)\r\n      }  \r\n    }\r\n  });\r\n\r\n  const onClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + localStorage.token,\r\n      },\r\n    };\r\n    const data = {\r\n      work_field: workField,\r\n      username: username,\r\n      work_company: workCompany,\r\n      bio: bio.replace(\"\\r\\n\", \"<br/>\"),\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"work_field\", data.work_field);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"work_company\", data.work_company);\r\n    formData.append(\"bio\", data.bio);\r\n\r\n    // console.log(image);\r\n    if (Object.keys(image).length != 0) {\r\n      formData.append(\"profile_image\", image.profile_image[0]);\r\n    }\r\n\r\n    try {\r\n      await axios.patch(\r\n        \"https://143.248.226.7:8000/api/user/update\",\r\n        formData,\r\n        config\r\n      )\r\n\r\n        dispatch(getUserInfo(localStorage.token));\r\n        const resGet = await axios.get(\r\n          \"https://143.248.226.7:8000/api/user/read\",\r\n          config\r\n        );\r\n        \r\n        history.replace({\r\n          pathname: \"/mypage/\" + username,\r\n          state: resGet.data.detail,\r\n        });\r\n    }\r\n    catch(err) {\r\n      // console.log(err)\r\n      alert(\"이미 존재하는 닉네임입니다\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필 편집\"} />\r\n      <div className={classes.root}>\r\n        <div className={classes.root2}>\r\n          <div>\r\n            <p className={classes.username}>\r\n              <input\r\n                // className={classes.username}\r\n                className=\"BMDOHYEON\"\r\n                style={{\r\n                  fontSize: \"1.3em\",\r\n                  maxWidth: \"8em\",\r\n                  border: \"none\",\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                required\r\n                autoComplete=\"off\"\r\n                // oninvalid={usernameValid ? \"이름은 6글자 이내로 입력이 가능합니다\" : \"\"}\r\n                // defaultValue={username}\r\n                value={username}\r\n                placeholder=\"이름을 입력하세요\"\r\n                name=\"username\"\r\n                onChange={(e) => {\r\n                  usernameValue = e.target.value\r\n\r\n                  if (usernameValue.length > 6){\r\n                    alert(\"이름은 6글자 이내로 입력이 가능합니다\");\r\n                    usernameValue = usernameValue.substring(0, 6)\r\n                  }\r\n\r\n                  if (CheckSpaceNSpecial(usernameValue)){\r\n                    alert(\"공백/특수문자는 입력이 불가합니다\");\r\n                    usernameValue = ReplaceSpaceNSpecial(usernameValue)\r\n                  }\r\n\r\n                  setUsername(usernameValue);\r\n                  // setUsernameValid(false)\r\n                }}\r\n                />\r\n                <br/>\r\n                <small className=\"Gmarket2\" style={{fontSize: \"0.7em\"}}>* 공백/특수문자 제외 6글자 이내</small>\r\n            </p>\r\n\r\n            <Avatar\r\n              className={classes.avatar}\r\n              aria-label=\"recipe\"\r\n              src={profileImage}\r\n            ></Avatar>\r\n            <input\r\n              style={style.file}\r\n              type=\"file\"\r\n              name=\"image\"\r\n              // accept=\"image/*\"\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n\r\n          <p className={classes.work_company}>\r\n            <input\r\n              // className={classes.work_company}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                // borderBottom: \"1px solid\",\r\n                // backgroundColor: \"#FFEBE8\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              // defaultValue={workCompany}\r\n              value={workCompany}\r\n              placeholder=\"회사 이름을 입력해주세요\"\r\n              name=\"work_company\"\r\n              onChange={(e) => setWorkCompany(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className={classes.work_field}>\r\n            <input\r\n              // className={classes.work_field}\r\n              style={{\r\n                fontSize: \"1em\",\r\n                border: \"none\",\r\n                fontFamily: \"BMJUA\",\r\n                color: \"grey\",\r\n                // backgroundColor: \"#FFEBE8\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              // defaultValue={workField}\r\n              value={workField}\r\n              placeholder=\"일하는 분야를 입력해주세요\"\r\n              name=\"work_field\"\r\n              onChange={(e) => setWorkField(e.target.value)}\r\n            />\r\n          </p>\r\n\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"54%\",\r\n              width: \"100%\",\r\n              height: \"40.5%\",\r\n            }}\r\n          >\r\n            <p className={classes.bio}>\r\n              [소개]\r\n              <br />\r\n            </p>\r\n            <div className=\"bioWrapper\">\r\n              {/* <p style={{marginTop: 0}}> */}\r\n              <textarea\r\n                className=\"bioWrapper\"\r\n                style={{\r\n                  border: \"1px solid\",\r\n                  borderColor: \"rgba(0, 0, 0, 0.3)\",\r\n                  width: \"89%\",\r\n                  height: \"80%\",\r\n                  // backgroundColor: \"#F2AC57\",\r\n                  fontFamily: \"BMJUA\",\r\n                  // backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                // defaultValue={bio}\r\n                value={bio}\r\n                placeholder=\"소개를 입력해주세요\"\r\n                name=\"bio\"\r\n                onChange={(e)=> setBio(e.target.value)}\r\n                // onKeyPress={pressEnter}\r\n              />\r\n              {/* </p> */}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={style.buttonGroup}>\r\n            <Button\r\n              style={style.button}\r\n              variant=\"outlined\"\r\n              // color=\"#EF5941\"\r\n              size=\"normal\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <span style={{transform: \"translate(0, 1px)\", color: \"#EF5941\"}}>\r\n                취소하기\r\n              </span>\r\n            </Button>\r\n\r\n            <Button\r\n              style={style.button2}\r\n              variant=\"contained\"\r\n              // color=\"primary\"\r\n              // backgroundColor=\"#EF5941\"\r\n              // backgroundColor='#0063cc'\r\n              size=\"large\"\r\n              onClick={onClick}\r\n            >\r\n              <span style={{transform: \"translate(0, 1px)\", color: \"#FFFFFF\"}}>\r\n                확정하기\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport {QUESTIONLIST_DELETE} from \"../../actions/types\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport getQuestionlist from '../../actions/QuestionListActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: \"1000\",\r\n    backgroundColor: \"#FFEBE8\",\r\n    paddingBottom: \"3em\",\r\n    fontFamily: \"NanumGothic\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  card : {\r\n    border: \"1px solid #F24822\", \r\n    marginBottom:\"0.5em\",\r\n  },\r\n  cardText : {\r\n    position: \"relative\",\r\n    top: \"6.5px\",\r\n  },\r\n  labelBMJUA : {\r\n  fontFamily: \"BMJUA\",\r\n  fontStyle: \"normal\",\r\n  fontWeight: \"normal\",\r\n  fontSize: \"1.3em\"\r\n  },\r\n  avatar : {\r\n    position : \"absolute\"\r\n  },\r\n  questionText : {\r\n    marginLeft : \"3em\",\r\n    fontFamily: \"NanumGothic\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n  }\r\n}));\r\n\r\nconst style = {\r\n\r\n  submitbtn : {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      float: \"right\",\r\n      right: \"3px\",\r\n      width: \"10%\",\r\n      top: \"2.4em\",\r\n      height: \"2.4em\",\r\n      zIndex: \"2\",\r\n  },\r\n  insert : {\r\n      top: \"3.2em\",\r\n      left : \"9px\",\r\n      height: \"2.5em\",\r\n      width:\"86%\",\r\n      borderBottom : \"1px solid\",\r\n      borderTop: \"0px\",\r\n      borderLeft : \"0\",\r\n      borderRight: \"0\",\r\n    '::placeholder' : {\r\n      color : \"red\",\r\n    }\r\n  },\r\n  \r\n}\r\n\r\n\r\nconst MyQuestionCards = () => {\r\n  let [myQuestions, setMyQuestions] = useState([])\r\n\r\n  const user = useSelector(state => state.user)\r\n  const questions = useSelector(state => state.questionlist)\r\n  // console.log('user', user.data.detail)\r\n  // console.log('questionsList', questions.data.detail)\r\n  \r\n  const userId = user.data.detail.id\r\n  const questionsList = questions.data.detail\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  if(Object.keys(questionsList).length != 0){\r\n    questionsList.map((question) => {\r\n      const questionAuthor = parseInt(question.user)\r\n      // console.log(questionAuthor)\r\n        if(userId === questionAuthor){\r\n          myQuestions = [...myQuestions, question]\r\n        }\r\n    })\r\n  }\r\n  // console.log(myQuestions)\r\n\r\n  return (\r\n    <>\r\n      {myQuestions.length === 0 ? \r\n        <div className=\"NanumGothic3\">질문을 등록해주세요</div> :\r\n        \r\n        myQuestions.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst MyQuestionSend = ({session}) => {\r\n  const [ask, setAsk] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const postApi = async(isVoice, askValue) =>  {\r\n    const headers = {\r\n        'Authorization': 'Token ' + localStorage.token\r\n      }\r\n      const data = {\r\n          is_answered: false,\r\n          is_voice: isVoice,\r\n          question: askValue,\r\n      };\r\n      // console.log(data);\r\n      const res = await axios.post(\r\n        \"https://143.248.226.7:8000/api/hole/\"+session.id + \"/question/create\",\r\n        data,\r\n        {headers:headers}\r\n      );\r\n      dispatch(getQuestionlist(session.id))\r\n}\r\n  return (\r\n    <>\r\n    <div style={{paddingBottom:\"1em\"}}>\r\n    <input\r\n    className=\"BMDOHYEON\"\r\n    type=\"text\"\r\n    maxLength=\"60\"\r\n    value={ask}\r\n    style={style.insert}\r\n    placeholder=\"최대 글자수는 60자입니다.\"\r\n    onChange={(e) => setAsk(e.target.value)}\r\n    />\r\n    <div style={style.submitbtn}>\r\n    <IconButton \r\n        onClick={()=>{\r\n          postApi(false, ask); setAsk(\"\")\r\n          \r\n          }} \r\n        className={classes.iconButton} \r\n        aria-label=\"send\">\r\n        <SendIcon/>\r\n    </IconButton>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst QuestionCard = ({question}) => {\r\n    const classes = useStyles();\r\n    // console.log(question)\r\n    return(\r\n        <>\r\n        <Card key={question.id} className={classes.card}>\r\n          <CardContent>\r\n          <Grid container>\r\n        <div className=\"NanumGothic3\">\r\n          {question.user_profile_image_url?\r\n                <Avatar className={classes.avatar} src={`https://143.248.226.7:8000${question.user_profile_image_url}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"static/reigns/1.jpg\" />\r\n          }\r\n        </div>\r\n        <div className={classes.questionText}>\r\n        <span className={classes.cardText}>{question.user_username} : {question.question}</span>\r\n        </div>\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//Tab 관련 로직\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n  return (\r\n    <Tab\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst PreQuestionNav = ({session}) => {\r\n  const classes = useStyles();\r\n  const questions = useSelector(state => state.questionlist)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor:\"#35528C\"}}>\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n        <Tab\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          }}\r\n          {...a11yProps(0)}\r\n          label={<span className={classes.labelBMJUA}>등록된 질문</span>}/>\r\n          <Tab\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          }}\r\n          {...a11yProps(1)}\r\n          label={<span className={classes.labelBMJUA}>질문하기</span>}/>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      {questions.data.detail.length === 0 ? \r\n        <div className=\"NanumGothic3\">질문을 등록해주세요</div> :\r\n        \r\n        questions.data.detail.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <MyQuestionSend session={session} />\r\n        <MyQuestionCards questions={questions} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreQuestionNav","import React, {useEffect, useState} from \"react\";\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PreQuestionNav from './PreQuestionNav'\r\nimport MypageNav from '../mypage/MypageNav'\r\nimport getQuestionlist from \"../../actions/QuestionListActions\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport { Progress, Badge, Divider } from 'antd';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Moment from \"react-moment\";\r\nimport \"../../styles/style.css\";\r\nimport \"../../App.css\";\r\nimport { QUESTIONLIST_DELETE } from \"../../actions/types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      display: 'flex',\r\n      maxWidth: \"70em\",\r\n      minWidth: \"18em\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    avatar : {\r\n      width: theme.spacing(10.5),\r\n      height: theme.spacing(10.5),\r\n      transform: \"translate(0.4em,-4.85em)\"\r\n      // opacity: 0.7,\r\n    },\r\n    title : {\r\n      paddingLeft: \"1em\",\r\n      fontFamily: \"BMJUA\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1.8em\",\r\n      paddingTop: \"0.8em\",\r\n      paddingBottom: \"1em\",\r\n    },\r\n    time : {\r\n      paddingLeft: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      fontFamily: \"BMJUA\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1em\",\r\n    },\r\n    desc : {\r\n      display: \"flex\",\r\n      flexDirection: 'column',\r\n      paddingLeft: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      fontFamily: \"BMJUA\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"500\",\r\n      fontSize: \"1em\",\r\n    },\r\n    progress : {\r\n      transform: \"translate(-1em,1em)\"\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst SessionDetail = ({session}) => {\r\n  const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    if(session === undefined){\r\n      return(\r\n        <>\r\n        로딩중\r\n        </>\r\n      )\r\n    }\r\n    return(\r\n        <>\r\n        <Grid container spacing={0}>\r\n        <Grid item xs={8}>\r\n        <p className={classes.title}>{session.title}</p>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        <Progress \r\n          className={classes.progress}\r\n          strokeWidth=\"5\"\r\n          type=\"dashboard\"\r\n          strokeColor=\"#F24822\"\r\n          gapDegree = \"85\"\r\n          width={100}\r\n          format={percent => {\r\n            // 여기 수정 필요\r\n            if(percent == 100){\r\n              return(\r\n                <>\r\n                {session.host_profile_image?\r\n                <Avatar className={classes.avatar} src={`https://143.248.226.7:8000${session.host_profile_image}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"/static/reigns/1.jpg\" />\r\n              }\r\n                  \r\n                </>\r\n              )\r\n            }else{\r\n              return(\r\n                <>\r\n                  {session.host_profile_image?\r\n                <Avatar className={classes.avatar} src={`https://143.248.226.7:8000${session.host_profile_image}`} />\r\n              :\r\n                <Avatar className={classes.avatar} src=\"static/reigns/1.jpg\" />\r\n              }\r\n                </>\r\n              )}\r\n            \r\n            }}\r\n          percent={(session.hole_reservations) ? \r\n                  Math.ceil(\r\n                    session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                    session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0}/>\r\n        </Grid>\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n          <div className={classes.time}>라이브 예정 일자 : {``}\r\n            <Moment format=\"MM월 DD일 A h:mm\">\r\n                  {session.reserve_date}\r\n            </Moment></div>\r\n\r\n\r\n          <div className={classes.desc}>라이브 주제 : {``} {session.description}</div>\r\n\r\n        </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ListPreQuestions = ({questions, session}) => {\r\n    // console.log('qestions', questions)\r\n    return(\r\n        <>\r\n        <PreQuestionNav session={session}/>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst PreQuestions = () => {\r\n    const dispatch = useDispatch()\r\n    const questions = useSelector(state => state.questionlist)\r\n    const sessions = useSelector(state => state.session.data)\r\n    let targetSession = {};\r\n\r\n    const href = window.location.href\r\n    const sessionId = parseInt(href.split('/')[4])\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        sessions.map((session) => {\r\n          // console.log('DEBUG22',session)\r\n            if(sessionId === session.id){\r\n                targetSession = {...targetSession, session}\r\n            }\r\n        })\r\n      }\r\n    useEffect(() => {\r\n      if(Object.keys(questions.data).length === 0){\r\n        dispatch(getQuestionlist(sessionId))\r\n      }\r\n    })\r\n    \r\n    return (\r\n            <>\r\n        <MypageNav text={'Live Q&A 질문방'} />\r\n        {/* <div style={{position : \"absolute\", height:\"12em\", width: \"100%\", backgroundColor:\"skyblue\"}}>{\"\"}</div> */}\r\n        <div style={{display:\"flex\", justifyContent:\"center\", position:\"absolute\", top:\"9%\" , width:\"100%\"}}>\r\n          <div style={{width:\"100%\", maxWidth:\"50em\"}}>\r\n          <SessionDetail session={targetSession.session}/>\r\n          {Object.keys(questions.data).length > 0 ? <ListPreQuestions questions={questions} session={targetSession.session}/> : null}\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n  \r\n}\r\nexport default PreQuestions;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(channelNum){\r\n    return axios.get('https://143.248.226.7:8000/api/hole/live/read/' + channelNum);\r\n}\r\n\r\nconst getEnteredSession = channelNum => dispatch => {\r\n    // console.log('-----getEnteredSession-----')\r\n    dispatch({type: ENTEREDSESSION_GET_PENDING}); \r\n\r\n\r\n    return getApi(channelNum).then(\r\n        (response) => {\r\n            // console.log(response);\r\n            dispatch({ type: ENTEREDSESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ENTEREDSESSION_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getEnteredSession;","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      margin: \"3%\",\r\n      maxWidth: \"50em\",\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    },\r\n    cardContent: {\r\n      height: \"30px\",\r\n    },\r\n    cookieWrapper: {\r\n      backgroundColor:\"#EEAC4B\",\r\n      float: \"left\",\r\n      marginLeft: \"2%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      overflow: \"hidden\",\r\n    },\r\n    useCookie: {\r\n      float: \"left\",\r\n      margin: \"auto\",\r\n      backgroundImage: \"url('/static/cookieMould.png')\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      overflow: \"hidden\",\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    participant : {\r\n        width: \"100%\",\r\n        maxWidth: \"30em\",\r\n        padding: \"10px\",\r\n    },\r\n    tmp: {\r\n        float: \"left\",\r\n        marginLeft : \"2%\",\r\n    },\r\n    follow: {\r\n        float : \"right\",\r\n        width: \"5em\",\r\n        height:\"5em\",\r\n        backgroundColor:\"pink\",\r\n    }\r\n}\r\n\r\nconst Participant = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\">\r\n                <Card style={style.participant} className={classes.root}>\r\n                    <div\r\n                        style={{backgroundImage: props.profileImage ? \"url('https://143.248.226.7:8000\" + props.profileImage +\"')\" : \"url('/static/reigns/1.jpg')\" }}\r\n                        className={classes.cookieWrapper}\r\n                    >\r\n                        <div className={classes.useCookie}></div>\r\n                    </div>\r\n                    <div style={style.tmp}>\r\n                        <p style={{marginBottom:\"5px\"}}>{props.nickName}</p>\r\n                        <span className= \"NanumGothic3\" style={{color: \"rgba(0, 0, 0, 0.5)\", fontSize : \"0.8em\"}}>\r\n                            {props.workCompany ? \r\n                            <>\r\n                             {props.workCompany} |\r\n                            </>\r\n                             : null}\r\n                            {props.workField ? \r\n                            <>\r\n                             {\" \" + props.workField}\r\n                            </>\r\n                             : null}\r\n                             {\r\n                                !props.workCompany && !props.workField ?\r\n                                <>ASK2LIVE | Live Q&A</>\r\n                                :\r\n                                <></>\r\n                             }\r\n                        </span>\r\n                    </div>\r\n                    {/* <div style={style.follow}>follow</div> */}\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Participant;","import React, {useState, useEffect} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Participant from \"./Participant\"\r\nimport axios from \"axios\"\r\n\r\nconst style = {\r\n    participantlist : {\r\n        width: \"100%\",\r\n        borderRadius : \"15px\",\r\n        padding: \"0\",\r\n    }\r\n}\r\n\r\nconst ParticipantList = (props) => {\r\n\r\n    const participants = useSelector(state => state.enteredSession);\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={{display:\"flex\", position:\"absolute\", height:\"9%\", alignItems:\"flex-end\", justifyContent:\"center\" }}>\r\n\r\n            <p className=\"NanumGothic3\" style={{borderBottom:\"1px solid black\", margin:\"0\"}}>\r\n                {participants.arrived?\r\n                    participants.data.detail.participant.length+\"명이 듣고 있어요\"\r\n                    :\r\n                    <></>\r\n                }\r\n            </p>\r\n        </div>\r\n            <Paper style={style.participantlist} elevation={0}>\r\n                <div style={{position:\"absolute\", top: \"10%\", height:\"90%\", width:\"100%\", overflow:\"auto\"}}>\r\n                    {participants.arrived ? \r\n                        participants.data.detail.participant.map((participant) => \r\n                        <Participant \r\n                        nickName={participant.username}\r\n                        workField={participant.work_field}\r\n                        workCompany={participant.work_company}\r\n                        profileImage={participant.profile_image_url}/>)\r\n                        : \r\n                        <p>로딩중</p>}\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ParticipantList;","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst style = {\r\n    audience1 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,1)\"\r\n    },\r\n    audience2 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,0.6)\"\r\n    },\r\n    paper : {\r\n        position: \"absolute\",\r\n        width: \"90%\",\r\n        height : \"100%\",\r\n        maxWidth:\"30em\",\r\n        backgroundColor: \"red\",\r\n        borderRadius: \"30px 30px 30px 30px \"\r\n    },\r\n    card : {\r\n        transform:\"translate(-1px, -1px)\",\r\n        position: \"absolute\",\r\n        width: \"90%\",\r\n        maxWidth:\"30em\",\r\n        borderRadius : \"30px 30px 0 0\",\r\n        backgroundColor: \"#EF5941\",\r\n        height: \"20%\",\r\n        // height: \"20px\",\r\n        zIndex:\"3\",\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n        // padding: \"3px\",\r\n    },\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n    root2: {\r\n    maxWidth: \"30em\",\r\n    height:\"inherit\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"90%\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: \"inherit\",\r\n        // height: \"70px\",\r\n        borderRadius : \"30px\",\r\n        border: \"1px solid #EF5941\",\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst StringQuestion = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let questionStr = props.userQuestion;\r\n    const [finish, setFinish] = useState(false);\r\n    const [btnDisable, setBtnDisable] = useState(false);\r\n\r\n\r\n    return (\r\n      \r\n        <>\r\n        <div style={{\r\n            zIndex:\"2\", \r\n            alignItems: \"center\", \r\n            justifyContent:\"center\",\r\n            display:\"flex\", \r\n            position:\"absolute\", \r\n            // backgroundColor:\"skyblue\",\r\n            height:\"95%\", \r\n            width:\"100%\"}}>\r\n\r\n \r\n\r\n            <div className={classes.root2}>\r\n                <Paper>\r\n                    <div style={style.card}>\r\n                            <div \r\n                            style={{\r\n                            position:\"absolute\", \r\n                            display:\"flex\", \r\n                            alignItems:\"center\", \r\n                            height:\"100%\", \r\n                            marginLeft: \"1.5em\"}}>\r\n                                <div style={{display:\"inline-block\"}}>\r\n                                    <Avatar src={props.imageLink? \"https://143.248.226.7:8000\" + props.imageLink : \"/static/reigns/1.jpg\"} className={classes.small}/>\r\n                                </div>\r\n                                <span\r\n                                style={{marginLeft:\"6px\", marginTop:\"3px\", color:\"white\"}}\r\n                                className=\"BMJUA\"\r\n                                >{props.userNickName}\r\n                                </span>\r\n                                <span\r\n                                style={{marginLeft: \"5px\", fontSize: \"0.8em\", color:\"white\"}}\r\n                                >님의 질문\r\n                                </span>\r\n                            </div>\r\n                    </div>\r\n                    <div \r\n                    className=\"currQuestion\">\r\n                        <span className=\"Gmarket2\">{questionStr}</span> \r\n                    </div>\r\n\r\n                 \r\n                </Paper>\r\n            </div>\r\n            <div style={{position:\"absolute\", bottom:\"-3%\", height:\"20%\", width:\"100%\", display:\"flex\", alignItems:\"center\",justifyContent:\"center\"}}>\r\n                {props.isHost?\r\n                <button\r\n                className=\"NanumGothic3\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent:\"center\",\r\n                    position:\"absolute\", \r\n                    transform:\"translate(0, 0px)\",\r\n                    zIndex: \"3\",\r\n                    height:\"100%\", \r\n                    width: \"6em\", \r\n                    backgroundColor: \"#3B3B3B\",\r\n                    fontSize:\"0.7em\",\r\n                    borderRadius:\"16px\",\r\n                    color:\"#EF5941\",\r\n                    border:\"1px solid #EF5941\",\r\n                    zIndex:\"3\",\r\n                }}\r\n                disabled={btnDisable}\r\n                onClick={()=>{\r\n                    setBtnDisable(true)\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setFinish(true)\r\n                    setTimeout(()=>{setFinish(false); setBtnDisable(false)}, 4000)             \r\n                }}\r\n            >{finish ? \r\n            <div className=\"loadingCircle\"></div> \r\n            :  \r\n            \"답변완료\"\r\n            }</button>\r\n                :\r\n                <></>\r\n                }\r\n            </div>\r\n                \r\n        </div>\r\n        </>\r\n        \r\n\r\n\r\n\r\n\r\n//---------------------------------------------------\r\n\r\n\r\n        // <>\r\n        // <div style={{margin: \"0em 0em 0.5em 1em\", display:\"flex\"}}>\r\n        //     <Avatar src={props.hostImage} className={classes.small}/>\r\n        //     <span style={style.audience1} className=\"NanumGothic\">{props.userNickName}</span>\r\n        //     <span style={style.audience2} className=\"NanumGothic\">님의 질문</span>\r\n        //     {props.isHost?\r\n        //     <button\r\n        //     onClick={()=>{props.onAnswered(props.currentQuestionId)}}\r\n        //     >완료</button>\r\n        //     :\r\n        //     <></>\r\n        //     }\r\n        // </div>\r\n        // {console.log(questionStrAry)}\r\n        // {\r\n        //     questionStrAry.map((questionUnit) => \r\n        //     <>\r\n        //         <p style={style.cloud} className=\"BMJUA\">{questionUnit}</p><br/>\r\n        //     </>\r\n        //     )\r\n        // }\r\n\r\n        // </>\r\n    )\r\n    \r\n}\r\n\r\nexport default StringQuestion;","import React, {useEffect, memo} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent :\"center\",\r\n        alignItems : \"center\",\r\n        height:\"5.5em\",\r\n        width:\"5.5em\",\r\n        padding:\"3px\",\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9),\r\n        zIndex:\"1\",\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst style = {\r\n    circleWrap : {\r\n        margin : \"4px\",\r\n    },\r\n    circle1 : {\r\n        border : \"solid 1px rgba(255, 255, 255, .3)\",\r\n        borderRadius : \"100%\",\r\n        padding:\"6px\",\r\n    },\r\n    circle2 : {\r\n        border : \"solid 1px rgba(255, 255, 255, .6)\",\r\n        borderRadius : \"100%\",\r\n    },\r\n    circleWhite : {\r\n        border : \"solid 2px rgba(255, 255, 255, 0.9)\",\r\n        borderRadius : \"100%\",\r\n        padding:\"6px\",\r\n    }\r\n}\r\n\r\nconst UserAvatar = memo((props) => {\r\n    const classes = useStyles();;\r\n    const volume = useSelector(state => state.volume);\r\n    const liveInfo = useSelector(state => state.enteredSession);\r\n\r\n    if (liveInfo.arrived)\r\n    {\r\n        // console.log(\"liveInfo ----------\",liveInfo);\r\n        if (props.isHostAvatar)\r\n        {\r\n            const hostUid = liveInfo.data.detail.livehole.host_uid;\r\n            return (\r\n                <>\r\n                <div className={classes.root}>\r\n                    <div style={volume[hostUid] > 0.5 ? style.circle2 : null}>\r\n                        <div style={style.circleWrap}>\r\n    \r\n                            <div style={volume[hostUid] > 0.2 ? style.circleWhite : style.circle1}>\r\n                                    <Avatar alt={props.hostName} src={props.imageLink ? \"https://143.248.226.7:8000\"+props.imageLink : \"/static/reigns/1.jpg\"} className={classes.large}/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <>\r\n                <div className={classes.root}>\r\n                    <div style={volume[props.userUid] > 0.5 ? style.circle2 : null}>\r\n                        <div style={style.circleWrap}>\r\n    \r\n                            <div style={volume[props.userUid] > 0.2 ? style.circleWhite : style.circle1}>\r\n                                    <Avatar alt={props.hostName} src={props.imageLink ? \"https://143.248.226.7:8000\"+props.imageLink : \"/static/reigns/1.jpg\"} className={classes.large}/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div className={classes.root}>\r\n                <div style={style.circle1}>\r\n                        <Avatar alt={props.hostName} src={props.imageLink ? \"https://143.248.226.7:8000\"+props.imageLink : \"/static/reigns/1.jpg\"} className={classes.large}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n})\r\n\r\nexport default UserAvatar\r\n\r\n\r\n\r\n","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport Avatar from \"../Avatar\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport \"../../styles/style.css\"\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent:\"center\",\r\n        '& > *': {\r\n          margin: theme.spacing(0),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst VoiceQuestion = (props) => {\r\n    // console.log(\"무야호\", props)\r\n    const classes = useStyles();\r\n    const [click, setClick] = useState(false)\r\n    const [clickStyle, setClickStyle] = useState({color: \"#EF5941\"})\r\n    const [finish, setFinish] = useState(false);\r\n    const [exitClick, setExitClick] = useState(false);\r\n\r\n    const [hidden, setHidden] = useState(\"0\")\r\n\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{setHidden(\"1\")}, 1000);\r\n    })\r\n\r\n    const sendP2PMessage = useCallback((recipientUID, peerMsg) => {\r\n        // console.log(\"sendP2PMessage\");\r\n    \r\n        // An RtmMessage object.\r\n        const remoteUID = String(recipientUID);\r\n    \r\n\r\n        // p2p message\r\n        // console.log(\"리모트 UID: \", remoteUID);\r\n        // console.log(\"리모트 msg: \", peerMsg);\r\n    \r\n        if (peerMsg) {\r\n          (props.rtmClient)\r\n            .sendMessageToPeer({ text: peerMsg }, remoteUID)\r\n            .then((sendResult) => {\r\n              if (sendResult.hasPeerReceived) {\r\n                // console.log(\"peer recieved \" + peerMsg + \" successfully\");\r\n\r\n              } else {\r\n                // console.log(\"peer did not recieved \" + peerMsg + \" unlog\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n            //   console.log(\"RTM message recieved err\");\r\n            });\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n        <div style={{\r\n            zIndex: \"1\",\r\n            position:\"fixed\",\r\n            top:\"5%\",\r\n            display:\"flex\",\r\n            maxWidth:\"45em\",\r\n            width:\"100%\",\r\n            height:\"25%\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"center\",\r\n            transform:\"translate(25%,71%)\",\r\n            transition : \"opacity 1s\",\r\n            opacity:hidden}}>\r\n\r\n            <div style={{\r\n                zIndex: \"1\",\r\n                marginTop:\"13px\",\r\n                width:\"6em\"}}>\r\n                <div style={{zIndex: \"1\",width:\"5.6em\"}}>\r\n                    <Avatar \r\n                    userUid={props.userUid}\r\n                    isHostAvatar={false}\r\n                    style={{zIndex: \"1\"}} \r\n                    alt={props.userNickName} \r\n                    imageLink={props.imageLink} \r\n                    className={classes.large}/>\r\n                </div>\r\n                <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                    <p className=\"BMDOHYEON\" style={{marginTop:\"5px\", marginLeft:\"-8px\", color:\"rgba(255,255,255,0.8)\"}}>{props.userNickName}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style={{\r\n            transition : \"opacity 1s\",\r\n            opacity:hidden, \r\n            zIndex: \"0\",\r\n            top:\"22.5%\",\r\n            position:\"fixed\", \r\n            height: \"25%\",\r\n            display:\"flex\", \r\n            alignItems:\"center\", \r\n            justifyContent:\"center\", \r\n            width:\"100%\", \r\n            maxWidth:\"45em\"}}>\r\n\r\n            <div style={{}} className=\"voicePlane\">\r\n                <div style={{\r\n                    border: \"1px solid #EF5941\",\r\n                    position:\"absolute\",\r\n                    width:\"100%\",\r\n                    height:\"4em\",\r\n\r\n                }}>\r\n                <div className=\"voicePlaneC1\">\r\n                    <div style={{\r\n                        width :\"1.5em\",\r\n                        height:\"1.5em\",\r\n                        backgroundImage: \"url('/static/wave2.jpg')\",\r\n                        backgroundSize:\"contain\",\r\n                    }}/>\r\n                    {/* <SendIcon/>     */}\r\n                </div> \r\n                <div className=\"voicePlaneC2\">\r\n                    <div style={{\r\n                        width :\"1.5em\",\r\n                        height:\"1.5em\",\r\n                        backgroundImage: \"url('/static/wave2.jpg')\",\r\n                        backgroundSize:\"contain\",\r\n                    }}/>\r\n                    {/* <SendIcon/> */}\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div style={{\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"flex-end\",\r\n            width:\"12em\", \r\n            height:\"145%\"}}>\r\n                {props.isHost?\r\n                <>\r\n                <button\r\n                className=\"audienceLink\"\r\n                disabled={click}\r\n                onClick={()=>{setClickStyle({color:\"grey\"});setClick(true); sendP2PMessage(props.userUid, \"host\")}}\r\n                >\r\n                    <span style={clickStyle} className=\"NanumGothic3\">연결하기</span>\r\n                </button>\r\n                <button\r\n                className=\"linkExit\"\r\n                disabled={exitClick}\r\n                style={{zIndex:\"1\",backgroundColor:\"#3B3B3B\"}}\r\n                onClick={()=>{\r\n                    setClick(true);\r\n                    setFinish(true);\r\n                    setExitClick(true);\r\n                    sendP2PMessage(props.userUid, \"audience\")\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setTimeout(() => {\r\n                        setFinish(false);\r\n                        setExitClick(false);\r\n                        setClick(false);\r\n                        setClickStyle({color:\"#EF5941\"});\r\n                    }, 4000);\r\n                }}\r\n                >\r\n                {   finish?\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <div className=\"loadingCircle\"></div> \r\n\r\n                    </div>\r\n                    :\r\n                    <span style={{color: \"white\"}} className=\"NanumGothic3\">답변완료</span>\r\n\r\n                }\r\n                </button>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VoiceQuestion;","import React, {useState, useCallback, memo} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport StringQuestion from \"./StringQuestion\";\r\nimport VoiceQuestion from \"./VoiceQuestion\";\r\n\r\nconst style = {\r\n    wait : {\r\n        top: \"40%\",\r\n        position: \"absolute\",\r\n        color : \"rgba(255,255,255,0.7)\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        width:\"100%\",\r\n    }\r\n}\r\n\r\nconst CurrentQuestion = memo((props) => {\r\n    \r\n    const questionPatchApi = async(questionId) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: true,\r\n          };\r\n          const res = await axios.patch(\r\n            \"https://143.248.226.7:8000/api/hole/\"+props.holeId+\"/question/update/\"+questionId,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(res.data);\r\n          if (res.data.response === \"SUCCESS\")\r\n          {\r\n            props.roomSocket.send(\r\n                JSON.stringify({ command: \"fetch_questions\", data: { pk: props.holeId }}));\r\n          }\r\n    }\r\n\r\n    const forQuestionidx = useCallback((questionList) => {\r\n        return questionList.findIndex((question => question.is_answered == false))\r\n    })\r\n\r\n\r\n    const questionResponse = useSelector(state => state.questionlist)\r\n\r\n    if (questionResponse.arrived)\r\n    {\r\n        let questionList = questionResponse.data;\r\n        if (questionList.length == 0) \r\n            return (\r\n                <>\r\n                <div style={style.wait}>\r\n                 <p>질문이 없습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        let questionIdx = forQuestionidx(questionList);\r\n        //이걸 매번 돌리기엔 비효율적.. useEffect를 쓰면 될까??\r\n        if (questionIdx == -1)\r\n        {\r\n            if (props.liveVoice)\r\n                props.setLiveVoice(false);\r\n            return (\r\n                <>\r\n                <div style={style.wait} className=\"BMJUA\">\r\n                <p>모든 질문이 답변되었습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        }   \r\n        else \r\n        {\r\n            const onAnswered = (questionId) => {\r\n                // console.log(\"RoomSocket::\", props.roomSocket)\r\n                questionPatchApi(questionId);\r\n            } \r\n\r\n            let currentQuestion = questionList[questionIdx];\r\n            let userNickName = currentQuestion.user_username;\r\n            let isVoice = currentQuestion.is_voice;\r\n            let userUid = currentQuestion.user_uid;\r\n            let imageLink = currentQuestion.user_profile_image_url\r\n\r\n            if (isVoice)\r\n            {\r\n                if (!props.liveVoice)\r\n                    props.setLiveVoice(true)\r\n                return (\r\n                <>\r\n                <VoiceQuestion \r\n                userUid={userUid} \r\n                userNickName={userNickName} \r\n                imageLink={imageLink}\r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered} \r\n                currentQuestionId={currentQuestion.id}\r\n                client={props.client}\r\n                rtmClient={props.rtmClient}\r\n                host={props.host}\r\n                localAudioTrack={props.localAudioTrack}\r\n                remoteUsers={props.remoteUsers}\r\n                channelNum={props.channelNum}\r\n                />\r\n                </>\r\n                )\r\n            }\r\n\r\n            else {\r\n                if (props.liveVoice)\r\n                    props.setLiveVoice(false);\r\n                let userQuestion = currentQuestion.question;\r\n          \r\n                return (\r\n                <StringQuestion \r\n                userNickName={userNickName} \r\n                userQuestion={userQuestion} \r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered}\r\n                currentQuestionId={currentQuestion.id}\r\n                imageLink={imageLink}\r\n                />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    else return (\r\n        <>\r\n        <div style={style.wait}>\r\n            <p> 로딩중 </p>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n\r\n    // if (questionResponse.arrived)\r\n    // {\r\n    //     let questionList = questionResponse.data\r\n    //     if (questionList.length == questionNum) \r\n    //         return <p>질문이 없습니다.</p>\r\n    //     else if (questionList.length != questionNum)\r\n    //     {\r\n    //         let currentQuestion = questionList[questionNum];\r\n    //         let userNickName = currentQuestion.user_nickname;\r\n    //         let isVoice = currentQuestion.is_voice;\r\n    //         if (isVoice)\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userNickName} 음성 질문입니다</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         else {\r\n    //             let userQuestion = currentQuestion.question;\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userQuestion}</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         }\r\n    //     }\r\n    // }\r\n   \r\n})\r\n\r\n\r\nexport default CurrentQuestion","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"100%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n        display: \"\",\r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        float: \"left\",\r\n        height: theme.spacing(10),\r\n        // height: \"70px\",\r\n        borderRadius : \"15px\",\r\n      },\r\n    },\r\n    myPaper : {\r\n        border : \"3px solid white\",\r\n        boxShadow: \"0px 0px 2px 3px black\"\r\n    },\r\n    otherPaper: {\r\n        border : \"2px solid black\",\r\n    }\r\n  }));\r\n\r\nconst style = {\r\n    card : {\r\n        borderRadius : \"15px 15px 0 0\",\r\n        backgroundColor: \"#D95032\",\r\n        height: \"1.5rem\",\r\n        // height: \"20px\",\r\n        padding: \"0.3rem\",\r\n        // padding: \"3px\",\r\n    },\r\n\r\n}\r\n\r\nexport default function SimplePaper(props) {\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n    <>\r\n    {props.isFirst?\r\n    <div style={{marginLeft: \"10px\", marginBottom:\"10px\"}}>\r\n     <div style={{borderRadius:\"100%\", display:\"inline-block\", backgroundColor:\"#d95032\", width:\"10px\", height:\"10px\"}}></div>\r\n    <span className=\"CookieRun\" style={{marginLeft: \"8px\",marginBottom:\"10px\"}}>\r\n       지금 답변중!</span>\r\n    </div>\r\n    :\r\n    null\r\n    }\r\n    <div className={classes.root}>\r\n    <Paper className={props.myQuestion? classes.myPaper : classes.otherPaper} style={props.isVoice? {backgroundColor:\"#D95032\"} : null} elevation={2} >\r\n        <div style={style.card}>\r\n            <p style={{margin:\"4px 0 0 4px\", padding :\"0\"}}className=\"BMDOHYEON\">{props.userName}</p>\r\n        </div>\r\n        <div className=\"questionWrap\">\r\n            <p style={{margin:\"4px 0 0 8px\", padding :\"0\"}}className=\"NanumGothic2\">{props.value}</p>\r\n        </div>\r\n    </Paper>\r\n    </div>\r\n    {props.isFirst? \r\n    <>\r\n    <div style={{width:\"100%\", borderBottom:\"1px solid rgba(0, 0, 0, 0.5)\"}}/>\r\n    <br/>\r\n    </>\r\n    :\r\n    null\r\n    }\r\n    </>\r\n);\r\n}","import { useSelector } from \"react-redux\" \r\nimport React, { useState }from 'react';\r\nimport Question from \"./Question\";\r\nimport axios from \"axios\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst style ={\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        bottom: \"90%\",\r\n        width: \"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\n\r\nconst QuestionList = (props) => {\r\n\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid black\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    const questionAry = useSelector(state => state.questionlist)\r\n    const myName = useSelector(state => state.user.data.detail.username)\r\n    // console.log(myName);\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{setClick2(); setClick1({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">등록된 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{setClick1(); setClick2({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">답변된 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        \r\n        {click1 ?\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ? \r\n            questionAry.data.findIndex((questionInfo) => !(questionInfo.is_answered)) === -1 ?\r\n            <div style={{display:\"flex\", justifyContent:\"center\", width:\"100%\", maxWidth:\"45em\"}}>\r\n                <p className=\"CookieRun\">등록된 질문이 없습니다</p>\r\n            </div>\r\n            :\r\n                questionAry.data.map((questionInfo) =>\r\n                    questionInfo.is_answered ?\r\n                        null\r\n                    :\r\n                        questionInfo.user_username === myName?\r\n                        <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}\r\n                        isFirst={questionInfo === questionAry.data[questionAry.data.findIndex((value) => value.is_answered === false)]}/>\r\n                        :\r\n                        <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}\r\n                        isFirst={questionInfo === questionAry.data[questionAry.data.findIndex((value) => value.is_answered === false)]}/>\r\n                )\r\n\r\n                : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        :\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ?\r\n            questionAry.data.findIndex((questionInfo) => questionInfo.is_answered) === -1 ?\r\n            <div style={{display:\"flex\", justifyContent:\"center\", width:\"100%\", maxWidth:\"45em\"}}>\r\n                <p className=\"CookieRun\">아직 답변된 질문이 없습니다.</p>\r\n            </div>\r\n            :\r\n                questionAry.data.map((questionInfo) =>\r\n                    questionInfo.is_answered ?\r\n                        questionInfo.user_username === myName?\r\n                        <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={true}/>\r\n                        :       \r\n                        <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion={false}/>\r\n                    :\r\n                        null\r\n                )\r\n\r\n                : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionList","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport useSelection from \"antd/lib/table/hooks/useSelection\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        maxWidth: \"42em\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"95%\",\r\n      bottom: \"0%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: \"11em\",\r\n        // height: \"70px\",\r\n        borderRadius : \"30px\",\r\n        border: \"1px solid #EF5941\",\r\n      },\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    paper : {\r\n        position: \"absolute\",\r\n        bottom:\"0%\",\r\n        width: \"100%\",\r\n        height : \"100%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"30px 30px 0 0 \"\r\n    },\r\n    questionbutton : {\r\n        width : \"100%\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        position: \"absolute\",\r\n        top : \"-0.7em\",\r\n        zIndex:\"3\",\r\n        height:\"1px\",\r\n    },\r\n    card : {\r\n        transform:\"translate(-1px, -1px)\",\r\n        paddingTop:\"4px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        maxWidth:\"42em\",\r\n        borderRadius : \"30px 30px 0 0\",\r\n        backgroundColor: \"#EF5941\",\r\n        height: \"3em\",\r\n        // height: \"20px\",\r\n        zIndex:\"3\",\r\n        // padding: \"3px\",\r\n    },\r\n    submitbtn : {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        right: \"1em\",\r\n        width: \"10%\",\r\n        top: \"0.5em\",\r\n        height: \"2.4em\",\r\n        zIndex: \"3\",\r\n    },\r\n    insert : {\r\n        marginTop: \"10px\",\r\n        display : \"block\",\r\n\r\n        top: \"4em\",\r\n        left : \"10px\",\r\n        height: \"7em\",\r\n        width:\"90%\",\r\n        border : \"none\",\r\n    },\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        top:\"0%\",\r\n        zIndex:\"3\",\r\n        width:\"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\nconst Questioning = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ask, setAsk] = useState(\"\")\r\n    const [voice, setVoice] = useState(true)\r\n    const [queStyle, setQueStyle] = useState({opacity: \"1\"})\r\n\r\n    const myInfo = useSelector(state => state.user);\r\n\r\n\r\n\r\n    const pressEnter = (e) => {\r\n        if (e.key == 'Enter'){\r\n            postApi(false, ask);\r\n            // props.roomSocket.send(\r\n            //     JSON.stringify({ command: \"create_question\", data: { pk: props.holeId, is_voice : false, question: ask, token: localStorage.token}})); \r\n            setAsk(\"\")\r\n            props.openQuestionAlert();\r\n            props.goQueUp({transform : \"translate(0, 100%)\"});\r\n            props.goDark({opacity: \"0\", animation: \"golight 0.7s\"});\r\n            setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n        }\r\n    }\r\n\r\n    const voiceClick = () => {\r\n        if (voice)\r\n        {\r\n            setQueStyle({opacity: \"0\", display : \"none\"}) \r\n            // setTimeout((()=>setQueStyle({display: \"none\"})),1000)\r\n        }\r\n        else\r\n            setQueStyle({opacity: \"1\"})\r\n            // setTimeout((()=>setQueStyle({display:\"flex\"})),1000)\r\n        setVoice(prevVoice => !prevVoice)\r\n    }\r\n\r\n    const postApi = async(isVoice, askValue) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: false,\r\n              is_voice: isVoice,\r\n              question: askValue,\r\n          };\r\n        //   console.log(data);\r\n          const res = await axios.post(\r\n            \"https://143.248.226.7:8000/api/hole/\"+props.holeId + \"/question/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(\"QUESTIONING RES ::\", res)\r\n          if (res.data.response === \"SUCCESS\")\r\n          {\r\n            // console.log(\"QUESTIONING RES SUCCESS\");\r\n            props.roomSocket.send(\r\n                JSON.stringify({ command: \"fetch_questions\", data: {pk: props.holeId} }));\r\n          }\r\n            \r\n    }\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid #EF5941\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td style={{width:\"50%\"}}>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{\r\n                    setVoice(true); \r\n                    setQueStyle({opacity: \"1\"});\r\n                    setClick2(); \r\n                    setClick1({borderBottom:\"2px solid #EF5941\"})}}\r\n                className=\"Gmarket3\">음성 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{\r\n                    setVoice(false); \r\n                    setQueStyle({opacity: \"0\", display : \"none\"}) ;\r\n                    setClick1(); \r\n                    setClick2({borderBottom:\"2px solid #EF5941\"})}}\r\n                className=\"Gmarket3\">텍스트 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        <Paper style={style.paper} elevation={0}>\r\n            <Grid container justify=\"center\">\r\n                <div className={classes.root}>\r\n                    <Paper elevation={0} >\r\n                        <div style={style.card}>\r\n                            {\r\n                                myInfo.arrived?\r\n        \r\n                                <div \r\n                                style={{position:\"absolute\", marginLeft: \"1.5em\", marginTop: \"0.7em\"}}>\r\n                                    <span\r\n                                    style={{color:\"white\"}}\r\n                                    className=\"BMJUA\"\r\n                                    >{myInfo.data.detail.username}</span>\r\n                                    <span\r\n                                    style={{marginLeft: \"5px\", fontSize: \"0.8em\", color:\"white\"}}\r\n                                    >님의 질문</span>\r\n                                </div>\r\n    \r\n                                :\r\n                                <span> 로딩중 </span>\r\n                            }\r\n                        </div>\r\n                        <div style={queStyle} className=\"QuestioningWrapper\">\r\n                            <p className=\"Gmarket1\" style={{margin:\"2em 0 0 0\", color: \"white\", fontSize:\"1em\"}}>\r\n                                음성으로 물어볼래요!\r\n                            </p>\r\n                            <p className=\"NanumGothic2\" style={{margin:\"1em 0 0 0\",color: \"white\", fontSize:\"0.7em\"}}>\r\n                                차례가 됐을 때 호스트가\r\n                            </p>\r\n                            <p className=\"NanumGothic2\" style={{margin:\"0\",color: \"white\", fontSize:\"0.7em\"}}>\r\n                                음성권한을 부여할 수 있습니다\r\n                            </p>\r\n                        </div>\r\n                        <div style={{\r\n                            display: \"flex\", justifyContent:\"center\",\r\n                            width:\"100%\", height:\"8em\", transform:\"translate(0, 3em)\"}}>\r\n                            <textarea\r\n                            value={ask}\r\n                            style={style.insert}\r\n                            className=\"Gmarket2\"\r\n                            placeholder=\"질문을 입력하세요!\"\r\n                            maxLength=\"99\"\r\n                            onChange={(e) => setAsk(e.target.value)}\r\n                            onKeyPress={pressEnter}\r\n                            />\r\n                        </div>\r\n                        <div style={style.submitbtn}>\r\n                        <IconButton\r\n                            style = {{color: \"white\", fontSize: \"1em\"}}\r\n                            onClick={()=>{\r\n                                if (voice)\r\n                                {\r\n                                    postApi(true, \"(음성 질문입니다)\"); \r\n                                    // props.roomSocket.send(\r\n                                    //     JSON.stringify({ command: \"create_question\", data: { pk: props.holeId, is_voice : true, question: \"(음성 질문입니다.)\", token: localStorage.token}})); \r\n                                    setAsk(\"\");\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"});\r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }\r\n                                else if (!voice && ask.length >= 1)\r\n                                {\r\n                                    postApi(false, ask);\r\n                                    // props.roomSocket.send(\r\n                                    //     JSON.stringify({ command: \"create_question\", data: { pk: props.holeId, is_voice : false, question: ask, token: localStorage.token}})); \r\n                                    setAsk(\"\")\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }}}\r\n                            className=\"BMJUA\" \r\n                            aria-label=\"send\">\r\n                            등록\r\n                        </IconButton>\r\n                        </div>\r\n                        <div style={{display:\"block\", zIndex: \"1\"}}>\r\n                        <span style={{\r\n                            fontSize: \"13px\", position:\"absolute\", zIndex:\"1\", right:\"0\", bottom:\"0\", transform:\"translate(-2.5em, -0.5em)\"\r\n                        }}>{ask.length}/100</span>\r\n\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </Grid>\r\n        <div style={style.questionbutton}>\r\n            <IconButton style={{transform:\"translate(0, 1em)\"}} onClick={()=>{props.goQueUp({transform : \"translate(0, 100%)\"}); props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{props.goDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseQuestioning fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n        </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questioning","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Comment, Tooltip } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Message = memo(props => {\r\n  const { message: { sender, sent_timestamp, text } } = props;\r\n\r\n\r\n  return (\r\n\r\n    <div style={{display:\"flex\", width: \"100%\"}}>\r\n        <div style={{color: \"rgba(255,255,255,0.5)\", display:\"flex\", width: \"9em\", margin: \"0 1em 15px 0\"}}>\r\n            {sender}\r\n        </div>\r\n        <div style={{position:\"relative\", width: \"100%\", maxWidth : \"37em\", display:\"flex\", wordBreak: \"break-all\" , textAlign: 'left' }}>\r\n         {text}\r\n        </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Empty, Card } from 'antd';\r\n\r\nconst EmptyScreen = props => {\r\n  return (\r\n    <Card className='empty-screen-container' style={props.containerStyle}>\r\n      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={props.description} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nEmptyScreen.propTypes = {\r\n  description: PropTypes.string,\r\n  containerStyle: PropTypes.object\r\n}\r\n\r\nexport default EmptyScreen;","import ReconnectingWebSocket from 'reconnecting-websocket';\r\nimport { WS_ENDPOINT } from '../environment';\r\nimport { ON_MESSAGES_VALUE_CHANGE, ON_MESSAGES_READING, ON_MESSAGES_READ, QUESTIONLIST_READ, QUESTIONLIST_SOCKET_READ } from './types';\r\nimport getQuestionlist from \"./QuestionListActions\";\r\n\r\n//export const onMessagesValueChange = data => ( console.log('data',data));\r\nexport const onMessagesValueChange = data => ({ type: ON_MESSAGES_VALUE_CHANGE, payload: data });\r\n\r\nexport const onRoomMessagesRead = (realHoleId, holeId) => dispatch => {\r\n  dispatch({ type: ON_MESSAGES_READING });\r\n\r\n  const socket = new ReconnectingWebSocket(`${WS_ENDPOINT()}/hole/${holeId}/`);\r\n  socket.debug = true;\r\n\r\n  // console.log(\"-----------socket--------------\",socket);\r\n\r\n  socket.onopen = event => console.log('WebSocket Connected'); \r\n  socket.onerror = event => console.log('error event : ', event);\r\n  socket.onmessage = event => \r\n  { \r\n      // console.log(\"EVENT :: \",event);\r\n      JSON.parse(event.data).type === \"QUESTION\" ?\r\n      dispatch(getQuestionlist(realHoleId))\r\n      : dispatch({ type: JSON.parse(event.data).type, payload: { messages: JSON.parse(event.data).data}})}\r\n\r\n  socket.onclose = event => console.log('WebSocket Disconnected');\r\n\r\n  return socket;\r\n}","export const WS_ENDPOINT = () => {\r\n  const location = window.location;\r\n\r\n  let protocol = 'ws://';\r\n\r\n  if (location.protocol === 'https:') {\r\n    protocol = 'wss://';\r\n  }\r\n\r\n  const endpoint = protocol + '143.248.226.7:8001/ws';\r\n\r\n  return endpoint;\r\n}","import React, {useEffect, useState, memo} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\";\r\n\r\nimport ParticipantsButton from '@material-ui/icons/Group';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport QuestionListButton from '@material-ui/icons/FormatListBulleted';\r\nimport QuestionButton from '@material-ui/icons/ContactSupport';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { SportsRugbySharp } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"#3B3B3B\",\r\n    boxShadow: \"none\",\r\n    width: \"100%\",\r\n    height: \"2.5em\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  root2: {\r\n    padding: '0 0 0 10px',\r\n    margin : \"0\",\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n    boxShadow: \"none\",\r\n    Width : \"6em\",\r\n    height: \"2.5em\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    // backgroundColor: \"#D95032\",\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n    backgroundColor: \"#3B3B3B\",\r\n    flex: 1,\r\n  },\r\n  divider: {\r\n    height: 35,\r\n    margin: 4,\r\n  },\r\n\r\n}));\r\n\r\nconst style = {\r\n    questioningBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        marginRight:\"5px\", \r\n        backgroundImage:\"url('/static/questionPlus.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n      },\r\n    questionListBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/questionList.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n    participantBtn : {\r\n        width: \"1.8em\",\r\n        height:\"1.8em\",\r\n        backgroundImage:\"url('/static/participant.png')\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n    },\r\n}\r\n\r\nconst CustomizedInputBase = memo((props) => {\r\n\r\n    const dispatch = useDispatch();\r\n   const classes = useStyles();\r\n\r\n  const pressEnter = (e, length) => {\r\n      if (e.key == 'Enter'){\r\n          if (length >= 1)\r\n          props.goMessageSend();\r\n      }\r\n  }\r\n  return (\r\n      <>\r\n    <Paper className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"내용 입력하기\"\r\n        value={props.message}\r\n        onChange={(e) =>\r\n          {\r\n            if(e.target.value.length > 100)\r\n              alert('100자 이내로 입력이 가능합니다')\r\n            props.goSetMessage(e.target.value.substring(0, 100))}\r\n          }\r\n        onKeyPress={(e) => {pressEnter(e, props.message.length)}}\r\n      />\r\n        <IconButton onClick={()=>{\r\n            if(props.message.length >= 1)\r\n                props.goMessageSend() \r\n        }} \r\n            aria-label=\"send\">\r\n        <SendIcon style={{color:\"white\"}}/>\r\n      </IconButton>\r\n    </Paper>\r\n    <Paper className={classes.root2}>\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      {props.isHost?\r\n        <IconButton\r\n        style={style.participantBtn}\r\n        aria-label=\"participants\" \r\n        onClick={()=>{dispatch(getEnteredSession(props.channelNum)); props.goUserUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}}>\r\n        </IconButton>\r\n      :\r\n      <IconButton \r\n      onClick={()=>{props.goQueUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton} aria-label=\"question\"\r\n      style={style.questioningBtn}\r\n      >\r\n        {/* <QuestionButton/> */}\r\n      </IconButton>\r\n      }\r\n      {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\r\n      <IconButton \r\n      style={style.questionListBtn}\r\n      onClick={()=>{console.log(\"press button\"); props.goListUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton2} aria-label=\"question_list\">\r\n        {/* <QuestionListButton/> */}\r\n      </IconButton>\r\n    </Paper>\r\n    </>\r\n  );\r\n})\r\n\r\nexport default CustomizedInputBase;","import React, { useRef, useState, useEffect, useCallback, memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, PageHeader, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\nimport MessageInput from './MessageInput';\r\nimport EmptyScreen from './EmptyScreen';\r\nimport Spinner from './Spinner';\r\nimport { onRoomMessagesRead } from '../../../actions/MessagesActions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport InsertField from \"../InsertField\"\r\nimport \"../../../styles/style.css\"\r\nimport { useCacheErrors } from 'antd/lib/form/util';\r\n// import List from '@material-ui/core/List';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst windowPadding = 325;\r\n\r\nconst style = {\r\n    InsertfieldWrapper: {\r\n        position: \"fixed\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        justifyContainer : \"center\",\r\n        height : \"4.5em\",\r\n        bottom:\"0%\",\r\n        width: \"90%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"43em\",\r\n        zIndex:\"8\",\r\n    },\r\n    Insertfield:{\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        left : \"0%\",\r\n        width: \"100%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"44em\",\r\n        zIndex:\"8\",\r\n    },\r\n    top : {\r\n        zIndex:\"2\",\r\n        position : \"absolute\",\r\n        top : \"15%\",\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\",\r\n      flexDirection: \"column\",\r\n      color:\"rgba(239, 89, 65, 0.6)\",\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Chat = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let currentUrl = window.location.href;\r\n    // console.log(\"Chat Url : \", currentUrl);\r\n    const params1 = currentUrl.split('?')\r\n    const params2 = params1[1].split('&')\r\n    const params3 = params2[1].split('=')\r\n    const roomId = params3[1]\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        let element = document.querySelector(\".chatting\");\r\n        if (element) {\r\n\r\n          element.scrollTop = element.scrollHeight ? element.scrollHeight : 0;\r\n        }\r\n        // console.log(\"Here\");\r\n    }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const { roomSocket } = props;\r\n\r\n  // const roomId = \"c9c9dd9bb\";\r\n\r\n  \r\n  const { messages: { messages, loading: loadingChat }, username,  onRoomMessagesRead } = props;\r\n  const { room, windowHeight, onBack} = props;\r\n  \r\n\r\n  const user = useSelector(state => state.user.data.detail);\r\n\r\n  useEffect(() => {\r\n    //   roomSocket && roomSocket.close();\r\n    //   setRoomSocket(onRoomMessagesRead(roomId)); //세션에 관한 정보 중에서 session.id를 여기 바로 넣으면 채팅방이 구분됨\r\n      // 채팅 올라오는 속도 조절은 타임아웃으로.. \r\n      setTimeout(scrollToBottom,500);  \r\n    }, [room]);\r\n    \r\n    const onMessageSend = () => {\r\n      if (roomSocket) {\r\n        roomSocket.send(JSON.stringify({ command: 'new_message', data: { text: message, sender: user.username, type:'ON_MESSAGES_READ' } }));\r\n        setMessage('');\r\n        setTimeout(scrollToBottom,300);\r\n      }\r\n    }\r\n\r\n    const handleInfiniteOnLoad = () => {\r\n        setLoading(true);\r\n        messages.length > 14 && setLoading(false) && setHasMore(false);\r\n    };\r\n    \r\n  const renderList = () => {\r\n    if (loadingChat) return  (\r\n        <>\r\n    <Grid style={style.top} container justify=\"center\">\r\n        <div  className={classes.root}>\r\n            <CircularProgress color=\"inherit\"/>\r\n            <p style={{color:\"black\", margin:\"5px 0 0 0\"}}>Loading Chat</p>\r\n        </div>\r\n    </Grid>\r\n        </>\r\n    )\r\n\r\n    if (!messages.length) return <EmptyScreen description='' containerStyle={{ borderWidth: 0 }} />;\r\n\r\n    return (\r\n        <>\r\n      <div className=\"chatting\">\r\n        {/* {console.log(\"----------message-----------\",message)} */}\r\n        <List\r\n          className=\"comment-list NanumGothic3\"\r\n          itemLayout=\"horizontal\"\r\n          dataSource={messages}\r\n          renderItem={message => <Message key={message.id.toString()} message={message} />}\r\n        >\r\n        </List>\r\n          {loading && hasMore && <div className=\"loading-container\"><Spin /></div>}\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nreturn (\r\n    <React.Fragment>\r\n      \r\n      <div style={{ height: windowHeight}}>\r\n        {renderList()}\r\n\r\n      </div >\r\n        <Grid container justify=\"center\">\r\n\r\n        <div style={style.InsertfieldWrapper}>\r\n            <div style={style.Insertfield}>\r\n                    <InsertField\r\n                    holeId={props.holeId}\r\n                    channelNum={props.channelNum} \r\n                    isHost={props.isHost} \r\n                    message={message} \r\n                    goSetMessage={setMessage} \r\n                    goMessageSend={onMessageSend} \r\n                    goListUp = {props.goListUp} \r\n                    goDark={props.goDark} \r\n                    goQueUp={props.goQueUp}\r\n                    goUserUp={props.goUserUp}/>\r\n            </div>\r\n        </div>\r\n        </Grid>\r\n      {/* <MessageInput message={message} onChange={e => setMessage(e.target.value)} onSendClick={onMessageSend} /> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nChat.propTypes = {\r\n  room: PropTypes.object.isRequired,\r\n  messages: PropTypes.object.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  windowHeight: PropTypes.number,\r\n  onBack: PropTypes.func,\r\n  onRoomMessagesRead: PropTypes.func.isRequired\r\n}\r\n\r\n//상태를 연결시키는 함수는 mapStateToTrops로 만들어서 connect에 전달해준다.\r\n//Store 안의 state 값을 props로 연결해준다.\r\nconst mapStateToProps = state => {\r\n  const { messages } = state;\r\n  const { username } = state.user;\r\n  return { username, messages };\r\n}\r\n\r\n// chat 컴포넌트를 어플리케이션의 데이터 레이어와 묶는 역할을 한다.\r\n// 함수가 여러개였다면 mapDispatchProps로 연결해줘야했을듯\r\nexport default connect(mapStateToProps, { onRoomMessagesRead })(Chat);","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { PATCH_VOLUME } from \"../../../actions/types\";\r\n\r\nexport default function MediaPlayer(props) {\r\n\r\n  const { audioTrack, client, user } = props;\r\n\r\n  // const authority = useSelector((state) => state.Authorize);\r\n    const dispatch = useDispatch();\r\n    // const patchVolume = () => {\r\n    //     const audioVolume = audioTrack.getVolumeLevel();\r\n    //     if (audioVolume > 0.2)\r\n    //     dispatch({type : PATCH_VOLUME, userUid : client.uid, userVolume : audioTrack.getVolumeLevel()})\r\n    // }\r\n\r\n  useEffect(() => {\r\n\r\n    if (audioTrack && client.remoteUsers.length === 0) {\r\n      // console.log(\"여기는 호스트\");\r\n\r\n      audioTrack.setEnabled(true);\r\n      const volumeInter = setInterval(()=>{\r\n        // console.log(\"나의 오디오\", client.uid);\r\n        // console.log(\"나의 오디오\", audioTrack.getVolumeLevel());\r\n        dispatch({type : PATCH_VOLUME, userUid : client.uid, userVolume : audioTrack.getVolumeLevel()});\r\n    }, 400)\r\n    \r\n    return () => {\r\n        audioTrack.setEnabled(false);\r\n        clearInterval(volumeInter);\r\n        // audioTrack.stop();\r\n    };\r\n    }\r\n    \r\n    else if(audioTrack && client.remoteUsers.length != 0) {\r\n        // console.log(\"여기는 게스트\");\r\n        \r\n        audioTrack.play();\r\n        const volumeInter = setInterval(()=>{\r\n            // console.log(\"상대방오디오\", user.uid);\r\n            // console.log(\"상대방오디오\", audioTrack.getVolumeLevel());\r\n            dispatch({type : PATCH_VOLUME, userUid : user.uid, userVolume : audioTrack.getVolumeLevel()})\r\n        }, 400)\r\n        \r\n        return () => {\r\n            audioTrack.stop();\r\n            clearInterval(volumeInter)\r\n        };\r\n    }\r\n}, [audioTrack]);\r\n  return (\r\n    <div className=\"video-player\">\r\n    </div>\r\n  );\r\n}\r\n","import { useLocation, withRouter } from \"react-router-dom\";\r\nimport React, { useCallback } from \"react\";\r\nimport MediaPlayer from \"./MediaPlayer\";\r\n\r\n\r\nconst PlayerWrapper = ({\r\n  client,\r\n  // rtmClient,\r\n  // host,\r\n  // joinState,\r\n  localAudioTrack,\r\n  remoteUsers,\r\n  // channelNum,\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"player-container\">\r\n        {/* <div> {client.uid} </div> */}\r\n        <div className=\"local-player-wrapper\">\r\n\r\n          <MediaPlayer\r\n            audioTrack={localAudioTrack}\r\n            client={client}\r\n          />\r\n        </div>\r\n        <div className=\"remotePlayers\">\r\n          {remoteUsers.map((user) => (\r\n            <div className=\"remote-player-wrapper\" key={user.uid}>\r\n\r\n              <MediaPlayer audioTrack={user.audioTrack} client={client} user={user}/>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayerWrapper)","import React, {useState, useEffect, useRef, useCallback, memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\"\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport {\r\n    QUESTIONLIST_DELETE,\r\n    ENTEREDSESSION_DELETE,\r\n    CLEAR_VOLUME,\r\n} from \"../../actions/types.js\";\r\n\r\n\r\n\r\nimport ParticipantList from \"./ParticipantList\";\r\nimport CurrentQuestion from \"./CurrentQuestion\";\r\n\r\nimport QuestionList from \"./QuestionList\";\r\nimport Questioning from \"./Questioning\";\r\nimport Chat from \"./chatting/Chat\";\r\nimport Avatar from \"../Avatar\";\r\nimport \"../../index.css\"\r\nimport PlayerWrapper from \"./agora/PlayerWrapper\";\r\nimport { onRoomMessagesRead } from '../../actions/MessagesActions';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseListButton from '@material-ui/icons/ExpandMore';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport \"../../styles/style.css\"\r\n\r\n\r\n//^ =============================================================\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\nimport useAgora from \"./agora/useAgora\";\r\n//^ =============================================================\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        marginRight: theme.spacing(3),\r\n        width: 30,\r\n        height: 30,\r\n      top: 13,\r\n      borderRadius: \"20px\",\r\n      border: `3px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n  }))(Badge);\r\n\r\nconst style = {\r\n    livewrapper: {\r\n        display: \"inline-block\",\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n        height: \"100%\",\r\n        // backgroundColor: \"rgb(255, 239, 196)\"\r\n    },\r\n\r\n    livesession: {\r\n        position:\"absolute\",\r\n        maxWidth: \"45em\",\r\n        minHeight: \"35em\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        backgroundColor: \"#252525\",\r\n    },\r\n\r\n    session_top: {\r\n        zIndex:\"4\",\r\n        position: \"relative\",\r\n        minHeight: \"3em\",\r\n        height: \"5%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    \r\n    session_mid: {\r\n        position: \"relative\",\r\n        height: \"55%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    session_bottom: {\r\n        position: \"relative\",\r\n        borderRadius: \"30px 30px 0px 0px\",\r\n        bottom: \"0%\",\r\n        height: \" 40%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#252525\",\r\n        zIndex:\"0\",\r\n        // backgroundColor: \"rgb(255, 248, 225)\"\r\n    },\r\n    table: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n\r\n    td1: {\r\n        width: \"60%\",\r\n        fontSize: \"1em\",\r\n        padding: \"10px 0 0 10px\",\r\n        color: \"rgba(255,255,255,0.8)\"\r\n    },\r\n\r\n    td2: {\r\n        width: \"9em\",\r\n        padding: \"0 0 0 10px\",\r\n    },\r\n    lavel : {\r\n        marginLeft: \"-12px\",\r\n        marginRight: \"-0.7em\",\r\n    },\r\n    font_size : {\r\n        fontSize : \"1rem\"\r\n    },\r\n    checkIcon : {\r\n        height: \"0.6em\"\r\n    },\r\n\r\n    tablecell: {\r\n        display: \"table-cell\",\r\n        verticalAlign: \"middle\",\r\n        height: \"100%\",\r\n    },\r\n    follow: {\r\n        marginRight: \"3px\",\r\n        float: \"right\",\r\n    },\r\n\r\n    question: {\r\n        width : \"90%\",\r\n    },\r\n\r\n    listbutton : {\r\n        position: \"absolute\",\r\n        top: \"-0.5em\",\r\n    },\r\n\r\n    alert : {\r\n        boxShadow: \"2px 2px 2px 2px #D95032\",    // 섀도우 색\r\n        border:\"2px solid #4CC0D0\",    // 테두리 색\r\n        backgroundColor:\"white\"      // 배경색\r\n    },\r\n\r\n    closeBtn : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"1em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        background:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n    },\r\n    linkBtnWrap : {\r\n        borderRadius:\"10px\",\r\n        position:\"absolute\",\r\n        top: \"1em\",\r\n        right: \"3.5em\",\r\n        width: \"2em\",\r\n        height: \"2em\",\r\n        backgroundColor:\"rgba(255, 255, 255, 0.2)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    linkBtn : {\r\n        marginLeft: \"1px\",\r\n        width: \"1.8em\",\r\n        height: \"1.8em\",\r\n        backgroundImage: \"url('/static/linkBtn.png')\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\"\r\n    }\r\n   \r\n}\r\n\r\n\r\n//^ =============================================================\r\nconst appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\nconst client = AgoraRTC.createClient({ codec: \"vp8\", mode: \"rtc\" });\r\nconst rtmClient = AgoraRTM.createInstance(appid);\r\n\r\n\r\n//^ =============================================================\r\n\r\nconst LiveSession = (props) => {\r\n    const history = useHistory();\r\n    // console.log(\"!!!!!!!!!!!!!!!!!\", props);\r\n    // console.log(\"history state: \", history.state)\r\n    // history.pushState(null, null, '');\r\n    // console.log(\"history state: \", history.state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const hostPostApi = async(hostUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              channel_num : props.channelNum,\r\n              host_uid : hostUid,\r\n          };\r\n        //   console.log(\"LiveSession Host Post :\", data);\r\n          const res = await axios.post(\r\n            \"https://143.248.226.7:8000/api/hole/\"+props.holeId+\"/live/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(res.data);\r\n    }\r\n    \r\n    const audiencePutApi = async(audienceUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              uid : audienceUid,\r\n          };\r\n        //   console.log(\"LiveSession Audience Post :\", data);\r\n          const res = await axios.put(\r\n            \"https://143.248.226.7:8000/api/hole/\"+props.holeId+\"/live/join/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(res.data);\r\n    }\r\n\r\n    const leavePatchApi = async() =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {};\r\n          const res = await axios.patch(\r\n            \"https://143.248.226.7:8000/api/hole/\"+props.holeId+\"/live/leave/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n        //   console.log(\"--------leavePatch-----\",res.data);\r\n        //   if (res.data.response === \"SUCCESS\"){\r\n        //   }\r\n    }\r\n\r\n\r\n    const [listup, setListUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [queUp, setQueUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [userUp, setUserUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [dark, setDark] = useState({display:\"none\"})\r\n\r\n    const [room, setRoom] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [questionAlert, setOuestionAlert] = useState(false);\r\n    const [copiedAlert, setCopiedAlert] = useState(false);\r\n    // const [refreshAlert, setRefreshAlert] = useState(false)\r\n\r\n    const [liveVoice,setLiveVoice] = useState(false);\r\n\r\n    const [roomSocket, setRoomSocket] = useState(null);\r\n\r\n\r\n\r\n    const openQuestionAlert = () => {\r\n        setOuestionAlert(true);\r\n      };\r\n    \r\n    const closeQuestionAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setOuestionAlert(false);\r\n    };\r\n\r\n    const openCopiedAlert = () => {\r\n        setCopiedAlert(true);\r\n      };\r\n    \r\n    const closeCopiedAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setCopiedAlert(false);\r\n    };\r\n    // const history = useHistory()\r\n    \r\n    const holeInfo = useSelector(state => state.enteredSession)\r\n    const hostImage = holeInfo.arrived ? \r\n            holeInfo.data.detail.livehole.host_profile_image_url\r\n            : \"/static/live_png\";\r\n\r\n    // partiNum = holeInfo.arrived ? \r\n    //      holeInfo.data.detail.participant.length + \"명\"\r\n    //     : \"로딩중\"\r\n\r\n    // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n    const handleClick = () => {\r\n        // console.log(\"호스트 나감2\", hostExit)\r\n        setOpen(true);\r\n    };\r\n    \r\n    // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n    const handleClose = (event, reason) => { \r\n        // console.log(\"host out\")\r\n        // history.replace('/main')\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        setTimeout(()=>window.location.replace('/main'), 300);\r\n    };\r\n    \r\n    //^ =============================================================\r\n    let rtmChannel;\r\n\r\n    const {\r\n        localAudioTrack,\r\n        leave,\r\n        join,\r\n        joinState,\r\n        remoteUsers,\r\n        authority,\r\n    } = useAgora(client);\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n        \r\n        const unblock = history.block('정말 떠나시겠습니까?');\r\n        // 소켓 관련 -------\r\n        \r\n        const refreshOut = () => {\r\n            // console.log(\"refresh out\")\r\n            // history.replace('/main')\r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            // roomSocket && roomSocket.close();\r\n            setTimeout(()=>window.location.replace('/main'), 300)\r\n        };\r\n        window.addEventListener(\"beforeunload\", refreshOut);\r\n        window.onpageshow =  function(event) { // BFCahe\r\n            if (event.persisted || (window.performance && window.performance.navigation.type === 2)) {\r\n                // console.log(\"onpageshow out \")\r\n                refreshOut();\r\n            }\r\n        }\r\n        \r\n        roomSocket && roomSocket.close();\r\n        setRoomSocket(dispatch(onRoomMessagesRead(props.holeId, props.channelNum)));\r\n    \r\n        // 소켓 관련 끝 ------\r\n        \r\n        dispatch({type: QUESTIONLIST_DELETE})\r\n        dispatch({type: ENTEREDSESSION_DELETE})\r\n        dispatch({type: CLEAR_VOLUME});\r\n        setLiveVoice(false)\r\n        \r\n        dispatch(getQuestionList(props.holeId))\r\n        setTimeout(()=>dispatch(getEnteredSession(props.channelNum)),4500);\r\n        \r\n        //! 소켓으로 바꾸는중\r\n        \r\n        \r\n        rtmChannel = rtmClient.createChannel(props.channelNum);\r\n        join(props.channelNum, null, rtmClient, rtmChannel, props.isHost);\r\n        rtmChannel.on('ChannelMessage', (message, memberId) => {\r\n            // console.log(`Message ${message}, from ${memberId}`);\r\n            \r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            // roomSocket && roomSocket.close();\r\n            //! 소켓으로 바꾸는중\r\n            handleClick();\r\n        });\r\n\r\n        if (props.isHost){\r\n            setTimeout(()=>{hostPostApi(client.uid)}, 4000);\r\n        }\r\n        else{\r\n            setTimeout(()=>{audiencePutApi(client.uid)}, 4000);\r\n        }\r\n             \r\n        return () => {\r\n            // console.log(\"normal out\")\r\n            unblock();\r\n\r\n            window.removeEventListener(\"beforeunload\", refreshOut);\r\n            if (props.isHost)\r\n            {\r\n                rtmChannel.sendMessage({ text: \"hostOut\" }).then(() => {\r\n                    // Your code for handling the event when the channel message is successfully sent.\r\n                    // console.log('host is leaving')\r\n                    }).catch(error => {\r\n                    // Your code for handling the event when the channel message fails to be sent.\r\n                    // console.log('host leaving error')\r\n                });\r\n\r\n            }\r\n            \r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            // roomSocket && roomSocket.close();\r\n            \r\n            // history.replace('/main');\r\n            setTimeout(()=>window.location.replace('/main'), 300);\r\n            \r\n        }\r\n        \r\n\r\n    }, [history])\r\n\r\n    // ^ =============================================================\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n        <div style={style.livewrapper}>\r\n            <div style={style.livesession}>\r\n                <div style={style.session_top}>\r\n                    <table style={style.table}>\r\n                        <tr>\r\n                            <td  colspan=\"2\" className=\"NanumGothic4\" style={style.td1} >{props.holeTitle}</td>\r\n                            <td  rowspan=\"2\">\r\n                                <div style={style.follow}>\r\n                                <div\r\n                                    style={style.closeBtn}\r\n                                    onClick={()=>history.push('/main')}\r\n                                    >\r\n                                        <span \r\n                                        className=\"NanumGothic2\"\r\n                                        style={{fontSize: \"0.6em\"}}>종료</span>\r\n                                </div>\r\n                                <div\r\n                                style={style.linkBtnWrap}\r\n                                >\r\n                                    <CopyToClipboard\r\n                                        onCopy={openCopiedAlert}\r\n                                        text={window.location.href}\r\n                                    >\r\n                                    <div style={style.linkBtn}/>\r\n                                    </CopyToClipboard>\r\n                                </div>\r\n                                \r\n                                </div>\r\n                                \r\n                            </td>      \r\n                        </tr>\r\n                        <tr>\r\n                            <td style={style.td2}>\r\n                                <img className=\"live_img\" src=\"/static/live.png\"/>\r\n                                <span style={{marginLeft:\"9px\", color:\"rgba(255, 255, 255, 0.6)\"}} className=\"NotoSans3\">{remoteUsers.length + 1}명</span>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                    </table>  \r\n                </div>\r\n                <div style={style.session_mid}>\r\n                    <div style={{position:\"relative\", height:\"40%\"}}>\r\n                        <div className=\"forLiveWrapper\" \r\n                        style={liveVoice?\r\n                        {transform:\"translate(-25%, 70%)\"}\r\n                        :\r\n                        null\r\n                        }>\r\n                                <div className=\"forLiveVoice\">\r\n                                    <tr>\r\n                                    <StyledBadge badgeContent={<MicIcon/>} color=\"error\">\r\n                                        <Avatar isHostAvatar={true} hostName={props.hostName} imageLink={props.imageLink}/>\r\n                                    </StyledBadge>\r\n                                    </tr>\r\n                                    <tr className=\"centered\">\r\n                                        <span style={{color: \"rgba(255,255,255,0.8)\"}}className=\"BMDOHYEON\">{props.hostName}</span>\r\n                                    </tr>\r\n                                </div>\r\n                        </div>\r\n        \r\n                     \r\n                    </div>\r\n                    <div style={{position:\"relative\", height:\"50%\"}}>\r\n                        {/* <Grid container justify=\"center\"> */}\r\n                            <div>\r\n                                 <CurrentQuestion \r\n                                 roomSocket={roomSocket}\r\n                                 setLiveVoice={setLiveVoice}\r\n                                 liveVoice={liveVoice}\r\n                                 holeId={props.holeId} \r\n                                 isHost={props.isHost}\r\n                                 client={client}\r\n                                 rtmClient={rtmClient}\r\n                                 host={authority}\r\n                                 localAudioTrack={localAudioTrack}\r\n                                 remoteUsers={remoteUsers}\r\n                                 channelNum={props.channelNum}\r\n                                 />\r\n                            </div>\r\n                        {/* </Grid>  */}\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.session_bottom}>\r\n                    <div className=\"chattingWrapper\"/>\r\n                    <Chat \r\n                    roomSocket={roomSocket}\r\n                    holeId={props.holeId} \r\n                    isHost={props.isHost} \r\n                    channelNum={props.channelNum} \r\n                    goQueUp={setQueUp} \r\n                    goListUp = {setListUp} \r\n                    goUserUp = {setUserUp} \r\n                    goDark={setDark} \r\n                    room={room} \r\n                    windowHeight=\"1000px\" \r\n                    onBack={()=>setRoom(null)}/>                   \r\n                </div>\r\n            \r\n           \r\n        </div>\r\n        {props.isHost?\r\n        <div style={userUp} className=\"hiddenlist\">\r\n            <ParticipantList holeId={props.holeId} channelNum={props.channelNum} goUserUp = {setUserUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setUserUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n        :   \r\n        <div style={queUp} className=\"hiddenQue\">\r\n            <Questioning roomSocket={roomSocket} openQuestionAlert={openQuestionAlert} holeId={props.holeId} goQueUp = {setQueUp} goDark={setDark}/>\r\n        </div>\r\n        }\r\n        <div style={listup} className=\"hiddenlist\">\r\n            <QuestionList holeId={props.channelNum} goListUp = {setListUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setListUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n\r\n        <div style={dark} className=\"layerfordark\"></div>\r\n\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n            <span className=\"BMJUA\">호스트 [{props.hostName}]가<br/>세션을 종료하였습니다</span>\r\n        </Alert>\r\n        </Snackbar>\r\n\r\n        <div className=\"host-player\">\r\n            <PlayerWrapper\r\n                client={client}\r\n                // rtmClient={rtmClient}\r\n                // host={authority}\r\n                localAudioTrack={localAudioTrack}\r\n                remoteUsers={remoteUsers}\r\n                // channelNum={props.channelNum}\r\n            />\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={questionAlert} autoHideDuration={1500} onClose={closeQuestionAlert}>\r\n            <Alert onClose={closeQuestionAlert} style={{ backgroundColor:\"white\", boxShadow: \"2px 2px 2px 2px #D95032\", border:\"2px solid #4CC0D0\"}} severity=\"success\">\r\n                <span className=\"BMJUA\">질문 등록 성공!</span>\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={copiedAlert} autoHideDuration={1500} onClose={closeCopiedAlert}>\r\n            <Alert onClose={closeCopiedAlert} style={{ backgroundColor:\"white\", boxShadow: \"2px 2px 2px 2px #D95032\", border:\"2px solid #4CC0D0\"}} severity=\"success\">\r\n                <span className=\"BMJUA\">링크 복사 완료</span>\r\n            </Alert>\r\n        </Snackbar>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default LiveSession","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport AgoraRTC, {\r\n  MicrophoneAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig,\r\n} from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\n\r\nimport { AirlineSeatReclineExtraOutlined } from \"@material-ui/icons\";\r\n\r\nexport default function useAgora(client) {\r\n  // console.log(\"useAgora\");\r\n  const appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\n\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(\"\");\r\n  const [joinState, setJoinState] = useState(false);\r\n  const [remoteUsers, setRemoteUsers] = useState([]);\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  async function createLocalTracks() {\r\n    const microphoneTrack = await AgoraRTC.createMicrophoneAudioTrack(\r\n      // MicrophoneAudioTrackInitConfig\r\n      { AEC: true, ANS: true }\r\n    );\r\n    setLocalAudioTrack(microphoneTrack);\r\n    return microphoneTrack;\r\n  }\r\n  \r\n  async function join(channel, token, rtmClient, rtmChannel, isHost) {\r\n    // console.log(\"join\");\r\n\r\n    if (!client) return;\r\n    \r\n    const microphoneTrack = await createLocalTracks();\r\n    await client.join(appid, channel, token);    \r\n    \r\n    // rtm 클라이언트 로그인\r\n    await rtmClient\r\n    .login({ token: null, uid: String(client.uid) })\r\n        .then(() => {\r\n          // console.log(\"AgoraRTM client login success !!\");\r\n        })\r\n        .catch((err) => {\r\n          // console.log(\"AgoraRTM client login failure !!\", err);\r\n        });\r\n        \r\n    // rtm 클라이언트 메시지 받기 모드\r\n    await rtmClient.on(\"ConnectionStateChanged\", (newState, reason) => {\r\n      // console.log(\r\n        // \"on connection state changed to \" + newState + \" reason: \" + reason\r\n        // );\r\n      });\r\n    \r\n    //rtm 메시지채널 join\r\n    await rtmChannel.join();\r\n\r\n      // event listener for receiving a peer-to-peer message.\r\n    await rtmClient.on(\"MessageFromPeer\", (msg, peerId) => {\r\n        // text: text of the received message; peerId: User ID of the sender.\r\n        // console.log(\r\n          // \"AgoraRTM Peer Msg: from user \" + peerId + \" recieved: \\n\" + msg.text\r\n        // );\r\n\r\n        // check if mute or leave command\r\n        if (msg.text === \"host\") {\r\n          // console.log(\"make host\");\r\n\r\n          client.publish(microphoneTrack);\r\n          // localAudioTrack.stop();\r\n          // localAudioTrack.setEnabled(true);\r\n\r\n        } else if (msg.text === \"audience\") {\r\n          // console.log(\"make audience\");\r\n          \r\n          client.unpublish();\r\n          // localAudioTrack.play();\r\n\r\n        } else {\r\n          console.log(\"[Warning] unknown message:\", msg);\r\n        }\r\n        \r\n        \r\n      });\r\n\r\n    if (isHost) {\r\n      // console.log(\"client Role in JOIN \");\r\n      await dispatch({type: \"superHost\", payload: \"host\"});\r\n      await client.publish(microphoneTrack);\r\n\r\n    } else {\r\n      // console.log(\"audience Role in JOIN\");\r\n      await dispatch({type: \"audience\"});\r\n    }\r\n\r\n    // console.log(\"end useAgora\");\r\n    setJoinState(true);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n    // if (localVideoTrack) {\r\n    //   localVideoTrack.stop();\r\n    //   localVideoTrack.close();\r\n    // }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    //! leave하면 이상해지더라..\r\n    // await rtmChannel.leave();\r\n    await client.leave();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n    \r\n    const handleUserPublished = async (user, mediaType) => {\r\n      await client.subscribe(user, mediaType);\r\n\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserUnpublished = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserJoined = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserLeft = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    client.on(\"user-published\", handleUserPublished);\r\n    client.on(\"user-unpublished\", handleUserUnpublished);\r\n    client.on(\"user-joined\", handleUserJoined);\r\n    client.on(\"user-left\", handleUserLeft);\r\n\r\n    return () => {\r\n      client.off(\"user-published\", handleUserPublished);\r\n      client.off(\"user-unpublished\", handleUserUnpublished);\r\n      client.off(\"user-joined\", handleUserJoined);\r\n      client.off(\"user-left\", handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    joinState,\r\n    leave,\r\n    join,\r\n    remoteUsers,\r\n    authority,\r\n  };\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useHistory, withRouter} from \"react-router-dom\"\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width : \"94%\",\r\n    maxWidth: \"23em\",\r\n    height: \"11em\"\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    paddingTop: 0,\r\n},\r\ncover: {\r\n    width: \"20px\",\r\n    borderLeft: \"solid rgba(0, 0, 0, 0.3) 1px\"\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  top : {\r\n      position : \"fixed\",\r\n      top: \"30%\"\r\n  }\r\n}));\r\n\r\nconst style = {\r\n  loginCard : {\r\n      top : \"20%\",\r\n      // backgroundColor: \"skyblue\",\r\n      border: \"1px solid black\",\r\n      borderRadius: \"15px\",\r\n      boxShadow: \"1px 1px 2px 2px black\",\r\n      paddingTop: \"1em\",\r\n      paddingBottom: \"1em\",\r\n      maxWidth : \"23em\",\r\n      width : \"16em\",\r\n      height : \"10.5em\",\r\n      position : \"fixed\",\r\n  },\r\n  loginBtnWrapper : {\r\n      position: \"absolute\",\r\n      top : \"88%\",\r\n      backgroundColor: \"black\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  mikeBtn : {\r\n    height: '2.5em',\r\n    width: '4em',\r\n    backgroundColor: \"black\",\r\n    boxShadow: \"1px 1px 1px 1px black\",\r\n    borderColor: \"white\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n  },\r\n  loginBtn : {\r\n      height: '2.5em',\r\n      width: '4em',\r\n      backgroundColor: \"#EF5941\",\r\n      boxShadow: \"1px 1px 1px 1px black\",\r\n      borderColor: \"#EF5941\",\r\n      borderRadius: \"15px\",\r\n      color: \"white\",\r\n  },\r\n  liveBtn : {\r\n    height: '2.5em',\r\n    width: '7em',\r\n    backgroundColor: \"#EF5941\",\r\n    boxShadow: \"1px 1px 2px 2px black\",\r\n    borderColor: \"#EF5941\",\r\n    borderRadius: \"15px\",\r\n    color: \"white\",\r\n},\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst JoinCard = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [mike, setMike] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getMike = () => {\r\n      navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(function(stream) {\r\n        // console.log('You let me use your mic!')\r\n        setMike(1);\r\n      })\r\n      .catch(function(err) {\r\n        handleOpen();\r\n      });\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway'){\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    \r\n<Grid className={classes.top} container justify=\"center\">\r\n    <Card style={style.loginCard}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            {props.hostName}\r\n          </Typography>\r\n          {props.isHost ?  \r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A를 시작합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>    \r\n            :\r\n          <p className=\"NanumGothic3\">\r\n            [{props.hostName}]님의<br/>Live Q&A에 입장합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p>\r\n            <button style={style.mikeBtn} onClick={getMike}>허용</button></>}\r\n          </p>\r\n            }\r\n        <div>\r\n          {/* {console.log(props.isHost)} */}\r\n            {props.isHost ?\r\n                mike?\r\n                    <button \r\n                    onClick={()=>{\r\n                        history.push({\r\n                            pathname : \"/session/live\",\r\n                            search: \"?holeId=\" + props.holeId + \"&channelNum=\" + props.channelNum,\r\n                            state : {\r\n                                joinPass : true,\r\n                                isHost : true,\r\n                                hostName : props.hostName,\r\n                                hostImage: props.hostImage,\r\n                            }\r\n                        })\r\n                    }}\r\n                    // style={{margin:\"0 0 1em 2em\"}}\r\n                    style={style.liveBtn}\r\n                    >라이브열기</button>\r\n                :\r\n                <></>\r\n            :   \r\n                mike?\r\n                <button \r\n                style={style.loginBtn}\r\n                onClick={()=>props.setJoin(1)} aria-label=\"play/pause\">\r\n                    입장\r\n                </button>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n\r\n</Grid>\r\n  <Snackbar style={{top: \"40%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert style={{width: \"90%\"}} onClose={handleClose} severity=\"warning\">\r\n        [마이크 권한]이 차단되었습니다<br/><br/>\r\n        브라우저 상단에서<br/>\r\n        [마이크 권한]을 허용해주세요!\r\n      </Alert>\r\n  </Snackbar>\r\n</>\r\n  );\r\n}\r\n\r\nexport default withRouter(JoinCard)","import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport LiveSession from \"../components/liveSession/LiveSession\"\r\nimport JoinCard from \"../components/JoinCard\"\r\nimport getEnteredSession from \"../actions/EnteredSessionActions\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../index.css\"\r\nimport { sessionDummy } from \"../dummydatas/sessionDummy\"\r\n\r\n\r\nconst LiveSessionContainer = (props) => {\r\n\r\n    // console.log(\"LiveSessionContainer Props\", props.joinPass);\r\n\r\n    const [join, setJoin] = useState(props.joinPass); // ?���? ?��?��코딩\r\n\r\n    // console.log(join);\r\n\r\n    // if (1) //props.isHost\r\n    //     return <LiveSession hostName={hostName} imageLink={imageLink} channelNum={channelNum} isHost={1}/>\r\n    if (!join){\r\n        // console.log(\"!join\", join)\r\n        return <JoinCard holeId={props.holeId} channelNum={props.channelNum} hostName={props.hostName} hostImage={props.hostImage} setJoin={setJoin} isHost={props.isHost}/>\r\n    }else\r\n    {\r\n        // console.log(\"join\",join)\r\n        return <LiveSession holeTitle={props.holeTitle} holeId={props.holeId} hostName={props.hostName} imageLink={props.hostImage} channelNum={props.channelNum} isHost={props.isHost}/>\r\n    }\r\n}\r\n\r\nexport default LiveSessionContainer","import React from \"react\";\r\nimport {useSelector} from \"react-redux\"\r\nimport JoinCard from \"./JoinCard\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\n\r\nconst ReserveToLive = (props) => {\r\n    // console.log(\"Enter : ReserveToLive\")\r\n\r\n    const holeId = props.holeId\r\n    const sessions = useSelector(state => state.session.data)\r\n    let channelNumAry = []\r\n\r\n    sessions.map((session) => {\r\n        channelNumAry = [...channelNumAry, session.livehole_id];\r\n    })\r\n\r\n    let channelNum;\r\n\r\n    while (true)\r\n    {\r\n        channelNum = Math.floor(Math.random() * 10001)\r\n        if (channelNumAry.indexOf(channelNum) == -1)\r\n            break\r\n    }\r\n\r\n    // console.log(\"MakeChannelNum\", channelNum);\r\n    // console.log(\"ReserveToLive Props\", props);\r\n\r\n    return <LiveSessionContainer hostName={props.hostName} hostImage={props.hostImage} holeId={holeId} channelNum={channelNum} isHost={true}/>\r\n}\r\n\r\nexport default ReserveToLive","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\nimport ReserveToLive from \"../components/ReserveToLive\"\r\nimport axios from \"axios\"\r\n\r\nconst LIVE = \"live\"\r\nconst RESERVE = \"reserve\" \r\n\r\nconst SessionMatchContainer = (props) => {\r\n    const history = useHistory()\r\n    const [match, setMatch] = useState()\r\n\r\n    // console.log(props);\r\n    const sessionKind = props.routerInfo.match.params.state;\r\n    let urlSearchParams = new URLSearchParams(props.routerInfo.location.search.slice(1));\r\n    // console.log(props);\r\n    // console.log(sessionKind);\r\n\r\n    const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n    const tmp =  useSelector(state => state.user.data)\r\n    const currUser = tmp.detail? tmp.detail.username : \"\";\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://143.248.226.7:8000/api/hole/read/\"+holeId).then(\r\n            (res) => {\r\n                if (res.data.response === \"SUCCESS\")\r\n                    setMatch(res.data.detail);\r\n            }\r\n        )\r\n    },[holeId])\r\n    \r\n    switch (sessionKind) {\r\n        case LIVE:\r\n            const channelNum = urlSearchParams.get(\"channelNum\");\r\n            // console.log(\"----Match----\", match)\r\n            if (match) \r\n            {\r\n                if (match.status === \"DONE\")\r\n                    return (\r\n                    <>\r\n                        <div style={{\r\n                            position:\"fixed\",\r\n                            display:\"flex\", \r\n                            width:\"100%\", \r\n                            height:\"100%\",\r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                        }}>\r\n                            <div>\r\n                                <div style={{\r\n                                    position:\"relative\",\r\n                                    zIndex:\"1\",\r\n                                    width:\"15em\",\r\n                                    height:\"15em\",\r\n                                    backgroundImage:\"url('/static/wallcat.png')\",\r\n                                    backgroundSize:\"contain\",\r\n                                    backgroundRepeat:\"no-repeat\",\r\n                                }}></div>\r\n                                <div style={{\r\n                                    zIndex:\"0\",\r\n                                    transform:\"translate(0, -9em) rotate(7deg)\",\r\n                                    display:\"flex\", \r\n                                    justifyContent:\"center\",\r\n                                    alignItems:\"center\",\r\n                                    backgroundColor:\"white\",\r\n                                    width: \"15em\",\r\n                                    height:\"4em\",\r\n                                    border:\"2px solid grey\"\r\n                                }}\r\n                                    >\r\n                                    <p style={{fontSize:\"1em\"}} className=\"CookieRun\">\r\n                                        이미 라이브가 종료된 방입니다.\r\n                                    </p>\r\n\r\n                                </div>\r\n                        \r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n\r\n                        </div>\r\n                        <div  style={{\r\n                            position:\"fixed\",\r\n                            display:\"flex\", \r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                            height:\"100%\",\r\n                            width:\"100%\",\r\n                            transform:\"translate(0, 3em)\"\r\n                            }}>\r\n                            <span\r\n                            style={{cursor:\"pointer\", borderBottom:\"1px solid black\"}} \r\n                            className=\"Gmarket2\"\r\n                            onClick={()=>{\r\n                                history.push(\"/main\")\r\n                            }}\r\n                            >메인으로 가기</span>\r\n                        </div>\r\n                    </>)\r\n\r\n                const isHost = (currUser === match.host_username);\r\n                return <LiveSessionContainer holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.routerInfo.location.state?.joinPass} isHost={isHost}/>\r\n            }\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n\r\n        case RESERVE:\r\n            if (match)\r\n                return <ReserveToLive holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId}/>\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n            \r\n        default:\r\n            return (\r\n                <p>SessionMatchContainer ERROR</p>     \r\n            )\r\n        }\r\n    // switch (sessionKind) {\r\n    //     case LIVE:\r\n    //         const holeId = urlSearchParams.get(\"holeId\");\r\n    //         const channelNum = urlSearchParams.get(\"channelNum\");\r\n    //         axios.get(\"https://143.248.226.7:8000/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     const isHost = (currUser === res.data.detail.host_username);\r\n    //                     return <LiveSessionContainer hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.location.state?.joinPass} isHost={isHost}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     case RESERVE: // 占쏙옙占쏙옙 호占쏙옙트占쏙옙 占쏙옙占식곤옙占쏙옙\r\n    //         const holeId_reserve = urlSearchParams.get(\"holeId\");\r\n    //         console.log(holeId_reserve)\r\n    //         axios.get(\"https://143.248.226.7:8000/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     return <ReserveToLive hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId_reserve}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     default:\r\n    //         return (\r\n    //             <p>SessionMatchContainer ERROR</p>     \r\n    //         )\r\n    //     }\r\n}\r\n\r\nexport default SessionMatchContainer","import React, { useEffect } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {getUserInfo} from '../actions/UserActions';\r\n\r\nexport default (SpecialComponent, option, adminRoute=null) => {\r\n\r\n  /* \r\n     ��)  option: null -> ������ ������ ������ ������ (home)\r\n                 true -> �α����� ������ ������ ������ ������\r\n                 false -> �α����� ������ ������ �Ұ����� ������\r\n                 \r\n        false�� �������� �α����� ������ ������ �� �ְ� ¥�� �ȵ�����, Ȥ�ó� �������� ���� �Ʒ� �ڵ� ��� �α��������� ���Եȴ�.\r\n        ���� ���� �������� �������ҵ�??\r\n  */\r\n  const AuthenticateCheck = (props) => {\r\n\r\n    const isLoggedIn = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n      if (!isLoggedIn && option) {\r\n        props.history.push({\r\n            pathname : \"/login\",\r\n            before : props.location.pathname + props.location.search  \r\n        });\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <SpecialComponent routerInfo={props}/>\r\n    )\r\n\r\n  };\r\n  return AuthenticateCheck;\r\n};","import { NativeSelect } from '@material-ui/core';\r\nimport React, {useEffect, useState, } from 'react';\r\nimport CounterContainer from './containers/CounterContainer';\r\nimport NavContainer from './containers/NavContainer'\r\nimport SessionCardContainer from './containers/SessionCardContainer';\r\nimport MypageContainer from './containers/MypageContainer';\r\nimport SessionCreateContainer from './containers/SessionCreateContainer';\r\nimport ProfileDetail from './components/mypage/ProfileDetail';\r\nimport MypageEdit from './components/mypage/MypageEdit';\r\nimport PreQuestions from './components/sessionCard/PreQuestions';\r\n// import MainPage from \"./components/MainPage\" \r\n// import 'fontsource-roboto'\r\n\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport SessionMatchContainer from './containers/SessionMatchContainer';\r\n\r\nimport {LoginPage} from './components/onBoard'\r\n\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\n// import Chat from \"./components/liveSession/chatting/Chat\"\r\n\r\nimport { getSessionInfo, getUserSessionInfo } from './actions/SessionActions'\r\nimport { getUserInfo } from './actions/UserActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst App = () => {\r\n    \r\n    useEffect(() => {\r\n        if(document.body.getAttribute('__donot_urlopenlink') || !/mobile/i.test(navigator.userAgent) || !/inapp|KAKAOTALK|Line\\/|FB_IAB\\/FB4A|FBAN\\/FBIOS|Instagram|DaumDevice\\/mobile|SamsungBrowser\\/[^1]/i.test(navigator.userAgent)) return;\r\n        else {\r\n            const script = document.createElement(\"script\");\r\n\r\n            if(/(iPad|iPhone|iPod)/g.test(navigator.userAgent)) {                \r\n                // script.text = \"location.href='ftp://13.125.22.142/pub/bridge.html'\"\r\n                script.src = \"https://urlopen.link/direct.js\";\r\n                script.async = true;\r\n                document.body.appendChild(script);\r\n                \r\n            } else {\r\n                script.text = \"location.href='intent://143.248.226.7:8000#Intent;scheme=https;package=com.android.chrome;end'\";\r\n                document.body.appendChild(script);\r\n            }\r\n    \r\n            return () => {\r\n                document.body.removeChild(script);\r\n            }\r\n        }\r\n    })\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token')\r\n    if(token){\r\n        dispatch(getUserInfo(token));\r\n        // dispatch(getUserSessionInfo(token));\r\n    }\r\n    \r\n    dispatch(getSessionInfo());\r\n    \r\n    // dispatch(getAllUsersInfo());\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* <Route exact path=\"/hole/c9c9dd9bb\" component={Chat}/> */}\r\n        \r\n        <Route exact path=\"/main\" component={Auth(SessionCardContainer, true)}/>\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={LoginPage}/>\r\n            <Route exact path=\"/\" component={LoginPage}/>\r\n            <Route exact path=\"/session/:state\" component={Auth(SessionMatchContainer, true)}/>\r\n            {/* <Route exact path=\"/session/:state\" render={(matchProps) => <SessionMatchContainer {...matchProps}/>}/>  */}\r\n            <Route exact path=\"/createSession\" component={Auth(SessionCreateContainer, true)}/>\r\n            <Route exact path=\"/mypage/:username\" component={Auth(ProfileDetail, true)}/>\r\n            <Route exact path=\"/mypage/:username/edit\" component={Auth(MypageEdit, true)}/>\r\n            {/* <Route path=\"/\" component={NavContainer}/> */}\r\n        </Switch>\r\n        <Route exact path=\"/preQuestions/:pk\" component={Auth(PreQuestions, true)}/>    \r\n        <Route exact path=\"/mypage\" component={Auth(MypageContainer, true)}/>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default App\r\n","\r\nimport {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    arrived : false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case USER_GET_SUCCESS:\r\n            const userInfo = action.payload.data;\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                arrived: true,\r\n                data: userInfo\r\n            };\r\n        case USER_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","\r\nimport {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport const session = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SESSION_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case SESSION_GET_SUCCESS:\r\n            const sessionInfo = action.payload.data; \r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: sessionInfo\r\n            };\r\n        case SESSION_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default session;","import {\r\n  MY_SESSION_GET_PENDING,\r\n  MY_SESSION_GET_SUCCESS,\r\n  MY_SESSION_GET_FAILURE,\r\n  MY_SETLIVE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  pending: false,\r\n  error: false,\r\n  data: [],\r\n};\r\n\r\nconst mySession = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MY_SESSION_GET_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n        error: false,\r\n      };\r\n    case MY_SESSION_GET_SUCCESS:\r\n      const sessionInfo = action.payload.data;\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: sessionInfo,\r\n      };\r\n    case MY_SESSION_GET_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: true,\r\n      };\r\n    // case MY_SETLIVE:\r\n    //   return {\r\n    //     ...state[state.findIndex((e) => e.holeId === action.holeId)],\r\n    //     isLive: action.livestate,\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mySession;\r\n","import {\r\n    ON_MESSAGES_VALUE_CHANGE,\r\n    ON_MESSAGES_READING,\r\n    ON_MESSAGES_INIT,\r\n    ON_MESSAGES_READ\r\n  } from '../actions/types';\r\n  const INITIAL_STATE = {\r\n    messages: [],\r\n    loading: false,\r\n    error: '',\r\n  };\r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ON_MESSAGES_VALUE_CHANGE:\r\n        return { ...state, ...action.payload };\r\n      case ON_MESSAGES_READING:\r\n        return { ...state, loading: true, error: '' };\r\n      case ON_MESSAGES_INIT:\r\n        return { ...state, ...action.payload, loading: false, error: '' };\r\n      case ON_MESSAGES_READ:\r\n        let tmp = [...state.messages, ...action.payload.messages];\r\n        if (tmp.length >= 21){\r\n          tmp.shift()\r\n        }\r\n        return { ...state, messages: tmp, loading: false, error: '' };\r\n      default:\r\n        return state;\r\n    }\r\n  };","const initialState = \"\";\r\n\r\nconst authorize = (state = initialState, action) => {\r\n\r\n  switch(action.type){\r\n    case \"superHost\":\r\n      // console.log(\"make super HOST\", action.payload);\r\n      state = action.payload;\r\n      return state;\r\n\r\n    case \"audience\":\r\n      state = initialState;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport default authorize;","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR,\r\n    QUESTIONLIST_DELETE,\r\n    QUESTIONLIST_SOCKET_READ,\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//���༭\r\nconst questionlist = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case QUESTIONLIST_GET_PENDING:\r\n            // console.log(\"PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case QUESTIONLIST_GET_SUCCESS:\r\n            // console.log(\"SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data.detail\r\n            };\r\n        case QUESTIONLIST_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case QUESTIONLIST_DELETE:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        case QUESTIONLIST_SOCKET_READ:\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                data: action.payload, \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}  //! ?? ??? ?? ??\r\n\r\nexport default questionlist;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR,\r\n    ENTEREDSESSION_DELETE,\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//����??����\r\nconst enteredSession = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENTEREDSESSION_GET_PENDING:\r\n            // console.log(\"EnteredSession PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ENTEREDSESSION_GET_SUCCESS:\r\n            // console.log(\"EnteredSession SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case ENTEREDSESSION_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case ENTEREDSESSION_DELETE:\r\n            return {\r\n                ...state,\r\n                ...initialState,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default enteredSession;","import {\r\n    PATCH_VOLUME,\r\n    CLEAR_VOLUME\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {}\r\n\r\n  const volume = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PATCH_VOLUME:\r\n            const userUid = action.userUid;\r\n            const userVolume = action.userVolume;\r\n            let tmpState = {...state};\r\n            tmpState[userUid] = userVolume;\r\n            // console.log(\"volume Redux ::\", tmpState);\r\n            return tmpState;\r\n\r\n        case CLEAR_VOLUME:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n  };\r\n  \r\n  export default volume;\r\n  ","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport user from './user';\r\nimport session from './session';\r\nimport mySession from './mySession';\r\nimport messages from './messages';\r\nimport authorize from './authorize';\r\nimport questionlist from './questionlist';\r\nimport enteredSession from './enteredSession';\r\nimport volume from './volume';\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n    user,\r\n    session,\r\n    mySession,\r\n    messages,\r\n    authorize,\r\n    questionlist,\r\n    enteredSession,\r\n    volume,\r\n});\r\n\r\nexport default rootReducer;","import reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport axios from 'axios';\r\n\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n// axios.defaults.headers.common['X-CSRFToken'] = getCookie(\"csrftoken\");\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>        \r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}