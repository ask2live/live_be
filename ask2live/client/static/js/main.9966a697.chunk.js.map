{"version":3,"sources":["reportWebVitals.js","reducers/counter.js","components/Nav.js","containers/NavContainer.js","actions/types.js","actions/SessionActions.js","actions/QuestionListActions.js","actions/EnteredSessionActions.js","components/sessionCard/CurrentReserveSessionsCards.js","components/sessionCard/OtherLiveSessionsCards.js","components/sessionCard/MyLiveSessionsCards.js","components/sessionCard/HostConfirmedSessionsCards.js","components/SessionCreateButton.js","containers/SessionCardContainer.js","components/mypage/ProfileGate.js","components/mypage/Mypage.js","actions/SessionToReserveActions.js","components/mypage/SessionConfirm.js","components/mypage/MypageLiveSession.js","components/mypage/MypageConfirmedSession.js","components/mypage/MypageNav.js","actions/UserActions.js","containers/MypageContainer.js","containers/SessionCreateContainer.js","components/mypage/ProfileDetail.js","components/mypage/MypageEdit.js","components/mypage/MySessionEdit.js","components/sessionCard/PreQuestionNav.js","components/sessionCard/PreQuestions.js","components/liveSession/Participant.js","components/liveSession/ParticipantList.js","components/liveSession/StringQuestion.js","components/Avatar.js","components/liveSession/VoiceQuestion.js","components/liveSession/CurrentQuestion.js","components/liveSession/Question.js","components/liveSession/QuestionSwiper.js","components/liveSession/QuestionList.js","components/liveSession/Questioning.js","components/liveSession/InsertField.js","components/liveSession/chatting/Message.js","components/liveSession/chatting/EmptyScreen.js","components/liveSession/chatting/Chat.js","actions/MessagesActions.js","environment.js","components/liveSession/agora/MediaPlayer.js","components/liveSession/agora/PlayerWrapper.js","components/liveSession/LiveSession.js","components/liveSession/agora/useAgora.js","components/JoinCard.js","containers/LiveSessionContainer.js","components/ReserveToLive.js","containers/SessionMatchContainer.js","components/onBoard/LoginPage.js","actions/AllUsersActions.js","hoc/auth.js","App.js","reducers/user.js","reducers/session.js","reducers/mySession.js","reducers/messages.js","reducers/authorize.js","reducers/questionlist.js","reducers/enteredSession.js","reducers/allUsers.js","reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INCREMENT","DECREMENT","increment","type","decrement","counterReducer","state","action","MyPageIcon","Person","HomeIcon","Home","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","title","flexGrow","appBar","top","bottom","left","right","margin","backgroundColor","borderRadius","maxWidth","zIndex","NavOfGuest","classes","history","useHistory","AppBar","className","Grid","container","justify","alignItems","Toolbar","IconButton","color","aria-label","onClick","push","Logout","a","headers","localStorage","token","data","axios","post","NavOfUser","user","detail","useDispatch","style","borderSpacing","padding","clear","location","replace","fontSize","NavContainer","useSelector","ON_MESSAGES_VALUE_CHANGE","ON_MESSAGES_READING","ON_MESSAGES_READ","USER_GET_PENDING","USER_GET_SUCCESS","USER_GET_FAILURE","ALL_USERS_GET_PENDING","ALL_USERS_GET_SUCCESS","ALL_USERS_GET_FAILURE","QUESTIONLIST_GET_PENDING","QUESTIONLIST_GET_SUCCESS","QUESTIONLIST_GET_ERROR","SETLIVE","SESSION_GET_PENDING","SESSION_GET_SUCCESS","SESSION_GET_FAILURE","MY_SESSION_GET_PENDING","MY_SESSION_GET_SUCCESS","MY_SESSION_GET_FAILURE","ENTEREDSESSION_GET_PENDING","ENTEREDSESSION_GET_SUCCESS","ENTEREDSESSION_GET_ERROR","getSessionInfo","dispatch","console","log","get","response","payload","catch","error","getUserSessionInfo","config","Authorization","userSessionGetApi","getQuestionlist","holeId","getApi","getEnteredSession","channelNum","display","flexWrap","justifyContent","width","height","paper","noWrap","paddingBottom","circleStyle","CircularProgressWithLabel","session","finish_date","Date","now_month","getMonth","Button","id","Box","position","CircularProgress","thickness","size","variant","Typography","component","align","onClickWish","sessionId","patch","e","alert","onClickWishCancel","CurrentReserveSessionsCards","currentReserveSessions","useState","map","value","hole_reservations","Math","ceil","guests","length","target_demand","current","Chip","label","host_username","substring","host_work_field","clickable","Object","keys","indexOf","setTimeout","minWidth","borderBottom","boxShadow","bullet","transform","pos","marginBottom","cursor","imageWrapper","content","buttonWrapper","profileimage","OtherLiveSessionsCards","otherLiveSessions","now","toDate","reserve_date","Card","CardContent","gutterBottom","format","pathname","search","livehole_id","hostName","hostImage","host_profile_image","media","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","cardContent","cookieWrapper","backgroundPosition","backgroundSize","backgroundRepeat","overflow","useCookie","backgroundImage","MyLiveSessionsCard","React","CardHeader","Avatar","subheader","description","MyLiveSessionsCards","myLiveSessions","descript2","paddingLeft","HostConfirmedSessionsCards","hostConfirmedSessions","button","border","buttonIcon","buttonText","SessioinCreateButton","endIcon","hosts","mainOragne","descript","cookie1","cookie2","fontColor","fontWeight","SessionCardContainer","userDetail","setFlag","sessions","allUsersData","allUsers","mySession","status","candidate","hole_open_auth","Divider","paddingRight","profile","large","textAlign","ProfileGate","CardActionArea","username","src","my","myBottomCard","MyPage","item","xs","postSessionToReserve","res","font","font2","font3","SessionConfirm","goListUp","goDark","Paper","elevation","animation","float","layerfordark","minHeight","opacity","MypageLiveSession","listup","setListUp","dark","setDark","onDelete","delete","parseInt","host","CardActions","borderColor","MypageConfirmedSession","MypageNav","text","goBack","getUserInfo","userGetApi","palette","background","nested","listcenter","MyPageContainer","flag","render","setRender","wishSessions","useEffect","myDoneSessions","myWishSessions","myConfirmSessions","my_hole","reservation_status","wish_hole","open","setOpen","openDone","setOpenDone","openWish","setOpenWish","openConfirm","setOpenConfirm","Mypage","Alert","onClose","ListItem","ListItemIcon","ListItemText","primary","Collapse","timeout","unmountOnExit","List","disablePadding","marginTop","flexDirection","secondary","main","form","submit","SessionCreateContainer","titleValid","descriptionValid","reserveDate","reserveDateValid","inputs","setInputs","finishDate","counter","onIncrease","useCallback","onDecrease","onChange","name","handleClose","event","reason","Container","butterBottom","fontFamily","TextField","required","fullWidth","helperText","placeholder","autoFocus","InputLabelProps","shrink","justifyContents","inputProps","min","multiline","rows","Snackbar","autoHideDuration","severity","root2","work_company","work_field","bio","edit","ProfileDetail","routerInfo","textField","field","forForm","MypageEdit","email","profile_image","noValidate","autoComplete","defaultValue","MySessionEdit","edge","MyQuestionCards","myQuestions","questions","questionlist","userId","questionsList","question","questionAuthor","light","MyQuestionSend","ask","setAsk","postApi","isVoice","askValue","is_answered","is_voice","maxLength","insert","submitbtn","iconButton","QuestionCard","card","user_username","TabPanel","index","other","role","hidden","aria-labelledby","p","a11yProps","LinkTab","Tab","preventDefault","borderTop","borderLeft","borderRight","PreQuestionNav","setValue","Tabs","newValue","href","SessionDetail","hole","ListPreQuestions","PreQuestions","targetSession","split","participant","tmp","follow","Participant","nickName","workCompany","workField","participantlist","ParticipantList","participants","enteredSession","arrived","profileImage","profile_image_url","cloud","audience1","audience2","small","StringQuestion","dst","questionStr","userQuestion","questionStrAry","lastIndexOf","maxNum","slice","userNickName","isHost","onAnswered","currentQuestionId","questionUnit","circle","UserAvatar","alt","imageLink","VoiceQuestion","click","setClick","clickStyle","setClickStyle","sendP2PMessage","recipientUID","peerMsg","remoteUID","String","rtmClient","sendMessageToPeer","sendResult","hasPeerReceived","disabled","userUid","wait","CurrentQuestion","questionPatchApi","questionId","forQuestionidx","questionList","findIndex","questionResponse","questionIdx","currentQuestion","user_uid","client","localAudioTrack","remoteUsers","myPaper","SimplePaper","myQuestion","userName","nav","QuestionList","click1","setClick1","click2","setClick2","questionAry","myName","questionInfo","questionbutton","Questioning","voice","setVoice","queStyle","setQueStyle","myInfo","Checkbox","prevVoice","onKeyPress","key","openQuestionAlert","goQueUp","Width","input","flex","iconButton2","divider","CustomizedInputBase","InputBase","message","goSetMessage","goMessageSend","orientation","goUserUp","Message","memo","sender","sent_timestamp","wordBreak","EmptyScreen","containerStyle","image","Empty","PRESENTED_IMAGE_SIMPLE","InsertfieldWrapper","justifyContainer","Insertfield","connect","messages","onRoomMessagesRead","socket","ReconnectingWebSocket","protocol","WS_ENDPOINT","debug","timeoutInterval","onopen","onmessage","JSON","parse","onclose","currentUrl","roomId","scrollToBottom","element","document","querySelector","scrollTop","scrollHeight","loading","hasMore","setMessage","roomSocket","setRoomSocket","loadingChat","room","windowHeight","onBack","close","Fragment","itemLayout","dataSource","renderItem","toString","borderWidth","send","stringify","command","MediaPlayer","audioTrack","Authorize","setEnabled","stop","play","withRouter","joinState","uid","StyledBadge","withStyles","badge","Badge","livewrapper","livesession","session_top","session_mid","session_bottom","table","td1","td2","lavel","font_size","checkIcon","tablecell","verticalAlign","listbutton","AgoraRTC","createClient","codec","mode","AgoraRTM","createInstance","LiveSession","hostPostApi","hostUid","channel_num","host_uid","audiencePutApi","audienceUid","put","leavePatchApi","queUp","setQueUp","userUp","setUserUp","setRoom","questionAlert","setOuestionAlert","closeQuestionAlert","partiNum","holeInfo","livehole","host_profile_image_url","rtmChannel","appid","setLocalAudioTrack","setJoinState","setRemoteUsers","authority","createLocalTracks","createMicrophoneAudioTrack","MicrophoneAudioTrackInitConfig","microphoneTrack","channel","join","login","err","on","newState","msg","peerId","publish","unpublish","leave","handleUserPublished","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","off","useAgora","liveInter","setInterval","getQuestionList","createChannel","memberId","logout","clearInterval","unblock","block","sendMessage","colspan","holeTitle","rowspan","badgeContent","details","cover","controls","playIcon","useTheme","mike","setMike","getMike","navigator","mediaDevices","getUserMedia","audio","stream","joinPass","setJoin","LiveSessionContainer","ReserveToLive","channelNumAry","floor","random","SessionMatchContainer","match","setMatch","sessionKind","params","urlSearchParams","URLSearchParams","currUser","list","loginWrapper","loginCard","loginBtnWrapper","loginBtn","infoIcon","logo","LoginPage","loginId","setLoginId","loginPassword","setLoginPassword","openTwo","setOpenTwo","handleCloseTwo","Login","dataToSubmit","password","setItem","before","getAllUsersInfo","SpecialComponent","option","AuthenticateCheck","isLoggedIn","getItem","App","exact","path","Auth","MypageContainer","initialState","pending","userInfo","sessionInfo","isLive","livestate","INITIAL_STATE","authorize","allUserInfo","rootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9966a697.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// actions 액션 타입\r\nconst INCREMENT = 'counterReducer/INCREMENT';\r\nconst DECREMENT = 'counterReducer/DECREMENT';\r\n// 이 패턴에서 따를 규칙은, 액션 타입을 만들때 reducer/ACTION_TYPE 의 형식으로 만들어야 합니다.\r\n\r\n// action creator 액션 생성자\r\nexport const increment = () => ({ type : INCREMENT }); \r\nexport const decrement = () => ({ type : DECREMENT });\r\n\r\nconst initialState = 0;\r\n\r\n//리듀서\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return state + 1;\r\n        case DECREMENT:\r\n            if (state > 0){\r\n                return state - 1;\r\n            } else {\r\n                return state;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport ExitButton from '@material-ui/icons/PowerSettingsNew';\r\nimport LoginButton from '@material-ui/icons/MeetingRoom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Alert from '@material-ui/icons/Notifications';\r\nimport { Person, Home } from '@material-ui/icons';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Apps';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst [MyPageIcon, HomeIcon] = [Person, Home];\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"up\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: \"2%\",\r\n        left : \"0\",\r\n        right: \"0\",\r\n        margin : \"auto\",\r\n        backgroundColor: \"#eb4e27\",\r\n        borderRadius: \"15px\", \r\n        maxWidth: \"80em\",\r\n        zIndex: \"1\"\r\n      },\r\n  }));\r\n  \r\n\r\nconst NavOfGuest = (props) => { // 지금은 쓰지 않는다\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n                <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n                    <HomeIcon/>\r\n                </IconButton>\r\n                <IconButton  color=\"inherit\" aria-label=\"login\" onClick={()=>{\r\n                        history.push('/login');\r\n                    }}>\r\n                    <LoginButton/>\r\n                </IconButton>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n\r\nconst Logout = async() => {\r\n  const headers = {\r\n    'Authorization': 'Token ' + localStorage.token\r\n  }\r\n  const data = {}\r\n  const res = await axios.post('https://www.ask2live.me/api/user/logout', data, {headers:headers})\r\n  // window.location.replace('/')\r\n}\r\n\r\nconst NavOfUser = (props) => {\r\n    \r\n    const user = props.user.data.detail;\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <CssBaseline /> */}\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.appBar}>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Toolbar>\r\n            <table style={{borderSpacing : \"1.5em 0px\"}}>\r\n                <tr>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"menu\">\r\n                            <HomeIcon onClick={() => {\r\n                            history.push('/');}} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    <td>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"mypage\">\r\n                            <MyPageIcon onClick={ () => {\r\n                            history.push(\"/mypage\");\r\n                            } }/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                    <td >\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <IconButton style={{padding: \"0\", }} color=\"inherit\" aria-label=\"logout\">\r\n                        <ExitButton onClick={()=> {\r\n                          Logout()\r\n                          localStorage.clear()\r\n                          window.location.replace('/')\r\n                          }}/>\r\n                         </IconButton>\r\n                    </Grid>\r\n                    </td>\r\n                </tr>                \r\n                <tr>\r\n                    <td style={{fontSize : \"0.5em\"}}>Home</td>\r\n                    <td style={{fontSize : \"0.5em\"}}>Mypage</td>\r\n                    <td style={{fontSize : \"0.5em\"}}>Logout</td>\r\n                </tr>                \r\n            </table>\r\n            </Toolbar>\r\n            </Grid>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n\r\nexport {\r\n    NavOfGuest,\r\n    NavOfUser,\r\n}","import React, { Component, useCallback } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { combineReducers } from 'redux';\r\nimport { NavOfGuest, NavOfUser } from '../components/Nav';\r\n\r\n/* async, await 사용하면 데이터는 가져와지나\r\nError: Objects are not valid as a React child (found: [object Promise]). If you meant to render a collection of children, use an array instead.\r\n에러 발생\r\n*/\r\nconst NavContainer = () => {\r\n    const user = useSelector(state => state.user);\r\n\r\n    if (user.data.detail){\r\n        return <NavOfUser user={user}/>\r\n    }else{\r\n        return <NavOfGuest/>\r\n    }\r\n        \r\n};\r\n\r\nexport default NavContainer\r\n\r\n","// MESSAGES ACTIONS TYPES\r\nexport const ON_MESSAGES_VALUE_CHANGE = 'ON_MESSAGES_VALUE_CHANGE';\r\nexport const ON_MESSAGES_READING = 'ON_MESSAGES_READING';\r\nexport const ON_MESSAGES_READ = 'ON_MESSAGES_READ';\r\n\r\n// USER ACTIONS TYPES\r\nexport const USER_GET_PENDING = 'USER_GET_PENDING';\r\nexport const USER_GET_SUCCESS = 'USER_GET_SUCCESS';\r\nexport const USER_GET_FAILURE = 'USER_GET_FAILURE';\r\nexport const GIVEUSER = 'user/GIVEUSER';\r\n\r\n// ALL USERS ACTIONS TYPES\r\nexport const ALL_USERS_GET_PENDING = 'ALL_USERS_GET_PENDING';\r\nexport const ALL_USERS_GET_SUCCESS = 'ALL_USERS_GET_SUCCESS';\r\nexport const ALL_USERS_GET_FAILURE = 'ALL_USERS_GET_FAILURE';\r\n\r\n// Question List Types\r\nexport const QUESTIONLIST_GET_PENDING = 'questionlist/QUESTIONLIST_GET_PENDING';\r\nexport const QUESTIONLIST_GET_SUCCESS = 'questionlist/QUESTIONLIST_GET_SUCCESS';\r\nexport const QUESTIONLIST_GET_ERROR = 'questionlist/QUESTIONLIST_GET_ERROR';\r\n// SESSION ACTIONS TYPES\r\nexport const SETLIVE = 'session/setlive';\r\nexport const SESSION_GET_PENDING = 'SESSION_GET_PENDING';\r\nexport const SESSION_GET_SUCCESS = 'SESSION_GET_SUCCESS';\r\nexport const SESSION_GET_FAILURE = 'SESSION_GET_FAILURE';\r\n// MY_SESSION ACTIONS TYPES\r\nexport const MY_SETLIVE = 'mySession/setlive';\r\nexport const MY_SESSION_GET_PENDING = 'MY_SESSION_GET_PENDING';\r\nexport const MY_SESSION_GET_SUCCESS = 'MY_SESSION_GET_SUCCESS';\r\nexport const MY_SESSION_GET_FAILURE = 'MY_SESSION_GET_FAILURE';\r\n\r\n// Entered Session Types\r\nexport const ENTEREDSESSION_GET_PENDING = 'enteredSession/ENTEREDSESSION_GET_PENDING';\r\nexport const ENTEREDSESSION_GET_SUCCESS = 'enteredSession/ENTEREDSESSION_GET_SUCCESS';\r\nexport const ENTEREDSESSION_GET_ERROR = 'enteredSession/ENTEREDSESSION_GET_ERROR';\r\n","import {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n    MY_SESSION_GET_PENDING,\r\n    MY_SESSION_GET_SUCCESS,\r\n    MY_SESSION_GET_FAILURE,\r\n  } from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nexport const setLive = (given_holeId, given_livestate) => ({ type : SETLIVE, holeId: given_holeId,  livestate: given_livestate});  //\r\n\r\nfunction sessionGetApi(){\r\n    return axios.get('https://www.ask2live.me/api/hole')\r\n}\r\n\r\nfunction userSessionGetApi(token){\r\n    const config = {\r\n        headers: {Authorization: 'Token ' + token}\r\n    }\r\n    return axios.get('https://www.ask2live.me/api/user/read/hole',\r\n        config\r\n    )\r\n}\r\n\r\nexport const getSessionInfo = () => dispatch => {\r\n    console.log('-----getSessionInfo start-----')\r\n    dispatch({type: SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return sessionGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\nexport const getUserSessionInfo = token => dispatch => {\r\n    console.log('-----getUserSessionInfo start-----')\r\n    dispatch({type: MY_SESSION_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userSessionGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: MY_SESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: MY_SESSION_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(holeId){\r\n    return axios.get('https://www.ask2live.me/api/hole/' + holeId + '/questions');\r\n}\r\n\r\nconst getQuestionlist = holeId => dispatch => {\r\n    console.log('-----getQuestionlist-----')\r\n    dispatch({type: QUESTIONLIST_GET_PENDING}); // ��û�� ���۵Ǿ��ٴ� ���� �˸�\r\n\r\n    // ��û ����\r\n    return getApi(holeId).then(\r\n        (response) => {\r\n            console.log(response);\r\n            dispatch({ type: QUESTIONLIST_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: QUESTIONLIST_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getQuestionlist;\r\n","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction getApi(channelNum){\r\n    return axios.get('https://www.ask2live.me/api/hole/live/read/' + channelNum);\r\n}\r\n\r\nconst getEnteredSession = channelNum => dispatch => {\r\n    console.log('-----getEnteredSession-----')\r\n    dispatch({type: ENTEREDSESSION_GET_PENDING}); \r\n\r\n\r\n    return getApi(channelNum).then(\r\n        (response) => {\r\n            console.log(response);\r\n            dispatch({ type: ENTEREDSESSION_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ENTEREDSESSION_GET_ERROR, payload: error });\r\n    })\r\n}\r\n\r\nexport default getEnteredSession;","import React, {useEffect, useState} from \"react\";\r\nimport { getSessionInfo } from '../../actions/SessionActions'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport { getSingleSessionInfo } from \"../../actions/SessionActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"../../styles/style.css\"\r\nimport getQuestionlist from \"../../actions/QuestionListActions\";\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      justifyContent : \"center\",\r\n      maxWidth:\"40em\",\r\n      \r\n      \"& > *\": {\r\n        margin: \"0 1em 1em 1em\",\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(40)\r\n      }\r\n    },\r\n    paper: {\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      noWrap: \"break-word\",\r\n      maxWidth: \"20em\",\r\n\r\n    },\r\n    title: {\r\n      width: \"100%\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      paddingBottom: \"1em\"\r\n    }\r\n\r\n  }));\r\n\r\n  const circleStyle={\r\n    backgroundColor:\"#E2D8CF\",\r\n    width : \"155px\",\r\n    height : \"155px\",\r\n    borderRadius: \"77px\",\r\n  }\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  const history = useHistory();\r\n  console.log(\"CircularProgressWithLabel\", props)\r\n\r\n  console.log(\"====\",props.session.finish_date)\r\n  console.log(\"= = = =\", Date(props.session.finish_date))\r\n  const now = new Date()\r\n\r\n  let now_month = now.getMonth(); console.log(now_month)\r\n  // let finish_month = Date(props.session.finish_date).getMonth(); console.log(finish_month)\r\n\r\n  return (\r\n    <Button \r\n      style={circleStyle}\r\n      onClick={() => {\r\n        history.push('/preQuestions/'+props.session.id)\r\n        props.dispatch(getQuestionlist(props.session.id))\r\n\r\n      }}>\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <div style={{color:\"#D95032\", width:\"100%\"}}>\r\n      <CircularProgress thickness=\"2\" size=\"10rem\" variant='determinate' color='inherit'  {...props} /></div>\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n          <Typography\r\n            variant=\"body2\"\r\n            component=\"div\"\r\n            color=\"textSecondary\"\r\n            align='center'\r\n          >사전 질문을<br/>남겨주세요</Typography>\r\n      </Box>\r\n    </Box>\r\n    </Button>\r\n\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n    value: 10,\r\n};\r\n\r\n//렌더링이 먼저되고 응답을 받으면 버그가 생김\r\nconst onClickWish = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n}\r\n\r\nconst onClickWishCancel = (sessionId) => {\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wishcancel\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log('onClickWishCacel 응답 받음', response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  });;\r\n}\r\n// let buttonText='click'\r\nconst CurrentReserveSessionsCards = ({currentReserveSessions}) => {\r\n  console.log(\"컴포넌트 시작 Enter : CurrentReserveSessionsCards\")\r\n    const [flag, setFlag] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.user)\r\n\r\n    CircularProgressWithLabel.propTypes = {\r\n        value: PropTypes.number.isRequired,\r\n      };\r\n\r\n    \r\n    return (\r\n        <>\r\n        {console.log(\"렌더링 시작\")}\r\n        <div className={classes.root}  >\r\n            {currentReserveSessions.map((session) => (\r\n                <>\r\n                {console.log(\"ohMyGod\", session)}\r\n                <div className={classes.paper}>\r\n                <Grid  alignItems='center'>\r\n                        <CircularProgressWithLabel \r\n                          key={session.id} \r\n                          session = {session}\r\n                          value={(session.hole_reservations) ? \r\n                            Math.ceil(\r\n                              session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                              session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0} \r\n                          current={(session.hole_reservations) ? session.hole_reservations.guests.length  : 0 }\r\n                          dispatch = {dispatch}/>\r\n                          <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Chip size=\"small\"  label={`\r\n                            ${session.hole_reservations.target_demand == 0? \r\n                              100 : Math.ceil(session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100)}%달성`} />\r\n                          </Grid>\r\n                        <div className=\"call\">\r\n                            <Typography variant=\"h6\" component=\"div\" color='inherit'>\r\n                                {session.title}\r\n                            </Typography>\r\n                            <Typography variant='caption' component=\"div\" color=\"textSecondary\">\r\n                            {session.host_username?.length > 5? session.host_username.substring(0,5)+'...' : session.host_username}  \r\n                            {session.host_work_field?.length > 5? '|' + session.host_work_field.substring(0,5) + '...' : session.host_work_field}\r\n                            </Typography>\r\n                            <Typography variant='caption' component=\"div\" color=\"textSecondary\">\r\n                            찜 {session.hole_reservations.guests.length}/{session.hole_reservations.target_demand}\r\n                            </Typography> \r\n                        </div>\r\n                        <Grid container justify=\"center\">\r\n                          <Chip \r\n                          color=\"secondary\"\r\n                          variant=\"outlined\"\r\n                          clickable='true' \r\n                          onClick={() => {\r\n                            if(Object.keys(user.data).length === 0){\r\n                              alert('로그인이 필요합니다.')\r\n                            }else{\r\n                              session.hole_reservations.guests.indexOf(user.data.detail.id) === -1 ?\r\n                            <>\r\n                            {onClickWish(session.id)}\r\n                            {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                            </>\r\n                            : \r\n                            <>\r\n                            {onClickWishCancel(session.id)}\r\n                            {setTimeout((()=> dispatch(getSessionInfo())),200)}\r\n                            </>}\r\n                            }\r\n                            }\r\n                            \r\n                            label={Object.keys(user.data).length != 0 && session.hole_reservations.guests.indexOf(user.data.detail.id) != -1 ? \"취소하기\" : \"찜하기\"}></Chip>\r\n                          </Grid>\r\n                        <div>\r\n                          \r\n                        </div>\r\n                   \r\n                </Grid>\r\n                </div>\r\n                <br/>\r\n            </>\r\n            ))\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrentReserveSessionsCards;","import { useHistory } from \"react-router\"\r\nimport React, {useMemo} from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: \"17em\",\r\n    borderRadius: \"5px\",\r\n    borderBottom : \"0.4px solid #3B568C\",\r\n    boxShadow: \"0px 0px 2px 0px rgb(0, 0, 0, 0.3)\",\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 10px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    width: \"100%\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    paddingBottom: \"1em\",\r\n    \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cursor: {\r\n      cursor: \"pointer\"\r\n  },\r\n  padding : {\r\n    padding: \"2%\",\r\n  },\r\n\r\n});\r\n\r\nconst style = {\r\n    imageWrapper : {\r\n        display : \"inline-block\",\r\n        position : \"relative\",\r\n        width : \"5em\",\r\n        height : \"10em\",\r\n        backgroundColor : \"skyblue\",\r\n    },\r\n    content : {\r\n        display : \"inline-block\",\r\n        position : \"relative\",\r\n        width : \"10em\",\r\n        height : \"10em\",\r\n        backgroundColor : \"black\",\r\n    },\r\n    buttonWrapper : {\r\n        width : \"5em\",\r\n        height : \"5em\",\r\n        backgroundColor : \"pink\",\r\n    },\r\n    profileimage : {\r\n        width : \"5em\",\r\n        height : \"5em\",\r\n        backgroundColor : \"red\",\r\n    }\r\n}\r\n\r\nconst OtherLiveSessionsCards = ({otherLiveSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>?</span>;\r\n    const history = useHistory();\r\n  \r\n    let now = new Date();\r\n\r\n    const toDate = (reserve_date) => {\r\n        let date = new Date(reserve_date);\r\n        return date;\r\n    } \r\n\r\n\r\n    return (\r\n      <>\r\n        {otherLiveSessions.map((session) => \r\n        <>\r\n        <div className={classes.padding}>\r\n            <Card key={session.livehole_id} className={classes.root}>\r\n                <CardContent>\r\n                <div style={style.imageWrapper}>\r\n                <div style={style.profileimage}/>\r\n                <div style={style.buttonWrapper}/>\r\n                </div>\r\n                <div style={style.content}/>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        {\r\n                        <>\r\n                        <Typography variant=\"body2\">\r\n                        {console.log(toDate(session.reserve_date))}\r\n                        <Moment format=\"h시간 mm분 전 시작\">\r\n                        {toDate(session.reserve_date) - now}\r\n                        </Moment>\r\n                        </Typography>\r\n                        </>}\r\n                </Typography>\r\n                <div className={classes.cursor} onClick={()=>{\r\n                  if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                  }else{\r\n                    history.push({\r\n                      pathname: \"/session/live\",\r\n                      search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                      state : {\r\n                          hostName : session.host_username,\r\n                          hostImage : session.host_profile_image,\r\n                      }\r\n              })\r\n                  }\r\n                }}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {session.title}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {session.host_username}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        <p style={{margin:\"0\", color:\"#D95032\"}}> 라이브 중인 방입니다.</p>\r\n                    </Typography>\r\n                </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n        <br/>\r\n        </>\r\n        )}\r\n        <br/>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OtherLiveSessionsCards;\r\n","import { useHistory } from 'react-router';\r\nimport React from 'react';\r\nimport Moment from \"react-moment\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport \"../../styles/style.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 250,\r\n      maxWidth: 500,\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    },\r\n    media: {\r\n        cursor: \"pointer\",\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    cardContent: {\r\n        height: \"30px\"\r\n    },\r\n    cookieWrapper: {\r\n        display : \"block\",\r\n        width: \"6em\",\r\n        height: \"6em\",\r\n        marginLeft: \"1em\",\r\n        backgroundPosition : \"center center\",\r\n        backgroundSize: \"100%\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        overflow: \"hidden\",\r\n\r\n        \r\n    },\r\n    useCookie: {\r\n        position: \"absolute\",\r\n        margin: \"auto\",\r\n        backgroundImage: \"url('/static/cookieMould.png')\",\r\n        backgroundPosition : \"center center\",\r\n        backgroundSize: \"100%\",\r\n        width: \"6em\",\r\n        height : \"6em\",\r\n        overflow: \"hidden\",\r\n    },\r\n  }));\r\n  \r\n\r\nconst MyLiveSessionsCard = ({session}) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    {/* <div className=\"padding\" onClick={() => {history.push({\r\n        pathname: \"/session?state=mylive&i_r_d=\"+ session.roomId + \"&channelNum=\" + session.channelNum\" \r\n    })}}> */}\r\n    <div \r\n    className=\"padding\" \r\n    onClick={()=>{\r\n                history.push({\r\n                    pathname: \"/session/live\",\r\n                    search: \"?holeId=\" + session.id + \"&channelNum=\" + session.livehole_id,\r\n                    state : {\r\n                        hostName : session.host_username,\r\n                        hostImage : session.host_profile_image,\r\n                    }\r\n            })}}\r\n    style={{cursor:\"pointer\"}}>\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n            <br/>\r\n            <div\r\n            style={{backgroundImage: \"url('/static/live_IU2.png')\"}}\r\n            className={classes.cookieWrapper}\r\n\r\n            ><div className={classes.useCookie}></div> </div>\r\n            {/* <CardMedia\r\n            className={classes.media}\r\n            image={\"/static/live_IU.png\"}\r\n            title={session.title}\r\n            onClick={()=>{\r\n                history.push(\"/session/live?roomId=\" + session.livehole_id + \"&channelNum=\" + session.livehole_id)\r\n            }}\r\n            /> */}\r\n            <CardHeader\r\n            avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {session.host_username}\r\n                </Avatar>\r\n            }\r\n            action={\r\n                <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n                </IconButton>\r\n            }\r\n            title={session.title}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM.DD hh시 mm분\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <div className=\"centered\">\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {session.description}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent>\r\n            {/* <CardActions disableSpacing>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n            </IconButton>\r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon/>\r\n            </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography paragraph>\r\n                    라이브 중\r\n                </Typography>\r\n            </CardContent>\r\n            </Collapse> */}\r\n        </Card>\r\n        <br />\r\n    </div>\r\n    <br/>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MyLiveSessionsCards = ({myLiveSessions}) => {\r\n    return (\r\n        <>\r\n            {myLiveSessions.map((session) => (\r\n                <>\r\n                <MyLiveSessionsCard session={session} />\r\n                </>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyLiveSessionsCards;","import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\"\r\nimport React, {useMemo} from 'react';\r\nimport Moment from \"react-moment\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport \"../../App.css\"\r\nimport \"../../styles/style.css\"\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 270,\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n  },\r\n});\r\n\r\nconst style = {\r\n\r\n  descript2: {\r\n      fontSize: \"1.2em\",\r\n      color: \"#1C418C\",\r\n      paddingLeft: \"1.2em\"\r\n  },\r\n\r\n}\r\n\r\nconst HostConfirmedSessionsCards = ({hostConfirmedSessions}) => {\r\n    const user = useSelector(state => state.user)\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>?</span>;\r\n    const history = useHistory();\r\n    return (\r\n      <>\r\n        {hostConfirmedSessions.map((session) => {\r\n          console.log(session.reserve_date)\r\n          let reserve_date = new Date(session.reserve_date)\r\n          return (\r\n            <>\r\n        <div>\r\n            <Card key={session.livehole_id} className={classes.root}>\r\n                <CardContent>\r\n                <div className={classes.cursor} onClick={()=>{\r\n                  if(Object.keys(user.data).length === 0){\r\n                    alert('로그인이 필요합니다.')\r\n                  }else{\r\n                    alert('아직 라이브 Q&A가 시작하지 않았어요')\r\n                  }\r\n                }}>\r\n                    <p style={style.descript2} className=\"NanumGothic3\" variant=\"h\" component=\"h2\">\r\n                        {session.title}\r\n                    </p>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        시작 시간 : {\r\n                            <>\r\n                            <Typography variant=\"body2\">\r\n                            <Moment format=\"MM.DD hh시 mm분\">\r\n                            {session.reserve_date}\r\n                            </Moment>\r\n                            </Typography>\r\n                            </>}\r\n                    </Typography>\r\n                    <Typography className={classes.bullet} color=\"textSecondary\">\r\n                        {session.host_username} <br />\r\n                    </Typography>\r\n                </div>\r\n                </CardContent>\r\n            </Card>\r\n            \r\n        </div>\r\n        <br/>\r\n        </>\r\n          )\r\n        }\r\n        )}\r\n        <br/>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default HostConfirmedSessionsCards;","import { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../App.css\"\r\n\r\nconst style = {\r\n    button : {\r\n        position: 'relative',\r\n        width: '60%',\r\n        minWidth : \"19em\",\r\n        marginBottom: '20px',\r\n        backgroundColor: \"rgb(255,255,255)\",\r\n        border : \"3px solid #F24822\"\r\n    },\r\n    buttonIcon: {\r\n        fontSize: 30,\r\n        color: 'white',\r\n        backgroundColor: '#F24822',\r\n        borderRadius: '50%',\r\n    },\r\n    buttonText: {\r\n        align: 'left',\r\n        fontSize: '1em',\r\n        margin: '8px',\r\n    },\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst SessioinCreateButton = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    // <div className=\"LiveQnA\">\r\n    <>\r\n    <div className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <Button\r\n            style={style.button}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            endIcon={<AddIcon style={style.buttonIcon} />}\r\n            onClick={() => {\r\n              history.push(\"/createSession\");\r\n            }}\r\n          >\r\n            <div style={style.buttonText} align=\"left\" className=\"NanumGothic3\">\r\n              Live Q&A를 통해\r\n              <br></br>\r\n              경험을 함께 나누어보세요\r\n            </div>\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\n\r\nexport {SessioinCreateButton}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {MyLiveSessionsCards, OtherLiveSessionsCards, CurrentReserveSessionsCards, HostConfirmedSessionsCards} from '../components/sessionCard' \r\nimport {SessioinCreateButton} from '../components/SessionCreateButton';\r\n// material-ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../App.css\"\r\n\r\nlet myLiveSessions = []\r\nlet otherLiveSessions = []\r\nlet currentReserveSessions = []\r\nlet hosts = []\r\nlet hostConfirmedSessions = []\r\n\r\nconst style = {\r\n    title : {\r\n        color: \"#030916\",\r\n        fontSize: \"1.5em\",\r\n        paddingLeft : \"1em\"\r\n    },\r\n    mainOragne: {\r\n        position : \"absolute\",\r\n        backgroundColor: \"#eb4e27\",\r\n        height : \"15em\",\r\n        width: \"100%\",\r\n        zIndex : \"-1\",\r\n        overflow: \"hidden\",\r\n    },\r\n    descript: {\r\n        fontSize: \"1.2em\",\r\n        color: \"white\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    descript2: {\r\n        fontSize: \"1.2em\",\r\n        color: \"#1C418C\",\r\n        paddingLeft: \"1.2em\"\r\n    },\r\n    cookie1: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"3em\",\r\n        right : \"-2.5em\",\r\n    },\r\n    cookie2: {\r\n        backgroundImage: \"url('/static/cookie.png')\",\r\n        top : \"-1.5em\",\r\n        width: \"2em\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        left : \"60%\",\r\n    },\r\n    button : {\r\n        position: 'relative',\r\n        width: '80%',\r\n        marginBottom: '20px',\r\n    },\r\n    buttonIcon: {\r\n        fontSize: 30,\r\n        fontColor: 'black',\r\n        backgroundColor: '#C0C0C0',\r\n        borderRadius: '50%',\r\n        marginLeft: '150%',\r\n    },\r\n    buttonText: {\r\n        align: 'left',\r\n        fontSize: '80%',\r\n        margin: '8px',\r\n        marginLeft: '-20%',\r\n        fontWeight: 900,\r\n    },\r\n}\r\n\r\n    \r\nconst SessionCardContainer = (props) => {\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    const user = useSelector(state => state.user);\r\n    const sessions = useSelector(state => state.session.data);\r\n    const history = useHistory();\r\n    const allUsersData = useSelector(state => state.allUsers);\r\n    const mySession = useSelector(state => state.mySession.data);\r\n    // console.log('allUsers.data.data.detail', allUsersData.data.data.detail);\r\n    \r\n    if(user.error){\r\n        localStorage.clear()\r\n        window.location.replace('/')\r\n    }\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        let userDetail;\r\n        if(user.data.detail){\r\n            userDetail = user.data.detail\r\n        }else{\r\n            userDetail = {id:-1} // 반찬고 >_<\r\n        }\r\n        myLiveSessions = []\r\n        otherLiveSessions = []\r\n        currentReserveSessions = []\r\n        hostConfirmedSessions = []\r\n        hosts = []\r\n\r\n        sessions.map((session) => {\r\n            console.log(session)\r\n            if (session.status == \"DOING\" && session.hole_reservations && (session.hole_reservations).guests.indexOf(userDetail.id) != -1) {\r\n                myLiveSessions = [...myLiveSessions, session];\r\n                console.log(\"myLiveSEssion:\",myLiveSessions)\r\n            }\r\n            else if (session.status == \"DOING\") {\r\n                otherLiveSessions = [...otherLiveSessions, session];\r\n                console.log(\"otherLiveSessions\",otherLiveSessions)\r\n            }\r\n            else if (session.hole_reservations && session.hole_reservations.status==\"HOST_CONFIRMED\"){\r\n                hostConfirmedSessions = [...hostConfirmedSessions, session];\r\n                console.log(\"hostConfirmedSessions\",hostConfirmedSessions)\r\n            }else{\r\n                currentReserveSessions = [...currentReserveSessions, session];\r\n                console.log(\"currentReserveSessions\",currentReserveSessions)\r\n            }\r\n        })\r\n    }\r\n\r\n    if(Object.keys(allUsersData.data).length != 0){\r\n        const allUsers = allUsersData.data.data.detail;\r\n        allUsers.map((candidate) => {\r\n            if(candidate.hole_open_auth === true){\r\n                hosts = [...hosts, candidate]\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div style={style.mainOragne}>\r\n            <div style={style.cookie1} className=\"helloCookie\"/>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"BMDOHYEON\" style={style.title}>\r\n                ASK2LIVE\r\n        </div>\r\n        <br/><br/>\r\n        \r\n            {\r\n                myLiveSessions.length == 0 ?\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                다양한 사람들에게<br/>\r\n                궁금한 것들을 물어보세요!\r\n                </div>\r\n                :\r\n                <div style={style.descript} className=\"NotoSans2\">\r\n                찜했던<br/>\r\n                Live Q&A가 시작했어요!\r\n                </div>\r\n            } \r\n        \r\n        <br/>\r\n\r\n    <br></br>\r\n        <SessioinCreateButton/>\r\n\r\n\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { myLiveSessions.length != 0 ?\r\n            <> \r\n            <MyLiveSessionsCards myLiveSessions={myLiveSessions} />\r\n            <div className=\"center divider\">\r\n              <Divider variant=\"middle\"/>\r\n            </div>\r\n            </>\r\n            : <></>\r\n            }\r\n        </Grid>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">LIVE 중인 다른 Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { otherLiveSessions.length != 0 ? <OtherLiveSessionsCards otherLiveSessions={otherLiveSessions}/> : <p>라이브 중인 다른 세션이 없어요</p> }\r\n        </Grid>\r\n    \r\n        <div className=\"center divider\">\r\n            <Divider variant=\"middle\"/>\r\n        </div>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">다가오는 LIVE Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hostConfirmedSessions.length != 0 ? <HostConfirmedSessionsCards hostConfirmedSessions={hostConfirmedSessions}/> : <p>예정된 다른 세션이 없어요</p> }\r\n        </Grid>\r\n\r\n        <div className=\"center divider\">\r\n            <Divider variant=\"middle\"/>\r\n        </div>\r\n\r\n        <p style={style.descript2} className=\"Gmarket2\">오픈 신청중인 LIVE Q&A</p>\r\n        <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { currentReserveSessions.length != 0 ? <CurrentReserveSessionsCards currentReserveSessions={currentReserveSessions} setFlag={setFlag}/> : <p>요청 받고있는 다른 세션이 없어요</p>}\r\n        </Grid>\r\n\r\n        <div className=\"center divider\">\r\n            <Divider variant=\"middle\"/>\r\n        </div>\r\n\r\n        {/* <Grid style={{paddingLeft : \"6em\", paddingRight : \"6em\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            { hosts.length != 0 ? <HostCards hosts={hosts}/> : <p>등록된 호스트가 없어요</p>}\r\n        </Grid> */}\r\n\r\n        \r\n        </>\r\n\r\n    \r\n    )\r\n};\r\n\r\nexport default SessionCardContainer\r\n","import { useHistory } from \"react-router\";\r\nimport React from \"react\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    maxWidth: \"70em\",\r\n  },\r\n  profile: {\r\n    flexGrow: 1,\r\n    // paddingLeft: theme.spacing(2),\r\n    // paddingRight: theme.spacing(2),\r\n    maxWidth: \"50em\",\r\n    // margin: \"5%\",\r\n    display: \"flex\",\r\n    height: 80,\r\n    alignItems: \"center\",\r\n    // justifyContent: 'center',\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\n\r\nconst ProfileGate = (props) => {\r\n  // if(!props.location.state) history.push('/mypge');\r\n    console.log(\"profileGate\", props.user.detail);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const goToDetail = () => {\r\n        console.log('onClick');\r\n        history.push({\r\n            pathname: '/mypage/' + props.user.detail.username,\r\n            state: props.user.detail});\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>My</h2>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        <Card className={classes.profile}>\r\n          <CardActionArea onClick={goToDetail}>\r\n            {/* <CardActions > */}\r\n            <CardHeader\r\n              fontSize=\"large\"\r\n              avatar={\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src=\"../static/live_IU2.png\"\r\n                  // className={classes.avatar}\r\n                  className={classes.large}\r\n                ></Avatar>\r\n              }\r\n              // titleTypographyProps={{variant:'h1' }}\r\n              title={<Typography variant=\"body1\" style={{ fontWeight: 800 }}>{props.user.detail.username}</Typography>}\r\n              // subheader=\"September 14, 2016\"\r\n            />\r\n            {/* </CardActions> */}\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileGate;\r\n","import React, { useCallback } from \"react\"\r\nimport ProfileGate from './ProfileGate'\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    maxWidth: \"70em\",\r\n  },\r\n  my: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    // color: theme.palette.text.secondary,\r\n    backgroundColor: \"lightgray\",\r\n  },\r\n  myBottomCard: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\n\r\nconst MyPage = (props) => {\r\n  const classes = useStyles();\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item className={classes.my} xs={12}>\r\n              <ProfileGate user={props.user}/>\r\n              {/* <Paper className={classes.paper}>xs=12</Paper> */}\r\n              {/* <Grid container spacing={3}>\r\n                <Grid item className={classes.myBottomCard} xs>\r\n                  24명 <br />\r\n                  팔로우\r\n                </Grid>\r\n                <Grid item xs>\r\n                  17명 <br />\r\n                  팔로잉\r\n                </Grid>\r\n                <Grid item xs>\r\n                  14개 <br />\r\n                  미리 찜하기\r\n                </Grid>\r\n              </Grid> */}\r\n            </Grid>\r\n          </Grid>\r\n          <h3>Live QnA</h3>\r\n        </div>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import axios from \"axios\";\r\n\r\nexport const postSessionToReserve = async(session) => {\r\n  console.log(\"-----postSessionToReserve start-----\");\r\n\r\n  const config = {\r\n    headers: {'Authorization': 'Token ' + localStorage.token}\r\n  }\r\n  const data = {\r\n    data: {}\r\n  }\r\n\r\n  const res = await axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + session.id + \"/hostconfirm\",\r\n    data,\r\n    config,\r\n  );\r\n  console.log(\"hole reserved: \", res);\r\n};\r\n","import { postSessionToReserve } from '../../actions/SessionToReserveActions';\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { getUserSessionInfo } from '../../actions/SessionActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  paper: {\r\n    position: \"absolute\",\r\n    bottom: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"20px 20px 0 0 \",\r\n    zIndex : \"3\",\r\n  },\r\n  title: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font: {\r\n    color: \"#030916\",\r\n    fontSize: \"1.2em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font2: {\r\n    color: \"#030916\",\r\n    fontSize: \"1em\",\r\n    margin: \"5% 0 1% 5%\",\r\n  },\r\n  font3: {\r\n    fontSize: \"1em%\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    margin: \"3% 5% 0 0\",\r\n  },\r\n};\r\n\r\nconst SessionConfirm = (props) => {\r\n  console.log(\"SessionConfirm\");\r\n  const { session, goListUp, goDark, setFlag } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <>\r\n    <Paper style={style.paper} elevation={1}>\r\n      <div className=\"BMDOHYEON\" style={style.title}>\r\n        {/* <Typography variant=\"h3\"  gutterBottom> */}\r\n        오픈 확정하기\r\n        {/* </Typography> */}\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font}>\r\n        {Date(session.reserve_date).substring(0, 21)}에 예정된 <br></br>\"\r\n        {session.title}\"의 스케쥴을 확정하시겠어요?\r\n      </div>\r\n      <div className=\"BMJUA\" style={style.font2}>\r\n        스케줄을 확정하면 '찜하기' 버튼을 누른 유저에게\r\n        <br></br>\r\n        알림이 전송됩니다!\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <Button\r\n            style={style.button}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              goListUp({ transform: \"translate(0, 100%)\" });\r\n              goDark({ animation: \"golight 0.7s\" });\r\n              setTimeout(() => {\r\n                goDark({ display: \"none\" });\r\n              }, 700);\r\n            }}\r\n          >\r\n            <div style={style.font3} color=\"030916\">\r\n              취소하기\r\n            </div>\r\n          </Button>\r\n\r\n          <Button\r\n            style={style.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => \r\n              \r\n              {\r\n                postSessionToReserve(session);\r\n                console.log(\"클릭\");\r\n                setFlag({display: 'flex'})\r\n                setTimeout(() => {\r\n                  setFlag({ display: 'none', animation: '0.7s' });\r\n                  dispatch(getUserSessionInfo(localStorage.token))\r\n                }, 500);\r\n\r\n                setTimeout(() => {\r\n                  goListUp({ transform: \"translate(0, 100%)\" });\r\n                  goDark({ animation: \"golight 0.7s\" });\r\n                  setTimeout(() => {\r\n                    goDark({ display: \"none\" });\r\n                  }, 700);\r\n                }, 500)\r\n                history.push(\"/mypage\");\r\n              }}\r\n              >\r\n            <div style={style.font3} color=\"030916\">\r\n              확정하기\r\n            </div>\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SessionConfirm };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport Moment from \"react-moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"8em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    float: \"left\",\r\n    width: \"5em\",\r\n    height: \"5em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"5em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst MypageLiveSession = (props) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const { session, setFlag } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    // await postSessionDelete(session);\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    const res = await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n    console.log(\"hole deleted: \", res);\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"30em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n          <br></br>\r\n\r\n          <div\r\n            style={{ backgroundImage: \"url('/static/live_IU2.png')\" }}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n\r\n          <CardHeader\r\n            style={{ padding: \"10px 8px 0 8px\" }}\r\n            title={<Typography variant=\"body1\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM.DD hh시 mm분\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>\r\n                }\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {console.log(\"CLICK\")}\r\n                      {console.log(session)}\r\n                      {history.push({\r\n                        pathname: `mypage/hole/${session.id}/edit`,\r\n                        state: session,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          <CardContent style={{padding: 0}}>\r\n            <CardActions style={{paddingLeft: 0}}>\r\n              {session.status != \"DONE\" && user.id === parseInt(session.host) && (\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setListUp({ transform: \"translate(0, 50%)\" });\r\n                    setDark({ animation: \"godark 0.7s\" });\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    예약 확정하기\r\n                  </Typography>\r\n                </Button>\r\n              )}\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {onDelete()}\r\n                      {setTimeout(\r\n                        () => dispatch(getUserSessionInfo(localStorage.token)),\r\n                        200\r\n                      )}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    삭제하기\r\n                  </Typography>\r\n                </Button>\r\n                \r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      <div style={listup} className=\"hiddenlist\" maxWidth=\"\">\r\n        <SessionConfirm\r\n          session={session}\r\n          goListUp={setListUp}\r\n          goDark={setDark}\r\n          setFlag={setFlag}\r\n        />\r\n      </div>\r\n      <div style={dark} className=\"mypagelayerfordark\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageLiveSession;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Moment from \"react-moment\";\r\n\r\n\r\nimport \"../../styles/style.css\";\r\nimport { SessionConfirm } from \"./SessionConfirm\";\r\nimport {\r\n  getSessionInfo,\r\n  getUserSessionInfo,\r\n} from \"../../actions/SessionActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2%\",\r\n    width: \"100%\",\r\n    height: \"8em\",\r\n    maxWidth: \"30em\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    border: 'solid',\r\n    borderColor: '#D95032',\r\n  },\r\n  media: {\r\n    cursor: \"pointer\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardContent: {\r\n    height: \"inherit\",\r\n  },\r\n  cookieWrapper: {\r\n    float: \"left\",\r\n    width: \"5em\",\r\n    height: \"5em\",\r\n    marginLeft: \"1em\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    overflow: \"hidden\",\r\n  },\r\n  useCookie: {\r\n    float: \"left\",\r\n    margin: \"auto\",\r\n    backgroundImage: \"url('/static/cookieMould.png')\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"100%\",\r\n    width: \"5em\",\r\n    height: \"inherit\",\r\n    overflow: \"hidden\",\r\n  },\r\n  layerfordark: {\r\n    position: \"fixed\",\r\n    maxWidth: \"73em\",\r\n    minHeight: \"35em\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"black\",\r\n    opacity: \"0.6\",\r\n    transition: \"all 0.7s\",\r\n  },\r\n}));\r\n\r\nconst MypageConfirmedSession = ({ session }) => {\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [listup, setListUp] = useState({ transform: \"translate(0, 100%)\" });\r\n  const [dark, setDark] = useState({\r\n    transform: \"translate(0, 100%)\",\r\n    display: \"none\",\r\n  });\r\n\r\n  const onChangeDoing = async(session, user) => {\r\n    console.log(\"ChangeDoing\")\r\n    console.log(session.id)\r\n    console.log(user)\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    const data = {\r\n      \r\n      channel_num : String(session.id) + '123',\r\n      host_uid : user.id,\r\n      \r\n    }\r\n    const res = await axios.post(\r\n      \"https://www.ask2live.me/api/hole/\" + session.id + \"/live/create\",\r\n      data,\r\n      config,\r\n    );\r\n\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    console.log(\"DELETE SESSION!\");\r\n    // await postSessionDelete(session);\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n\r\n    const res = await axios.delete(\r\n      \"https://www.ask2live.me/api/hole/delete/\" + session.id,\r\n      config\r\n    );\r\n    console.log(\"hole deleted: \", res);\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  if (!session) return null;\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"30em\",\r\n          float: \"left\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Card key={session.livehole_id} className={classes.root}>\r\n          <br></br>\r\n\r\n          <div\r\n            style={{ backgroundImage: \"url('/static/live_IU2.png')\" }}\r\n            className={classes.cookieWrapper}\r\n          >\r\n            <div className={classes.useCookie}></div>{\" \"}\r\n          </div>\r\n\r\n          <CardHeader\r\n            style={{ padding: \"10px 8px 0 8px\" }}\r\n            title={<Typography variant=\"body1\">{session.title}</Typography>}\r\n            subheader={\r\n                <>\r\n                <Typography variant=\"body2\">\r\n                <Moment format=\"MM.DD hh시 mm분\">\r\n                {session.reserve_date}\r\n                </Moment>\r\n                </Typography>\r\n                </>}\r\n            action={\r\n              user.id === parseInt(session.host) &&\r\n              session.status != \"DONE\" && (\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {console.log(\"CLICK\")}\r\n                      {console.log(session)}\r\n                      {history.push({\r\n                        pathname: `mypage/hole/${session.id}/edit`,\r\n                        state: session,\r\n                      })}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n          <CardContent style={{padding:0}}>\r\n            <CardActions style={{ paddingLeft:0 }}>\r\n              {user.id === parseInt(session.host) && (\r\n                <>\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    history.push({\r\n                        pathname: \"/session/reserve\",\r\n                        search: \"?holeId=\" + session.id,\r\n                    })\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    라이브하기\r\n                  </Typography>\r\n                </Button>\r\n                <Button\r\n                  size=\"normal\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    <>\r\n                      {onDelete()}\r\n                      {setTimeout(\r\n                        () => dispatch(getUserSessionInfo(localStorage.token)),\r\n                        200\r\n                      )}\r\n                    </>;\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\r\n                    삭제하기\r\n                  </Typography>\r\n                </Button>\r\n                \r\n                \r\n                </>\r\n              )}\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      \r\n      <div style={listup} className=\"hiddenlist\" maxWidth=\"\">\r\n        <SessionConfirm\r\n          session={session}\r\n          goListUp={setListUp}\r\n          goDark={setDark}\r\n        />\r\n      </div>\r\n      <div style={dark} className=\"mypagelayerfordark\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageConfirmedSession;","import { useHistory } from \"react-router\";\r\n\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst style = {\r\n  title: {\r\n    top: 0,\r\n    display: \"flex\",\r\n    position: \"fixed\",\r\n    fontSize: \"1.2em\",\r\n    // margin: \"auto\",\r\n    height: \"5%\",\r\n    width: \"100%\",\r\n    maxWidth: \"66em\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff8ef\",\r\n    borderBottom: \"solid\",\r\n    // backgroundColor: 'blue',\r\n    zIndex: \"1\",\r\n  },\r\n};\r\n\r\nconst MypageNav = ({ text }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\">\r\n        <div className=\"BMDOHYEON\" style={style.title}>\r\n          <IconButton\r\n            style={{position: \"absolute\", left:0}}\r\n            aria-label=\"back\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </IconButton>\r\n          {text}\r\n        </div>\r\n        \r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default MypageNav\r\n","import {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n} from './types';\r\n\r\nimport axios from 'axios'\r\n\r\nfunction userGetApi(token){\r\n    const config = {\r\n                headers: { Authorization: 'Token ' + token }\r\n            }\r\n    return axios.get('https://www.ask2live.me/api/user/read', config)\r\n}\r\n\r\nexport const giveUser = (given) => ({ type : GIVEUSER, user : given });\r\n\r\nexport const getUserInfo = token => dispatch => {\r\n    console.log('-----getUserInfo start-----')\r\n    dispatch({type: USER_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return userGetApi(token).then(\r\n        (response) => {\r\n            dispatch({ type: USER_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: USER_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Mypage from \"../components/mypage/Mypage\";\r\n// import Profile from '../components/mypage/Profile';\r\nimport SessionCardContainer from \"./SessionCardContainer\";\r\nimport { SessioinCreateButton } from \"../components/SessionCreateButton\";\r\nimport MypageLiveSession from \"../components/mypage/MypageLiveSession\";\r\nimport MypageConfirmedSession from \"../components/mypage/MypageConfirmedSession\";\r\nimport MypageNav from \"../components/mypage/MypageNav\";\r\nimport { getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport { getUserInfo } from \"../actions/UserActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// material-ui\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"70em\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    width: \"100%\",\r\n    maxWidth: \"70em\",\r\n    paddingLeft: theme.spacing(4),\r\n    borderBottom: \"solid thin\",\r\n    marginBottom: \"2%\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  listcenter: {\r\n    left: 0,\r\n    right: 0,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  alert: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n    zIndex: 2,\r\n    maxWidth: \"25em\",\r\n    size: \"large\",\r\n  },\r\n};\r\n\r\nconst MyPageContainer = (props) => {\r\n  console.log(\"컴포넌트 실행!\");\r\n\r\n  const [flag, setFlag] = useState({ display: \"none\" });\r\n  const [render, setRender] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector((state) => state.user.data);\r\n  const sessions = useSelector((state) => state.mySession.data);\r\n  const wishSessions = useSelector((state) => state.mySession.data);\r\n\r\n  console.log(\"세션 :\", sessions);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.token\r\n    console.log(\"useEffect\");\r\n    dispatch(getUserInfo(token));\r\n    dispatch(getUserSessionInfo(token));\r\n    setRender(true);\r\n  }, [render]);\r\n\r\n  let myLiveSessions = [];\r\n  let myDoneSessions = [];\r\n  let myWishSessions = [];\r\n  let myConfirmSessions = [];\r\n  if (Object.keys(sessions).length != 0) {\r\n    sessions.detail.my_hole.map((session) => {\r\n      if (\r\n        session.status === \"NOT_START\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        if (session.reservation_status === \"HOST_CONFIRMED\") {\r\n          myConfirmSessions = [...myConfirmSessions, session];\r\n        } else {\r\n          myLiveSessions = [...myLiveSessions, session];\r\n        }\r\n      } else if (\r\n        session.status === \"DONE\" &&\r\n        parseInt(session.host) === user.detail.id\r\n      ) {\r\n        myDoneSessions = [...myDoneSessions, session];\r\n      }\r\n    });\r\n  }\r\n\r\n  if (Object.keys(wishSessions).length != 0) {\r\n    wishSessions.detail.wish_hole.map((session) => {\r\n      myWishSessions = [...myWishSessions, session];\r\n    });\r\n  }\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const [openDone, setOpenDone] = useState(true);\r\n  const [openWish, setOpenWish] = useState(true);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const handleConfirmClick = () => {\r\n    setOpenConfirm(!openConfirm);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClickDone = () => {\r\n    setOpenDone(!openDone);\r\n  };\r\n\r\n  const handleClickWish = () => {\r\n    setOpenWish(!openWish);\r\n  };\r\n\r\n  if (!user.detail || !sessions.detail) return <p>로딩중...</p>;\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필\"} />\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Mypage user={user} />\r\n        <SessioinCreateButton />\r\n      </Grid>\r\n      <div style={flag}>\r\n        <Alert style={style.alert} onClose={() => {}}>\r\n          This is a success alert — check it out!\r\n        </Alert>\r\n      </div>\r\n\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <div\r\n          style={{ display: \"inline-block\", width: \"100%\", maxWidth: \"73em\" }}\r\n        >\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleConfirmClick}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <SendIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"진행 확정된 Live\" />\r\n            {openConfirm ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openConfirm} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myConfirmSessions.length != 0 &&\r\n                myConfirmSessions.map((session) => (\r\n                  <>\r\n                    <MypageConfirmedSession\r\n                      session={session}\r\n                      setFlag={setFlag}\r\n                    />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleClick}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <DraftsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"모집 중인 Live\" />\r\n            {open ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myLiveSessions.length != 0 &&\r\n                myLiveSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} setFlag={setFlag} />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleClickDone}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"진행한 Live\" />\r\n            {openDone ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openDone} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myDoneSessions.length != 0 &&\r\n                myDoneSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} setFlag={setFlag} />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem\r\n            style={style.listcenter}\r\n            button\r\n            onClick={handleClickWish}\r\n            className={classes.nested}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"찜했던 Live\" />\r\n            {openWish ? <ExpandMore /> : <ExpandLess />}\r\n          </ListItem>\r\n\r\n          <Collapse in={!openWish} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {myWishSessions.length != 0 &&\r\n                myWishSessions.map((session) => (\r\n                  <>\r\n                    <MypageLiveSession session={session} setFlag={setFlag} />\r\n                  </>\r\n                ))}\r\n            </List>\r\n          </Collapse>\r\n        </div>\r\n      </Grid>\r\n\r\n      <div\r\n        style={{\r\n          height: \"4em\",\r\n          width: \"100%\",\r\n          marginBottom: \"4%\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPageContainer;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport CounterContainer from \"../containers/CounterContainer\";\r\nimport { increment, decrement } from \"../reducers/counter\";\r\nimport { SettingsInputAntenna } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { getSessionInfo, getUserSessionInfo } from \"../actions/SessionActions\";\r\nimport MypageNav from \"../components/mypage/MypageNav\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    // fontFamily: \"BMJUA\"\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  alert: {\r\n    boxShadow: \"2px 2px 2px 2px #D95032\", // 섀도우 색\r\n    border: \"solid 1px white\", // 테두리 색\r\n    backgroundColor: \"black\", // 배경색\r\n  },\r\n};\r\n\r\nconst SessionCreateContainer = () => {\r\n  // const [title, setTitle] = useState('')\r\n  // const [isTitleValid, setIsTitleValid] = useState(false)\r\n  // const [description, setDescription] = useState('')\r\n  // const [isDescriptionValid, setIsDescriptionValid] = useState(false)\r\n  // const [reserveDate, setReserveDate] = useState('')\r\n  // const [isReserveDateValid, setisReserveDateValid] = useState(initialState)\r\n  const [inputs, setInputs] = useState({\r\n    title: \"\",\r\n    titleValid: false,\r\n    description: \"\",\r\n    descriptionValid: false,\r\n    reserveDate: \"\",\r\n    reserveDateValid: false,\r\n  });\r\n  const [open, setOpen] = useState(0);\r\n\r\n  const { title, titleValid, description, descriptionValid, reserveDate, reserveDateValid, finishDate } = inputs;\r\n\r\n  const classes = useStyles();\r\n  const counter = useSelector((state) => state.counter, []);\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [userCount, setUserCount] = useState(0);\r\n\r\n  const onIncrease = useCallback(() => dispatch(increment()), [dispatch]);\r\n  const onDecrease = useCallback(() => dispatch(decrement()), [dispatch]);\r\n\r\n  const onChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  });\r\n\r\n  // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n  const handleClose = (event, reason) => {\r\n    history.push(\"/mypage\");\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const isValidate = (name, entered) => {\r\n    if (entered.length > 0) {\r\n      setInputs({...inputs, [name+'Valid']: true})\r\n      setInputs({...inputs, [name]: entered})\r\n    } else {\r\n      setInputs({...inputs, [name+'valid']: false})\r\n    }\r\n  };\r\n\r\n  const onClick = async () => {\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    console.log(localStorage.token);\r\n\r\n    const data = {\r\n      title: title,\r\n      description: description,\r\n      reserve_date: reserveDate,\r\n      target_demand: counter,\r\n    };\r\n    console.log(data);\r\n    await axios\r\n      .post(\"https://www.ask2live.me/api/hole/create\", data, config)\r\n      .then((res) => {\r\n        console.log(\"hole created: \", res);\r\n        handleClick();\r\n        setTimeout(() => {\r\n          dispatch(getUserSessionInfo(localStorage.token));\r\n          dispatch(getSessionInfo());\r\n        }, 200);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"Live Q&A 만들기\"} />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        {/* <CssBaseline /> */}\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <AssignmentIcon />\r\n          </Avatar>\r\n\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"body1\"\r\n            butterBottom\r\n            style={{ fontFamily: \"BMJUA\" }}\r\n          >\r\n            세션 정보를 입력하세요\r\n          </Typography>\r\n          {/* <Typography variant=\"subtitle1\" gutterBottom>\r\n                    세션 정보를 입력하세요\r\n                </Typography> */}\r\n          <div className={classes.form} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"title\"\r\n              label=\"session title\"\r\n              name=\"title\"\r\n              error={title.length === 0 ? true : false}\r\n              helperText={title.length === 0 ? \"제목을 입력해 주세요\" : \"\"}\r\n              // autoComplete=\"title\"\r\n              placeholder=\"세션 제목을 입력해주세요\"\r\n              autoFocus\r\n              value={title}\r\n              onChange={onChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              // variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              error={reserveDate.length === 0 ? true : false}\r\n              helperText={title.length === 0 ? \"예약 일자를 입력해 주세요\" : \"\"}\r\n              id=\"reserveDate\"\r\n              label=\"Live Q&A 진행 예정일\"\r\n              name=\"reserveDate\"\r\n              type=\"datetime-local\"\r\n              // autoComplete=\"title\"\r\n              autoFocus\r\n              value={reserveDate}\r\n              onChange={onChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            <Grid\r\n              style={{ height: \"6em\" }}\r\n              container\r\n              spacing={3}\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid justify=\"center\" justifyContents=\"center\" item xs={6}>\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\",\r\n                    fontFamily: \"BMJUA\",\r\n                  }}\r\n                  variant=\"body2\"\r\n                >\r\n                  <AccountCircleIcon /> &nbsp; 목표 인원 수\r\n                </div>\r\n              </Grid>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1em\",\r\n                }}\r\n              >\r\n                <IconButton size=\"small\" onClick={onDecrease}>\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n\r\n                <TextField\r\n                  // margin=\"normal\"\r\n                  style={{ width: \"4em\" }}\r\n                  id=\"target_demand\"\r\n                  name=\"target_demand\"\r\n                  inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n                  value={counter}\r\n                  name=\"userCount\"\r\n                />\r\n\r\n                <IconButton size=\"small\" onClick={onIncrease}>\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              name=\"description\"\r\n              placeholder=\"소개글을 입력해주세요\"\r\n              error={description.length === 0 ? true : false}\r\n              helperText={description.length === 0 ? \"어떤 내용의 Q&A인지 설명해 주세요\" : \"\"}\r\n              value={description}\r\n              label=\"Live Q&A 짧은 소개\"\r\n              type=\"password\"\r\n              id=\"description\"\r\n              onChange={onChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onClick}\r\n            >\r\n              Live Q&A 만들기\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Snackbar\r\n        style={{ position: \"fixed\", bottom: \"50%\" }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n          <span style={{ color: \"white\" }}>Live Q&A 생성 완료!</span>\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SessionCreateContainer;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport MypageNav from \"./MypageNav\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    top: \"5%\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"35%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    maxWidth: \"70em\",\r\n    margin: \"auto\",\r\n  },\r\n  root2: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: 0,\r\n    right: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    maxWidth: \"70em\",\r\n    margin: \"2% auto\",\r\n  },\r\n  avatar: {\r\n    float: \"left\",\r\n    top: \"30%\",\r\n    left: \"70%\",\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMDOHYEON\",\r\n    fontSize: \"1.2em\",\r\n    top: \"30%\",\r\n    left: \"10%\",\r\n  },\r\n  work_company: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"45%\",\r\n    left: \"10%\",\r\n    alignItems: \"center\",\r\n  },\r\n  work_field: {\r\n    position: \"absolute\",\r\n    fontFamily: \"BMJUA\",\r\n    top: \"52%\",\r\n    left: \"10%\",\r\n    alignItems: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  large: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  paper: {\r\n    margin: \"10% 0 5% 10%\",\r\n    width: \"50%\",\r\n  },\r\n  bio: {\r\n    width: \"50%\",\r\n    marginLeft: \"10%\",\r\n  },\r\n  edit : {\r\n    fontFamily: \"BMJUA\",\r\n    top: 0,\r\n    right: 0,\r\n    height: \"5%\",\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: 'center',\r\n    zIndex: 2,\r\n  }\r\n};\r\n\r\n\r\n\r\nconst ProfileDetail = (props) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector((state) => state.user.data.detail);\r\n  console.log(\"props\", props)\r\n\r\n  let profile = {}\r\n  if (props.routerInfo.location.state.host){\r\n    const host = props.routerInfo.location.state.host;\r\n    console.log(\"host : \", host)\r\n    if (!host.work_company.length) host.work_company = \"회사 이름\";\r\n    if (!host.work_field.length) host.work_field = \"분야\";\r\n\r\n    profile = {\r\n      username: host.username,\r\n      work_company: host.work_company,\r\n      work_field: host.work_field,\r\n      bio: host.bio,\r\n    }\r\n  } else {\r\n    if (!user.work_company.length) user.work_company = \"회사 이름\";\r\n    if (!user.work_field.length) user.work_field = \"분야\";\r\n    profile = {\r\n      username: user.username,\r\n      work_company: user.work_company,\r\n      work_field: user.work_field,\r\n      bio: user.bio,\r\n    }\r\n  }\r\n\r\n\r\n  const goToEdit = () => {\r\n    console.log(\"click\");\r\n    history.push({\r\n      pathname: `${profile.username}/edit`,\r\n      state: user});\r\n  }\r\n  if (!user || !profile) return<p> 로딩중 </p>\r\n  return (\r\n    <>\r\n    <div >\r\n        <MypageNav text={\"프로필\"} />\r\n        {user.username === profile.username && \r\n        <Button\r\n        // className=\"BMJUA\"\r\n        style={style.edit}\r\n        onClick={goToEdit}\r\n        > 편집 </Button>\r\n        }\r\n    \r\n    </div>\r\n\r\n\r\n      <div className={classes.root}>\r\n        <Typography className={classes.username}>{profile.username}</Typography>\r\n        <Typography className={classes.work_company}>\r\n          {profile.work_company}\r\n        </Typography>\r\n        <Typography className={classes.work_field}>\r\n          {profile.work_field}\r\n        </Typography>\r\n\r\n        <Avatar\r\n          className={classes.avatar}\r\n          aria-label=\"recipe\"\r\n          src=\"../static/live_IU2.png\"\r\n        ></Avatar>\r\n      </div>\r\n\r\n      <div className={classes.root2}>\r\n        <div style={style.paper} className=\"BMDOHYEON\">\r\n          소개\r\n        </div>\r\n        <div style={style.bio} className=\"NotoSans2\">\r\n          {profile.bio}\r\n        </div>\r\n        {/* SNS 필드 삭제 */}\r\n        {/* <div style={style.paper} className=\"BMDOHYEON\">\r\n          SNS\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDetail\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { SettingsInputAntenna } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport MypageNav from \"./MypageNav\";\r\nimport { getUserInfo, updateUserInfo } from \"../../actions/UserActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  field: {\r\n    // position: \"relative\",\r\n    display: \"flex\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    position: \"relative\",\r\n    maxWidth: \"50em\",\r\n    margin: \"2% auto\",\r\n    marginBottom: \"4%\",\r\n  },\r\n  forForm: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: 'auto',\r\n    // padding: '10%',\r\n    width: \"100%\",\r\n    maxWidth: \"80em\",\r\n    // padding: \"3px\",\r\n    // backgroundColor: 'blue',\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 2%\",\r\n  },\r\n};\r\n\r\nconst MypageEdit = (props) => {\r\n  console.log(\"MypageEdit\");\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = props.routerInfo.location.state;\r\n\r\n  console.log(user);\r\n\r\n  const [inputs, setInputs] = useState({\r\n    // email: \"\",\r\n    work_field: user.work_field,\r\n    // profile_image: user.,\r\n    username: user.username,\r\n    work_company: user.work_company,\r\n    bio: user.bio,\r\n  });\r\n\r\n  const {\r\n    email,\r\n    work_field,\r\n    profile_image,\r\n    username,\r\n    work_company,\r\n    bio,\r\n  } = inputs;\r\n\r\n  const dispatch = useDispatch();\r\n  const onChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  });\r\n\r\n  const onClick = async () => {\r\n    console.log(localStorage.token);\r\n    const config = {\r\n      headers: { Authorization: \"Token \" + localStorage.token },\r\n    };\r\n    const data = {\r\n        // email: email,\r\n        work_field: work_field,\r\n        // profile_image: profile_image,\r\n        username: username,\r\n        work_company: work_company,\r\n        bio: bio,\r\n    };\r\n    console.log(\"DATA\", data);\r\n    const res = await axios.patch(\r\n      \"https://www.ask2live.me/api/user/update\",\r\n      data,\r\n      config\r\n    );\r\n    console.log(res);\r\n    // dispatch(updateUserInfo(localStorage.token, data));\r\n    dispatch(getUserInfo(localStorage.token));\r\n    history.push({\r\n      pathname: '/mypage/' + username,\r\n      state: user\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MypageNav text={\"프로필 편집\"} />\r\n      <Grid container direction=\"row\" justify=\"center\">\r\n        <div style={style.forForm} noValidate autoComplete=\"off\">\r\n          <div style={style.text}>이름</div>\r\n          <TextField\r\n            style={style.field}\r\n            required\r\n            id=\"outlined-required\"\r\n            label=\"username\"\r\n            defaultValue={user.username}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onChange}\r\n            name=\"username\"\r\n          />\r\n\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <div style={style.text}>이력</div>\r\n          <TextField\r\n            style={style.field}\r\n            id=\"outlined-required\"\r\n            label=\"회사 이름\"\r\n            defaultValue={user.work_company}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onChange}\r\n            name=\"work_company\"\r\n          />\r\n          <TextField\r\n            style={style.field}\r\n            id=\"outlined-required\"\r\n            label=\"직무\"\r\n            defaultValue={user.work_field}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onChange}\r\n            name=\"work_field\"\r\n          />\r\n          <br></br>\r\n          <div style={style.text}>이력</div>\r\n          <TextField\r\n            style={style.field}\r\n            id=\"outlined-multiline-static\"\r\n            label=\"짧은 자기소개    \"\r\n            multiline\r\n            rows={4}\r\n            defaultValue={user.bio}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onChange}\r\n            name=\"bio\"\r\n          />\r\n          <br></br>\r\n\r\n          {/* SNS 필드 삭제 */}\r\n          {/* <div style={style.text}>SNS</div>\r\n          <TextField\r\n            style={style.field}\r\n            id=\"outlined-multiline-static\"\r\n            label=\"주소\"\r\n            multiline\r\n            defaultValue={user.bio}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          /> */}\r\n\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              style={style.button}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <div style={style.font3} color=\"030916\">\r\n                취소하기\r\n              </div>\r\n            </Button>\r\n\r\n            <Button\r\n              style={style.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={onClick}\r\n            >\r\n              <div style={style.font3} color=\"030916\">\r\n                확정하기\r\n              </div>\r\n            </Button>\r\n          </Grid>\r\n        </div>\r\n            <div\r\n              style={{\r\n                backgroundColor: \"yellow\",\r\n                height: \"10em\",\r\n                width: \"100%\",\r\n                marginBottom: \"5%\",\r\n              }}\r\n            />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageEdit;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CounterContainer from \"../../containers/CounterContainer\";\r\nimport { increment, decrement } from \"../../reducers/counter\";\r\nimport { SettingsInputAntenna } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { getUserSessionInfo } from '../../actions/SessionActions'\r\nimport MypageNav from './MypageNav'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nconst style = {\r\nforForm: {\r\n    position: 'flex',\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    maxWidth: '79em',\r\n    padding: \"3px\",\r\n    top: \"10%\",\r\n    backgroundColor: \"skyblue\",\r\n    },\r\n  field: {\r\n    display: \"flex\",\r\n    justifyContent: 'center',\r\n    width: \"80%\",\r\n    margin: \"2% auto\",\r\n  },\r\n  counter: {\r\n    // position: \"relative\",\r\n    display: 'flex',\r\n    float: 'left',\r\n    width: \"15%\",\r\n    align: \"center\",\r\n    margin: \"auto\",\r\n    // left: \"35%\",\r\n  },\r\n  buttonIcon: {\r\n    // position: \"relative\",\r\n    display: 'flex',\r\n    float: 'left',\r\n    margin: \"auto\",\r\n    // left: '40%',\r\n    justifyContent: 'right',\r\n  },\r\n  text: {\r\n    fontSize: \"80%\",\r\n    fontWeight: \"bold\",\r\n    float: 'left',\r\n    display: 'flex',\r\n    margin: \"3% 0 0 10%\",\r\n  },\r\n  button: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    maxWidth: \"25em\",\r\n    margin: \"auto 5%\",\r\n  },\r\n};\r\n\r\nconst MySessionEdit = (props) => {\r\n    console.log(\"MySessionEdit\");\r\n    console.log(props);\r\n    const session = props.location.state;\r\n\r\n    console.log(session)\r\n\r\n  const [inputs, setInputs] = useState({\r\n    title: session.title,\r\n    description: session.description,\r\n    reserveDate: session.reserveDate,\r\n    target_demand: session.target_demand\r\n  });\r\n\r\n  const { title, description, reserveDate, target_demand } = inputs;\r\n\r\n  const classes = useStyles();\r\n  const counter = useSelector((state) => state.counter, []);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [userCount, setUserCount] = useState(0);\r\n\r\n  const onIncrease = useCallback(() => dispatch(increment()), [dispatch]);\r\n  const onDecrease = useCallback(() => dispatch(decrement()), [dispatch]);\r\n\r\n  const onChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  });\r\n\r\n  const onClick = async () => {\r\n    const config = {\r\n      headers: {'Authorization': 'Token ' + localStorage.token}\r\n    }\r\n    console.log(localStorage.token);\r\n    const data = inputs;\r\n    console.log(data);\r\n    const res = await axios.patch(\r\n      \"https://www.ask2live.me/api/hole/update/\" + session.id,\r\n      data,\r\n      config,\r\n    );\r\n    console.log(\"hole created: \", res);\r\n    dispatch(getUserSessionInfo(localStorage.token));\r\n    history.push('/mypage');\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <MypageNav text={'Live Q&A 편집'}/>\r\n      <Grid container justify=\"center\">\r\n\r\n        <div\r\n          style={style.forForm}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            style={style.field}\r\n            required\r\n            id=\"outlined-required\"\r\n            label=\"Live Q&A 타이틀\"\r\n            defaultValue={session.title}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onChange}\r\n            name=\"title\"\r\n          />\r\n\r\n          <br></br>\r\n\r\n          <TextField\r\n            required\r\n            style={style.field}\r\n            id=\"datetime-local\"\r\n            label=\"기간을 선택하세요\"\r\n            type=\"datetime-local\"\r\n            defaultValue={session.reserveDate}\r\n            // defaultValue=\"2017-05-24T10:30\"\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name=\"reserveDate\"\r\n            onChange={onChange}\r\n          />\r\n          <br></br>\r\n          <div style={style.text}>목표 인원 수</div>\r\n          <div style={{left: '40%'}}>\r\n          <IconButton\r\n            style={style.buttonIcon}\r\n            edge=\"start\"\r\n            aria-label=\"plus\"\r\n            size=\"small\"\r\n            onClick={onDecrease}\r\n          >\r\n            <RemoveCircleIcon />\r\n          </IconButton>\r\n\r\n          <TextField\r\n            style={style.counter}\r\n            id=\"standard-basic\"\r\n            inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n            defaultValue={session.target_demand}\r\n            value={counter}\r\n            // onChange={(e)=>setUserCount(e.target.value)}\r\n            name=\"userCount\"\r\n          />\r\n          {console.log(counter)}\r\n            \r\n          <IconButton\r\n            style={style.buttonIcon}\r\n            edge=\"start\"\r\n            aria-label=\"minus\"\r\n            size=\"small\"\r\n            onClick={onIncrease}\r\n          >\r\n            <AddCircleIcon />\r\n          </IconButton>\r\n          </div>\r\n\r\n          <TextField\r\n            style={style.field}\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Live Q&A 짧은 소개\"\r\n            multiline\r\n            rows={4}\r\n            defaultValue={session.description}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onChange}\r\n            name=\"description\"\r\n          />\r\n\r\n\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              style={style.button}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <div style={style.font3} color=\"030916\">\r\n                취소하기\r\n              </div>\r\n            </Button>\r\n\r\n            <Button\r\n              style={style.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={onClick}\r\n            >\r\n              <div style={style.font3} color=\"030916\">\r\n                확정하기\r\n              </div>\r\n            </Button>\r\n          </Grid>\r\n        </div>\r\n        <div\r\n              style={{\r\n                backgroundColor: \"yellow\",\r\n                height: \"5em\",\r\n                width: \"100%\",\r\n                marginBottom: \"5%\",\r\n              }}\r\n            />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MySessionEdit;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport getQuestionlist from '../../actions/QuestionListActions';\r\n\r\nconst MyQuestionCards = () => {\r\n  let [myQuestions, setMyQuestions] = useState([])\r\n\r\n  const user = useSelector(state => state.user)\r\n  const questions = useSelector(state => state.questionlist)\r\n  console.log('user', user.data.detail)\r\n  console.log('questionsList', questions.data.detail)\r\n  \r\n  const userId = user.data.detail.id\r\n  const questionsList = questions.data.detail\r\n\r\n  if(Object.keys(questionsList).length != 0){\r\n    questionsList.map((question) => {\r\n      const questionAuthor = parseInt(question.user)\r\n      console.log(questionAuthor)\r\n        if(userId === questionAuthor){\r\n          myQuestions = [...myQuestions, question]\r\n        }\r\n    })\r\n  }\r\n  console.log(myQuestions)\r\n\r\n  return (\r\n    <>\r\n      {myQuestions.length === 0 ? \r\n        <div>질문을 등록해주세요</div> :\r\n        \r\n        myQuestions.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst MyQuestionSend = ({session}) => {\r\n  const [ask, setAsk] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const postApi = async(isVoice, askValue) =>  {\r\n    const headers = {\r\n        'Authorization': 'Token ' + localStorage.token\r\n      }\r\n      const data = {\r\n          is_answered: false,\r\n          is_voice: isVoice,\r\n          question: askValue,\r\n      };\r\n      console.log(data);\r\n      const res = await axios.post(\r\n        \"https://www.ask2live.me/api/hole/\"+session.id + \"/question/create\",\r\n        data,\r\n        {headers:headers}\r\n      );\r\n      dispatch(getQuestionlist(session.id))\r\n}\r\n  return (\r\n    <>\r\n    \r\n    <div style={{paddingBottom:\"1em\"}}>\r\n    <input\r\n    type=\"text\"\r\n    maxLength=\"60\"\r\n    value={ask}\r\n    style={style.insert}\r\n    placeholder=\"최대 글자수는 60자입니다.\"\r\n    onChange={(e) => setAsk(e.target.value)}\r\n    />\r\n    <div style={style.submitbtn}>\r\n    <IconButton \r\n        onClick={()=>{\r\n          postApi(false, ask); setAsk(\"\")\r\n          \r\n          }} \r\n        className={classes.iconButton} \r\n        aria-label=\"send\">\r\n        <SendIcon/>\r\n    </IconButton>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst QuestionCard = ({question}) => {\r\n    const classes = useStyles();\r\n    console.log(question)\r\n    return(\r\n        <>\r\n        <Card key={question.id} className={classes.card}>\r\n        <CardHeader\r\n            subheader={question.user_username}/>\r\n        <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {question.question}\r\n        </Typography>\r\n        </CardContent>\r\n        </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//Tab 관련 로직\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: \"1000\",\r\n    backgroundColor: \"#E2D8CF\",\r\n    paddingBottom: \"3em\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n\r\n  submitbtn : {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      float: \"right\",\r\n      right: \"3px\",\r\n      width: \"10%\",\r\n      top: \"2.4em\",\r\n      height: \"2.4em\",\r\n      zIndex: \"2\",\r\n  },\r\n  insert : {\r\n      top: \"3.2em\",\r\n      left : \"9px\",\r\n      height: \"2em\",\r\n      width:\"86%\",\r\n      borderBottom : \"1px solid\",\r\n      borderTop: \"0px\",\r\n      borderLeft : \"0\",\r\n      borderRight: \"0\",\r\n  }\r\n\r\n}\r\n\r\nconst PreQuestionNav = ({session}) => {\r\n  const classes = useStyles();\r\n  const questions = useSelector(state => state.questionlist)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor:\"gray\"}}>\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n        >\r\n          <LinkTab label=\"등록된 질문\" href=\"/drafts\" {...a11yProps(0)} />\r\n          <LinkTab label=\"질문하기\" href=\"/trash\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      {questions.data.detail.length === 0 ? \r\n        <div>질문을 등록해주세요</div> :\r\n        \r\n        questions.data.detail.map((question) => \r\n        <>\r\n            <QuestionCard question={question}/>\r\n            <Divider light />\r\n            </>\r\n        )}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <MyQuestionSend session={session} />\r\n        <MyQuestionCards questions={questions} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreQuestionNav","import React, {useEffect, useState} from \"react\";\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PreQuestionNav from './PreQuestionNav'\r\nimport MypageNav from '../mypage/MypageNav'\r\nimport getQuestionlist from \"../../actions/QuestionListActions\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      display: 'flex',\r\n      maxWidth: \"70em\",\r\n      minWidth: \"18em\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    card: {\r\n        maxWidth: \"30em\",\r\n    }\r\n  }));\r\n\r\nconst circleStyle={\r\n    backgroundColor:\"#E2D8CF\",\r\n    width : \"77px\",\r\n    height : \"77px\",\r\n    borderRadius: \"38px\",\r\n  }\r\n\r\n  function CircularProgressWithLabel(props) {\r\n      const session = props.session\r\n      console.log(session)\r\n    return (\r\n      <Button \r\n        style={circleStyle}>\r\n      <Box position=\"relative\" display=\"inline-flex\">\r\n        <div style={{color:\"#D95032\", width:\"100%\"}}>\r\n        <CircularProgress thickness=\"3\" size=\"7rem\" variant='determinate' color='inherit'  {...props} /></div>\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n             <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Chip size=\"small\" variant=\"outlined\" label={`\r\n                ${session.hole_reservations.target_demand == 0? \r\n                    100 : Math.ceil(session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100)}%`} />\r\n            </Grid>\r\n        </Box>\r\n      </Box>\r\n      </Button>\r\n  \r\n    );\r\n  }\r\n\r\nconst SessionDetail = ({session}) => {\r\n  const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    if(session === undefined){\r\n      return(\r\n        <>\r\n        로딩중\r\n        </>\r\n      )\r\n    }\r\n    \r\n    \r\n    return(\r\n        <>\r\n        <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={9} className={classes.paper}>\r\n          {session.title}<br/>\r\n          {session.reserve_date}<br/>\r\n          찜 {session.hole_reservations.guests.length} / {session.hole_reservations.target_demand}\r\n          {session.hole}\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <CircularProgressWithLabel \r\n            className={classes.paper}\r\n            key={session.id} \r\n            session = {session}\r\n            value={(session.hole_reservations) ? \r\n              Math.ceil(\r\n                session.hole_reservations.guests.length / session.hole_reservations.target_demand <= 1 ?\r\n                session.hole_reservations.guests.length / session.hole_reservations.target_demand * 100 : 100) : 0} \r\n            current={(session.hole_reservations) ? session.hole_reservations.guests.length  : 0 }\r\n        />\r\n        </Grid>\r\n        \r\n      </Grid>\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ListPreQuestions = ({questions, session}) => {\r\n    console.log('qestions', questions)\r\n    return(\r\n        <>\r\n        <PreQuestionNav session={session}/>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst PreQuestions = () => {\r\n    const dispatch = useDispatch()\r\n    const questions = useSelector(state => state.questionlist)\r\n    const sessions = useSelector(state => state.session.data)\r\n    let targetSession = {};\r\n\r\n    const href = window.location.href\r\n    const sessionId = parseInt(href.split('/')[4])\r\n\r\n    if(Object.keys(sessions).length != 0){\r\n        sessions.map((session) => {\r\n          console.log('DEBUG22',session)\r\n            if(sessionId === session.id){\r\n                targetSession = {...targetSession, session}\r\n            }\r\n        })\r\n      }\r\n    useEffect(() => {\r\n      if(Object.keys(questions.data).length === 0){\r\n        dispatch(getQuestionlist(sessionId))\r\n      }\r\n    })\r\n    \r\n    return (\r\n            <>\r\n        <MypageNav text={'Live Q&A 상세'} />\r\n        <SessionDetail session={targetSession.session}/>\r\n        \r\n        {Object.keys(questions.data).length > 0 ? <ListPreQuestions questions={questions} session={targetSession.session}/> : null}\r\n        </>\r\n    )\r\n  \r\n}\r\nexport default PreQuestions;","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      margin: \"3%\",\r\n      maxWidth: \"50em\",\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"1px 1px 8px 0px rgb(0, 0, 0, 0.3)\",\r\n    },\r\n    cardContent: {\r\n      height: \"30px\",\r\n    },\r\n    cookieWrapper: {\r\n      float: \"left\",\r\n      marginLeft: \"2%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      overflow: \"hidden\",\r\n    },\r\n    useCookie: {\r\n      float: \"left\",\r\n      margin: \"auto\",\r\n      backgroundImage: \"url('/static/cookieMould.png')\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundSize: \"100%\",\r\n      width: \"5em\",\r\n      height: \"5em\",\r\n      overflow: \"hidden\",\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    participant : {\r\n        width: \"100%\",\r\n        maxWidth: \"30em\",\r\n        padding: \"10px\",\r\n    },\r\n    tmp: {\r\n        float: \"left\",\r\n        marginLeft : \"2%\",\r\n    },\r\n    follow: {\r\n        float : \"right\",\r\n        width: \"5em\",\r\n        height:\"5em\",\r\n        backgroundColor:\"pink\",\r\n    }\r\n}\r\n\r\nconst Participant = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\">\r\n                <Card style={style.participant} className={classes.root}>\r\n                    <div\r\n                        style={{ backgroundImage: \"url('/static/live_IU2.png')\" }}\r\n                        className={classes.cookieWrapper}\r\n                    >\r\n                        <div className={classes.useCookie}></div>\r\n                    </div>\r\n                    <div style={style.tmp}>\r\n                        <p style={{marginBottom:\"5px\"}}>{props.nickName}</p>\r\n                        <span>{props.workCompany ? props.workCompany : \"\"} | </span>\r\n                        <span>{props.workField ? props.workField : \"\"}</span>\r\n                    </div>\r\n                    <div style={style.follow}>follow</div>\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Participant;","import React, {useState, useEffect} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Participant from \"./Participant\"\r\nimport axios from \"axios\"\r\n\r\nconst style = {\r\n    participantlist : {\r\n        width: \"100%\",\r\n        paddingTop: \"1.5em\",\r\n        borderRadius : \"15px\",\r\n    }\r\n}\r\n\r\nconst ParticipantList = (props) => {\r\n\r\n    const participants = useSelector(state => state.enteredSession);\r\n\r\n\r\n    return (\r\n        <>\r\n        <p style={{position:\"absolute\", marginTop: \"1.5em\"}}>\r\n            {participants.arrived?\r\n                participants.data.detail.participant.length+\"명이나 듣고 있어요\"\r\n                :\r\n                <></>\r\n            }\r\n        </p>\r\n        <Paper style={style.participantlist} elevation={0}>\r\n         <br/>\r\n         {participants.arrived ? \r\n            participants.data.detail.participant.map((participant) => \r\n            <Participant \r\n            nickName={participant.username}\r\n            workField={participant.work_field}\r\n            workCompany={participant.work_company}\r\n            profileImage={participant.profile_image_url}/>)\r\n            : \r\n            <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ParticipantList;","import React from \"react\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst style = {\r\n    cloud : {\r\n        display : \"inline-block\",\r\n        backgroundColor : \"white\",\r\n        borderRadius : \"20px\",\r\n        margin: \"0 0 0.6em 1em\",\r\n        padding: \"0.5em 0.8em\",\r\n    },\r\n    audience1 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,1)\"\r\n    },\r\n    audience2 : {\r\n        margin: \"5px 0 5px 5px\",\r\n        fontSize: \"13px\",\r\n        color : \"rgba(255,255,255,0.6)\"\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  }));\r\n\r\nconst StringQuestion = (props) => {\r\n    const classes = useStyles();\r\n\r\n    let questionStr = props.userQuestion;\r\n\r\n    let maxNum = 23;\r\n    let dst;\r\n    let questionStrAry = []\r\n    \r\n    while (true)\r\n    {\r\n        if (questionStrAry.length === 3)\r\n            break;\r\n        if (questionStr.length <= maxNum)\r\n        {\r\n            questionStrAry.push(questionStr)\r\n            break;\r\n        }\r\n    \r\n        dst = questionStr.lastIndexOf(\" \", maxNum);\r\n    \r\n        if (dst == -1)\r\n        {\r\n            questionStrAry.push(questionStr.substring(0, maxNum - 1))\r\n            questionStr = questionStr.slice(maxNum);\r\n        }\r\n        else\r\n        {\r\n            questionStrAry.push(questionStr.substring(0, dst))\r\n            questionStr = questionStr.slice(dst + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{margin: \"0em 0em 0.5em 1em\", display:\"flex\"}}>\r\n            <Avatar src={props.hostImage} className={classes.small}/>\r\n            <span style={style.audience1} className=\"NanumGothic\">{props.userNickName}</span>\r\n            <span style={style.audience2} className=\"NanumGothic\">님의 질문</span>\r\n            {props.isHost?\r\n            <button\r\n            onClick={()=>{props.onAnswered(props.currentQuestionId)}}\r\n            >완료</button>\r\n            :\r\n            <></>\r\n            }\r\n        </div>\r\n        {console.log(questionStrAry)}\r\n        {\r\n            questionStrAry.map((questionUnit) => \r\n            <>\r\n                <p style={style.cloud} className=\"BMJUA\">{questionUnit}</p><br/>\r\n            </>\r\n            )\r\n        }\r\n\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default StringQuestion;","import React from \"react\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9),\r\n        zIndex:\"1\",\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst style = {\r\n    circle : {\r\n        border : \"solid 1px rgba(255, 255, 255, .3)\",\r\n        borderRadius : \"100%\",\r\n    }\r\n}\r\n\r\nconst UserAvatar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <div style={style.circle}>\r\n            <div className={classes.root}>\r\n                <Avatar alt={props.hostName} src={props.imageLink} className={classes.large}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserAvatar\r\n\r\n\r\n\r\n","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport Avatar from \"../Avatar\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport \"../../styles/style.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent:\"center\",\r\n        '& > *': {\r\n          margin: theme.spacing(0),\r\n        },\r\n      },\r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n\r\n  }));   \r\n\r\nconst VoiceQuestion = (props) => {\r\n    console.log(\"무야호\", props)\r\n    const classes = useStyles();\r\n    const [click, setClick] = useState(false)\r\n    const [clickStyle, setClickStyle] = useState({zIndex:\"1\", backgroundColor:\"#63BF8B\"})\r\n\r\n    const sendP2PMessage = useCallback((recipientUID, peerMsg) => {\r\n        console.log(\"sendP2PMessage\");\r\n    \r\n        // An RtmMessage object.\r\n        const remoteUID = String(recipientUID);\r\n    \r\n\r\n        // p2p message\r\n        console.log(\"리모트 UID: \", remoteUID);\r\n        console.log(\"리모트 msg: \", peerMsg);\r\n    \r\n        if (peerMsg) {\r\n          (props.rtmClient)\r\n            .sendMessageToPeer({ text: peerMsg }, remoteUID)\r\n            .then((sendResult) => {\r\n              if (sendResult.hasPeerReceived) {\r\n                console.log(\"peer recieved \" + peerMsg + \" successfully\");\r\n\r\n              } else {\r\n                console.log(\"peer did not recieved \" + peerMsg + \" unlog\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"RTM message recieved err\");\r\n            });\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n        <div style={{position:\"absolute\", width:\"100%\", display:\"flex\", justifyContent:\"center\", top:\"0\"}}>\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <Avatar alt={props.userNickName} src={props.imageLink} className={classes.large}/>\r\n                </div>\r\n                <div className={classes.root}>\r\n                 <p style={{color:\"rgba(255,255,255,0.6)\"}}>{props.userNickName}</p>\r\n                </div>\r\n                <div className={classes.root}>\r\n                {props.isHost?\r\n                <>\r\n                <button\r\n                disabled={click}\r\n                style={clickStyle}\r\n                onClick={()=>{setClickStyle({zIndex:\"1\", backgroundColor:\"grey\"});setClick(true); sendP2PMessage(props.userUid, \"host\")}}\r\n                >\r\n                    <span style={{color:\"black\"}} className=\"BMJUA\">연결</span>\r\n                </button>\r\n                <button\r\n                style={{zIndex:\"1\",backgroundColor:\"white\"}}\r\n                onClick={()=>{\r\n                    sendP2PMessage(props.userUid, \"audience\")\r\n                    props.onAnswered(props.currentQuestionId)\r\n                    setTimeout(() => {\r\n                        setClick(false);\r\n                        setClickStyle({zIndex:\"1\", backgroundColor:\"#63BF8B\"});\r\n                    }, 4000);\r\n                }}\r\n                >\r\n                <span style={{color:\"black\"}} className=\"BMJUA\">다음</span>\r\n                </button>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"voiceCircle\"/> \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VoiceQuestion;","import React, {useState, useCallback} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport StringQuestion from \"./StringQuestion\";\r\nimport VoiceQuestion from \"./VoiceQuestion\";\r\n\r\nconst style = {\r\n    wait : {\r\n        top: \"40%\",\r\n        position: \"absolute\",\r\n        color : \"rgba(255,255,255,0.7)\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        width:\"100%\",\r\n    }\r\n}\r\n\r\nconst CurrentQuestion = (props) => {\r\n    \r\n    const questionPatchApi = async(questionId) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: true,\r\n          };\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/question/update/\"+questionId,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n    const forQuestionidx = useCallback((questionList) => {\r\n        return questionList.findIndex((question => question.is_answered == false))\r\n    })\r\n\r\n\r\n    const questionResponse = useSelector(state => state.questionlist)\r\n\r\n    if (questionResponse.arrived)\r\n    {\r\n        let questionList = questionResponse.data.detail\r\n        if (questionList.length == 0) \r\n            return (\r\n                <>\r\n                <div style={style.wait}>\r\n                 <p>질문이 없습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        let questionIdx = forQuestionidx(questionList);\r\n        //이걸 매번 돌리기엔 비효율적.. useEffect를 쓰면 될까??\r\n        if (questionIdx == -1)\r\n            return (\r\n                <>\r\n                <div style={style.wait} className=\"BMJUA\">\r\n                <p>모든 질문이 답변되었습니다.</p>\r\n                </div>\r\n                </>\r\n            )\r\n        else \r\n        {\r\n            const onAnswered = (questionId) => {\r\n                questionPatchApi(questionId);\r\n            } \r\n\r\n            let currentQuestion = questionList[questionIdx];\r\n            let userNickName = currentQuestion.user_username;\r\n            let isVoice = currentQuestion.is_voice;\r\n            let userUid = currentQuestion.user_uid;\r\n\r\n            if (isVoice)\r\n                return (\r\n                <>\r\n                <VoiceQuestion \r\n                userUid={userUid} \r\n                userNickName={userNickName} \r\n                isHost={props.isHost} \r\n                onAnswered={onAnswered} \r\n                currentQuestionId={currentQuestion.id}\r\n                client={props.client}\r\n                rtmClient={props.rtmClient}\r\n                host={props.host}\r\n                localAudioTrack={props.localAudioTrack}\r\n                remoteUsers={props.remoteUsers}\r\n                channelNum={props.channelNum}\r\n                />\r\n                </>\r\n                )\r\n\r\n            else {\r\n                let userQuestion = currentQuestion.question;\r\n                return (\r\n                <StringQuestion userNickName={userNickName} userQuestion={userQuestion} isHost={props.isHost} onAnswered={onAnswered} currentQuestionId={currentQuestion.id}/>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    else return (\r\n        <>\r\n        <div style={style.wait}>\r\n            <p> 로딩중 </p>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n\r\n    // if (questionResponse.arrived)\r\n    // {\r\n    //     let questionList = questionResponse.data.detail\r\n    //     if (questionList.length == questionNum) \r\n    //         return <p>질문이 없습니다.</p>\r\n    //     else if (questionList.length != questionNum)\r\n    //     {\r\n    //         let currentQuestion = questionList[questionNum];\r\n    //         let userNickName = currentQuestion.user_nickname;\r\n    //         let isVoice = currentQuestion.is_voice;\r\n    //         if (isVoice)\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userNickName} 음성 질문입니다</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         else {\r\n    //             let userQuestion = currentQuestion.question;\r\n    //             return (\r\n    //             <>\r\n    //             <p>{userQuestion}</p>\r\n    //             <button\r\n    //             onClick={()=>{onAnswered(currentQuestion.id)}}\r\n    //             >완료</button>\r\n    //             </>\r\n    //             )\r\n    //         }\r\n    //     }\r\n    // }\r\n   \r\n}\r\n\r\n\r\nexport default CurrentQuestion","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"100%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n        display: \"\",\r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        float: \"left\",\r\n        height: theme.spacing(10),\r\n        // height: \"70px\",\r\n        borderRadius : \"15px\",\r\n      },\r\n    },\r\n    myPaper : {\r\n        border : \"2px solid white\",\r\n        boxShadow: \"0px 0px 4px 2px black\"\r\n    }\r\n  }));\r\n\r\nconst style = {\r\n    card : {\r\n        borderRadius : \"15px 15px 0 0\",\r\n        backgroundColor: \"#D95032\",\r\n        height: \"1.5rem\",\r\n        // height: \"20px\",\r\n        padding: \"0.3rem\",\r\n        // padding: \"3px\",\r\n    },\r\n\r\n}\r\n\r\nexport default function SimplePaper(props) {\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n    <div className={classes.root}>\r\n    <Paper className={props.myQuestion? classes.myPaper : null} style={props.isVoice? {backgroundColor:\"#D95032\"} : null} elevation={2} >\r\n        <div style={style.card}>\r\n            <p style={{marginTop:\"4px\", padding :\"0\"}}className=\"BMDOHYEON\">{props.userName}</p>\r\n        </div>\r\n            <p style={{margin:\"4px 0 0 4px\", padding :\"0\"}}className=\"NanumGothic2\">{props.value}</p>\r\n    </Paper>\r\n    </div>\r\n);\r\n}","import React, { useState }from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BorderColor } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Question from \"./Question\"\r\nimport \"../../styles/style.css\" \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: \"95%\",\r\n      '& > *': {\r\n        overflow: \"hidden\",\r\n        margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: theme.spacing(10),\r\n        // height: \"75px\",\r\n        backgroundColor: \"rgba(192, 0, 0, 0)\",\r\n      },\r\n      zIndex: \"3\",\r\n    },\r\n    border: {\r\n        borderRadius: \"15px\",\r\n        padding : \"0.5em\",\r\n        // padding : \"3px\",\r\n    }\r\n  }));\r\n\r\nexport default function QuestionSwiper(props) {\r\n\r\n    const classes = useStyles();\r\n    const [transStyle, setTransStyle] = useState({\r\n        transform : \"translate(0, 0)\",\r\n    })\r\n\r\n    // const handleTrans = () => {\r\n    //     setTransStyle\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.root}>\r\n        <Paper className={classes.border} elevation={0}>\r\n            <Grid style={transStyle} className=\"trans\" container justify=\"center\">\r\n                <Question isHost={props.isHost} userName=\"미\" value=\"무\" nextmove={()=>{setTransStyle({transform : \"translate(0, -6em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"어\" value=\"야\" nextmove={()=>{setTransStyle({transform : \"translate(0, -12em)\"})}}/>\r\n                <Question isHost={props.isHost} userName=\"캣\" value=\"호\" nextmove={()=>{setTransStyle({transform : \"translate(0, -18em)\"})}}/>\r\n            </Grid>\r\n    \r\n        </Paper>\r\n        </div>\r\n        </>\r\n    );\r\n}","import { useSelector } from \"react-redux\" \r\nimport React, { useState }from 'react';\r\nimport Question from \"./Question\";\r\nimport axios from \"axios\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst style ={\r\n    nav : {\r\n        display: \"table\",\r\n        position:\"absolute\",\r\n        bottom: \"90%\",\r\n        width: \"100%\",\r\n        height: \"2em\",\r\n    }\r\n}\r\n\r\n\r\nconst QuestionList = (props) => {\r\n\r\n    const [click1, setClick1] = useState({borderBottom:\"2px solid black\"})\r\n    const [click2, setClick2] = useState();\r\n\r\n    const questionAry = useSelector(state => state.questionlist)\r\n    const myName = useSelector(state => state.user.data.detail.username)\r\n    console.log(myName);\r\n\r\n    return (\r\n        <>\r\n        <div style={style.nav}>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click1} \r\n                onClick={()=>{setClick2(); setClick1({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">등록된 질문</p>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div style={{display:\"flex\",  justifyContent : \"center\"}}>\r\n                <p \r\n                style={click2}\r\n                onClick={()=>{setClick1(); setClick2({borderBottom:\"2px solid black\"})}}\r\n                className=\"Gmarket3\">답변된 질문</p>\r\n                </div>\r\n            </td>\r\n        </div>\r\n        \r\n        {click1 ?\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ? \r\n            questionAry.data.detail.map((questionInfo) =>\r\n                questionInfo.is_answered ?\r\n                    null\r\n                :\r\n                    questionInfo.user_username === myName?\r\n                    <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion=\"true\"/>\r\n                    :\r\n                    <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion=\"false\"/>\r\n            )\r\n\r\n            : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        :\r\n        <>\r\n        <Paper className=\"questionList\" elevation={0}>\r\n            {questionAry.arrived ? \r\n            questionAry.data.detail.map((questionInfo) =>\r\n                questionInfo.is_answered ?\r\n                    questionInfo.user_username === myName?\r\n                    <Question  isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion=\"true\"/>\r\n                    :       \r\n                    <Question isVoice={questionInfo.is_voice} userName={questionInfo.user_username} value={questionInfo.question} myQuestion=\"false\"/>\r\n                :\r\n                    null\r\n            )\r\n\r\n            : <p>로딩중</p>}\r\n        </Paper>\r\n        </>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionList","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloseQuestioning from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport useSelection from \"antd/lib/table/hooks/useSelection\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        maxWidth: \"42em\",\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    //   width: \"95%\",\r\n      width: \"95%\",\r\n      bottom: \"0%\",\r\n      marginBottom: \"1em\",\r\n    //   marginBottom: \"3px\",\r\n      \r\n      '& > *': {\r\n          \r\n        // margin: theme.spacing(2),\r\n        width : \"100%\",\r\n        height: theme.spacing(10),\r\n        // height: \"70px\",\r\n        borderRadius : \"15px\",\r\n      },\r\n    },\r\n  }));\r\n\r\nconst style = {\r\n    paper : {\r\n        position: \"absolute\",\r\n        bottom:\"0%\",\r\n        width: \"100%\",\r\n        height : \"100%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"20px 20px 0 0 \"\r\n    },\r\n    questionbutton : {\r\n        position: \"absolute\",\r\n        top: \"-4%\",\r\n        right: \"-2%\",\r\n    },\r\n    card : {\r\n        paddingTop:\"4px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        maxWidth:\"42em\",\r\n        borderRadius : \"15px 15px 0 0\",\r\n        backgroundColor: \"#D95032\",\r\n        height: \"1.7em\",\r\n        // height: \"20px\",\r\n        zIndex:\"8\",\r\n        // padding: \"3px\",\r\n    },\r\n    submitbtn : {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        float: \"right\",\r\n        right: \"5px\",\r\n        width: \"10%\",\r\n        top: \"2.4em\",\r\n        height: \"2.4em\",\r\n        zIndex: \"2\",\r\n    },\r\n    insert : {\r\n        position:\"absolute\",\r\n        top: \"3.2em\",\r\n        left : \"10px\",\r\n        height: \"2em\",\r\n        width:\"86%\",\r\n        borderBottom : \"1px solid\",\r\n        borderTop: \"0px\",\r\n        borderLeft : \"0\",\r\n        borderRight: \"0\",\r\n    }\r\n}\r\n\r\nconst Questioning = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ask, setAsk] = useState(\"\")\r\n    const [voice, setVoice] = useState(true)\r\n    const [queStyle, setQueStyle] = useState({opacity: \"1\"})\r\n\r\n    const myInfo = useSelector(state => state.user);\r\n\r\n\r\n\r\n    const pressEnter = (e) => {\r\n        if (e.key == 'Enter'){\r\n            postApi(false, ask);\r\n            setAsk(\"\")\r\n            props.openQuestionAlert();\r\n            props.goQueUp({transform : \"translate(0, 100%)\"});\r\n            props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n        }\r\n    }\r\n\r\n    const voiceClick = () => {\r\n        if (voice)\r\n        {\r\n            setQueStyle({opacity: \"0\", display : \"none\"}) \r\n            // setTimeout((()=>setQueStyle({display: \"none\"})),1000)\r\n        }\r\n        else\r\n            setQueStyle({opacity: \"1\"})\r\n            // setTimeout((()=>setQueStyle({display:\"flex\"})),1000)\r\n        setVoice(prevVoice => !prevVoice)\r\n    }\r\n\r\n    const postApi = async(isVoice, askValue) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              is_answered: false,\r\n              is_voice: isVoice,\r\n              question: askValue,\r\n          };\r\n          console.log(data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId + \"/question/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Paper style={style.paper} elevation={1}>\r\n            <Grid container justify=\"center\">\r\n                <div className={classes.root}>\r\n                    <Paper elevation={2} >\r\n                        <div style={style.card}>\r\n                            {\r\n                                myInfo.arrived?\r\n                                <span\r\n                                style={{marginLeft: \"10px\"}}\r\n                                className=\"BMJUA\"\r\n                                >{myInfo.data.detail.username}</span>\r\n                                :\r\n                                <span> 로딩중 </span>\r\n                            }\r\n                            <div style={{float:\"right\"}}>\r\n                                <span className=\"BMJUA\" style={{fontSize: \"1em\"}}> 텍스트로 질문하실래요? </span>\r\n                                <Checkbox\r\n                                    style={{color: \"black\", right : \"3px\", padding: \"0\"}}\r\n                                    size=\"small\"\r\n                                    inputProps={{ 'aria-label': 'checkbox with small size' }}\r\n                                    onClick={voiceClick}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div style={queStyle} className=\"QuestioningWrapper\">\r\n                            <p className=\"NanumGothic3\" style={{transform:\"translate(0, 15px)\", color: \"white\", marginLeft: \"1em\", fontSize:\"0.8em\"}}>차례가 되면 호스트가 음성 권한을 부여합니다.</p>\r\n                        </div>\r\n                        <input\r\n                        type=\"text\"\r\n                        maxLength=\"60\"\r\n                        value={ask}\r\n                        style={style.insert}\r\n                        placeholder=\"최대 글자수는 60자입니다.\"\r\n                        onChange={(e) => setAsk(e.target.value)}\r\n                        onKeyPress={pressEnter}\r\n                        />\r\n                        <div style={style.submitbtn}>\r\n                        <IconButton \r\n                            onClick={()=>{\r\n                                if (voice)\r\n                                {\r\n                                    postApi(true, \"(음성 질문입니다)\"); \r\n                                    setAsk(\"\");\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }\r\n                                else \r\n                                    postApi(false, ask); setAsk(\"\")\r\n                                    props.openQuestionAlert();\r\n                                    props.goQueUp({transform : \"translate(0, 100%)\"}); \r\n                                    props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); \r\n                                    setTimeout(()=>{props.goDark({display: \"none\"})}, 700)\r\n                                }} \r\n                            className={classes.iconButton} \r\n                            aria-label=\"send\">\r\n                            <SendIcon/>\r\n                        </IconButton>\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </Grid>\r\n        <IconButton style={style.questionbutton} onClick={()=>{props.goQueUp({transform : \"translate(0, 100%)\"}); props.goDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{props.goDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n            <CloseQuestioning fontSize=\"large\" />\r\n        </IconButton>\r\n        </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questioning","import React, {useEffect} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\";\r\n\r\nimport ParticipantsButton from '@material-ui/icons/Group';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport QuestionListButton from '@material-ui/icons/FormatListBulleted';\r\nimport QuestionButton from '@material-ui/icons/ContactSupport';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { SportsRugbySharp } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n    border: \"1px solid rgba(255, 255, 255, 0.5)\",\r\n    boxShadow: \"none\",\r\n    width: \"100%\",\r\n    height: \"2.5em\",\r\n  },\r\n  root2: {\r\n    padding: '0 0 0 10px',\r\n    margin : \"0\",\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n    boxShadow: \"none\",\r\n    Width : \"7em\",\r\n    height: \"2.5em\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    // backgroundColor: \"#D95032\",\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    backgroundColor: \"white\",\r\n    padding: \"8.5px\",\r\n  },\r\n  iconButton2: {\r\n    backgroundColor: \"#D95032\",\r\n    padding: \"8.5px\",\r\n  },\r\n  divider: {\r\n    height: 35,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedInputBase(props) {\r\n\r\n    const dispatch = useDispatch();\r\n   const classes = useStyles();\r\n  const pressEnter = (e) => {\r\n      if (e.key == 'Enter'){\r\n          props.goMessageSend();\r\n      }\r\n  }\r\n  return (\r\n      <>\r\n    <Paper className={classes.root}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"채팅을 입력하세요\"\r\n        value={props.message}\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n        onChange={(e) => props.goSetMessage(e.target.value)}\r\n        onKeyPress={pressEnter}\r\n      />\r\n    </Paper>\r\n    <Paper className={classes.root2}>\r\n    <IconButton onClick={props.goMessageSend} className={classes.iconButton} aria-label=\"send\">\r\n        <SendIcon/>\r\n      </IconButton>\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n      {props.isHost?\r\n        <IconButton className={classes.iconButton} aria-label=\"participants\"  onClick={()=>{dispatch(getEnteredSession(props.channelNum)); props.goUserUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}}>\r\n         <ParticipantsButton/>\r\n        </IconButton>\r\n      :\r\n      <IconButton onClick={()=>{props.goQueUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton} aria-label=\"question\">\r\n        <QuestionButton/>\r\n      </IconButton>\r\n      }\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n      <IconButton onClick={()=>{console.log(\"press button\"); props.goListUp(); props.goDark({display: \"block\", animation: \"godark 0.7s\"})}} className={classes.iconButton2} aria-label=\"question_list\">\r\n        <QuestionListButton/>\r\n      </IconButton>\r\n    </Paper>\r\n    </>\r\n  );\r\n}","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Comment, Tooltip } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Message = memo(props => {\r\n  const { message: { sender, sent_timestamp, text } } = props;\r\n\r\n\r\n  return (\r\n    // <Comment\r\n    //   style={{ paddingBottom: 0 }}\r\n    //   content={<>\r\n    //   <span \r\n    //   style={{display:\"inline-block\", width: \"6em\"}}>{sender}\r\n    //   </span>\r\n    //   <span style={{wordBreak: \"break-all\" , textAlign: 'left' }}>{text}</span>\r\n    //   </>}\r\n    // />\r\n    <div style={{display:\"flex\", width: \"100%\"}}>\r\n        <div style={{color: \"rgba(255,255,255,0.5)\", display:\"flex\", width: \"7em\", margin: \"0 1em 15px 0\"}}>\r\n            {sender}\r\n        </div>\r\n        <div style={{position:\"relative\", width: \"100%\", maxWidth : \"37em\", display:\"flex\", wordBreak: \"break-all\" , textAlign: 'left' }}>\r\n         {text}\r\n        </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Empty, Card } from 'antd';\r\n\r\nconst EmptyScreen = props => {\r\n  return (\r\n    <Card className='empty-screen-container' style={props.containerStyle}>\r\n      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={props.description} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nEmptyScreen.propTypes = {\r\n  description: PropTypes.string,\r\n  containerStyle: PropTypes.object\r\n}\r\n\r\nexport default EmptyScreen;","import React, { useRef, useState, useEffect, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, PageHeader, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\nimport MessageInput from './MessageInput';\r\nimport EmptyScreen from './EmptyScreen';\r\nimport Spinner from './Spinner';\r\nimport { onRoomMessagesRead } from '../../../actions/MessagesActions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport InsertField from \"../InsertField\"\r\nimport \"../../../styles/style.css\"\r\nimport { useCacheErrors } from 'antd/lib/form/util';\r\n// import List from '@material-ui/core/List';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst windowPadding = 325;\r\n\r\nconst style = {\r\n    InsertfieldWrapper: {\r\n        position: \"fixed\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        justifyContainer : \"center\",\r\n        height : \"4.5em\",\r\n        bottom:\"0%\",\r\n        width: \"90%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"43em\",\r\n        zIndex:\"8\",\r\n    },\r\n    Insertfield:{\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        left : \"0%\",\r\n        width: \"100%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        maxWidth: \"44em\",\r\n        zIndex:\"8\",\r\n    },\r\n    top : {\r\n        position : \"absolute\",\r\n        top : \"25%\",\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Chat = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let currentUrl = window.location.href;\r\n    console.log(\"Chat Url : \", currentUrl);\r\n    const params1 = currentUrl.split('?')\r\n    const params2 = params1[1].split('&')\r\n    const params3 = params2[1].split('=')\r\n    const roomId = params3[1]\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        let element = document.querySelector(\".chatting\");\r\n        if (element) {\r\n\r\n          element.scrollTop = element.scrollHeight ? element.scrollHeight : 0;\r\n        }\r\n        console.log(\"Here\");\r\n    }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [roomSocket, setRoomSocket] = useState(null);\r\n\r\n  // const roomId = \"c9c9dd9bb\";\r\n\r\n  // const { room, messages: { messages, loading: loadingChat }, username, windowHeight, onBack, onRoomMessagesRead } = props;\r\n  const { messages: { messages, loading: loadingChat }, username,  onRoomMessagesRead } = props;\r\n  const { room, windowHeight, onBack} = props;\r\n  \r\n\r\n  const user = useSelector(state => state.user.data.detail);\r\n\r\n  useEffect(() => {\r\n      roomSocket && roomSocket.close();\r\n      setRoomSocket(onRoomMessagesRead(roomId)); //세션에 관한 정보 중에서 session.id를 여기 바로 넣으면 채팅방이 구분됨\r\n    }, [room]);\r\n    \r\n    const onMessageSend = () => {\r\n      if (roomSocket) {\r\n        roomSocket.send(JSON.stringify({ command: 'new_message', data: { text: message, sender: user.username } }));\r\n        setMessage('');\r\n        setTimeout(scrollToBottom,300);\r\n      }\r\n    }\r\n    setTimeout(scrollToBottom,500);  // 채팅 올라오는 속도 조절은 타임아웃으로.. \r\n\r\n    const handleInfiniteOnLoad = () => {\r\n        setLoading(true);\r\n        messages.length > 14 && setLoading(false) && setHasMore(false);\r\n    };\r\n    \r\n  const renderList = () => {\r\n    if (loadingChat) return  (\r\n        <>\r\n    <Grid style={style.top} container justify=\"center\">\r\n        <div  className={classes.root}>\r\n            <CircularProgress />\r\n        </div>\r\n    </Grid>\r\n        </>\r\n    )\r\n\r\n    if (!messages.length) return <EmptyScreen description='' containerStyle={{ borderWidth: 0 }} />;\r\n\r\n    return (\r\n        <>\r\n      <div className=\"chatting\">\r\n        <List\r\n          className=\"comment-list NanumGothic3\"\r\n          itemLayout=\"horizontal\"\r\n          dataSource={messages}\r\n          renderItem={message => <Message key={message.id.toString()} message={message} />}\r\n        >\r\n        {/* <List>\r\n            {messages.map((message => <Message key={message.id.toString()} message={message} />))} */}\r\n        </List>\r\n          {loading && hasMore && <div className=\"loading-container\"><Spin /></div>}\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nreturn (\r\n    <React.Fragment>\r\n      \r\n      <div style={{ height: windowHeight - windowPadding }}>\r\n        {renderList()}\r\n\r\n      </div >\r\n        <Grid container justify=\"center\">\r\n\r\n        <div style={style.InsertfieldWrapper}>\r\n            <div style={style.Insertfield}>\r\n                    <InsertField\r\n                    holeId={props.holeId}\r\n                    channelNum={props.channelNum} \r\n                    isHost={props.isHost} \r\n                    message={message} \r\n                    goSetMessage={setMessage} \r\n                    goMessageSend={onMessageSend} \r\n                    goListUp = {props.goListUp} \r\n                    goDark={props.goDark} \r\n                    goQueUp={props.goQueUp}\r\n                    goUserUp={props.goUserUp}/>\r\n            </div>\r\n        </div>\r\n        </Grid>\r\n      {/* <MessageInput message={message} onChange={e => setMessage(e.target.value)} onSendClick={onMessageSend} /> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nChat.propTypes = {\r\n  room: PropTypes.object.isRequired,\r\n  messages: PropTypes.object.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  windowHeight: PropTypes.number,\r\n  onBack: PropTypes.func,\r\n  onRoomMessagesRead: PropTypes.func.isRequired\r\n}\r\n\r\n//상태를 연결시키는 함수는 mapStateToTrops로 만들어서 connect에 전달해준다.\r\n//Store 안의 state 값을 props로 연결해준다.\r\nconst mapStateToProps = state => {\r\n  const { messages } = state;\r\n  const { username } = state.user;\r\n  return { username, messages };\r\n}\r\n\r\n// chat 컴포넌트를 어플리케이션의 데이터 레이어와 묶는 역할을 한다.\r\n// 함수가 여러개였다면 mapDispatchProps로 연결해줘야했을듯\r\nexport default connect(mapStateToProps, { onRoomMessagesRead })(Chat);","import ReconnectingWebSocket from 'reconnecting-websocket';\r\nimport { WS_ENDPOINT } from '../environment';\r\nimport { ON_MESSAGES_VALUE_CHANGE, ON_MESSAGES_READING, ON_MESSAGES_READ } from './types';\r\n\r\n//export const onMessagesValueChange = data => ( console.log('data',data));\r\nexport const onMessagesValueChange = data => ({ type: ON_MESSAGES_VALUE_CHANGE, payload: data });\r\n\r\nexport const onRoomMessagesRead = holeId => dispatch => {\r\n  dispatch({ type: ON_MESSAGES_READING });\r\n\r\n  const socket = new ReconnectingWebSocket(`${WS_ENDPOINT()}/hole/${holeId}/`);\r\n  socket.debug = true;\r\n  socket.timeoutInterval = 4400;\r\n\r\n  // const socket = new WebSocket(`${WS_ENDPOINT()}/hole/${holeId}`);\r\n  console.log(\"-----------socket--------------\",socket);\r\n\r\n  socket.onopen = event => console.log('WebSocket Connected');\r\n  socket.onmessage = event => dispatch({ type: ON_MESSAGES_READ, payload: { messages: JSON.parse(event.data) } });\r\n\r\n  socket.onclose = event => console.log('WebSocket Disconnected');\r\n\r\n  return socket;\r\n}","export const WS_ENDPOINT = () => {\r\n  const location = window.location;\r\n\r\n  let protocol = 'ws://';\r\n\r\n  if (location.protocol === 'https:') {\r\n    protocol = 'wss://';\r\n  }\r\n\r\n  const endpoint = protocol + 'www.ask2live.me/ws';\r\n\r\n  return endpoint;\r\n}","import { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function MediaPlayer(props) {\r\n\r\n  const { audioTrack, client } = props;\r\n\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  useEffect(() => {\r\n\r\n    if (audioTrack && client.remoteUsers.length === 0) {\r\n      console.log(\"여기는 호스트\");\r\n\r\n      audioTrack.setEnabled(true);\r\n\r\n      return () => {\r\n        audioTrack.setEnabled(false);\r\n        audioTrack.stop();\r\n      };\r\n    }\r\n\r\n    else if(audioTrack && client.remoteUsers.length != 0) {\r\n      console.log(\"여기는 게스트\");\r\n\r\n      audioTrack.play();\r\n\r\n      return () => {\r\n        audioTrack.stop();\r\n      };\r\n    }\r\n  }, [audioTrack]);\r\n  return (\r\n    <div className=\"video-player\">\r\n      {/* {JSON.stringify(videoTrack.play)} */}\r\n    </div>\r\n  );\r\n}\r\n","import { useLocation, withRouter } from \"react-router-dom\";\r\nimport React, { useCallback } from \"react\";\r\nimport MediaPlayer from \"./MediaPlayer\";\r\n\r\n// import \"../../Call.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst PlayerWrapper = ({\r\n  client,\r\n  rtmClient,\r\n  host,\r\n  joinState,\r\n  localAudioTrack,\r\n  remoteUsers,\r\n  channelNum,\r\n}) => {\r\n  // const [members, setMembers] = useState([])\r\n\r\n  const sendP2PMessage = useCallback((recipientUID, peerMsg) => {\r\n    console.log(\"sendP2PMessage\");\r\n\r\n    // An RtmMessage object.\r\n    const remoteUID = String(recipientUID);\r\n\r\n    // p2p message\r\n    console.log(\"����Ʈ UID: \", remoteUID);\r\n    console.log(\"����Ʈ msg: \", peerMsg);\r\n\r\n    if (peerMsg) {\r\n      rtmClient\r\n        .sendMessageToPeer({ text: peerMsg }, remoteUID)\r\n        .then((sendResult) => {\r\n          if (sendResult.hasPeerReceived) {\r\n            console.log(\"peer recieved \" + peerMsg + \" successfully\");\r\n\r\n          } else {\r\n            console.log(\"peer did not recieved \" + peerMsg + \" unlog\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"RTM message recieved err\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  // setLiveIndex(sessionDummy.findIndex(e => e.channelNum === parseInt(channelNum)))\r\n  // const liveIndex = sessionDummy.findIndex(e => e.channelNum === parseInt(channelNum));\r\n  // const Live = sessionDummy.filter(session => String(session.channelNum) === channelNum);\r\n  // liveIndex != -1 ? console.log(\"���̺�����: \", sessionDummy[liveIndex].liveUsers) : console.log(\"sorry\");\r\n\r\n  // const location = useLocation()\r\n\r\n  // const isChannel = (element) => {\r\n  //     if(element.channelNum === channelNum){\r\n  //         return true;\r\n  //     }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"player-container\">\r\n        {/* <div> {client.uid} </div> */}\r\n        <div className=\"local-player-wrapper\">\r\n          {/* <p className=\"local-player-text\">\r\n            {localAudioTrack && `localTrack`}\r\n            {joinState && localAudioTrack ? `(${client.uid})` : \"\"}\r\n            {console.log(\"Ŭ���̾�Ʈ:\", client)}\r\n          </p> */}\r\n\r\n          <MediaPlayer\r\n            audioTrack={localAudioTrack}\r\n            client={client}\r\n          />\r\n        </div>\r\n        <div className=\"remotePlayers\">\r\n          {remoteUsers.map((user) => (\r\n            <div className=\"remote-player-wrapper\" key={user.uid}>\r\n              {/* <p>Remote Player + {user.uid} </p>\r\n              <p className=\"remote-player-text\">{`remoteVideo(${user.uid})`}</p>\r\n\r\n              <button onClick={() => sendP2PMessage(user.uid, \"host\")}>\r\n                {\" \"}\r\n                host �����{\" \"}\r\n              </button>\r\n              <button onClick={() => sendP2PMessage(user.uid, \"audience\")}>\r\n                {\" \"}\r\n                audience �����{\" \"}\r\n              </button> */}\r\n\r\n              <MediaPlayer audioTrack={user.audioTrack} client={client} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* <div>\r\n                {members.map((i) => (\r\n                    <div key={i}>\r\n                        {i}\r\n                    </div>\r\n                ))\r\n                }\r\n            </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlayerWrapper)","import React, {useState, useEffect, useRef, useCallback} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport getEnteredSession from \"../../actions/EnteredSessionActions\"\r\nimport getQuestionList from \"../../actions/QuestionListActions\";\r\n\r\nimport ParticipantList from \"./ParticipantList\";\r\nimport CurrentQuestion from \"./CurrentQuestion\";\r\n\r\n\r\nimport QuestionSwiper from \"./QuestionSwiper\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport Questioning from \"./Questioning\";\r\nimport InsertField from \"./InsertField\";\r\nimport Chat from \"./chatting/Chat\";\r\nimport Question from \"./Question\";\r\nimport Avatar from \"../Avatar\";\r\nimport \"../../index.css\"\r\nimport PlayerWrapper from \"./agora/PlayerWrapper\";\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseListButton from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport \"../../styles/style.css\"\r\n\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { CenterFocusStrong, FilterNone, NoEncryption } from '@material-ui/icons';\r\n\r\n//^ =============================================================\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\nimport useAgora from \"./agora/useAgora\";\r\n//^ =============================================================\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        marginRight: theme.spacing(3),\r\n        width: 30,\r\n        height: 30,\r\n      top: 13,\r\n      borderRadius: \"20px\",\r\n      border: `3px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n  }))(Badge);\r\n\r\nconst style = {\r\n    livewrapper: {\r\n        display: \"inline-block\",\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n        height: \"100%\",\r\n        // backgroundColor: \"rgb(255, 239, 196)\"\r\n    },\r\n\r\n    livesession: {\r\n        position:\"absolute\",\r\n        maxWidth: \"45em\",\r\n        minHeight: \"35em\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        margin: \"auto\",\r\n        backgroundColor: \"#2F3041\",\r\n    },\r\n\r\n    session_top: {\r\n        position: \"relative\",\r\n        minHeight: \"3em\",\r\n        height: \"5%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    \r\n    session_mid: {\r\n        position: \"relative\",\r\n        height: \"55%\",\r\n        width: \"100%\",\r\n    },\r\n    \r\n    session_bottom: {\r\n        position: \"relative\",\r\n        borderRadius: \"30px 30px 0px 0px\",\r\n        bottom: \"0%\",\r\n        height: \" 40%\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#20202C\",\r\n        zIndex:\"0\",\r\n        // backgroundColor: \"rgb(255, 248, 225)\"\r\n    },\r\n    table: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n\r\n    td1: {\r\n        width: \"60%\",\r\n        fontSize: \"1em\",\r\n        padding: \"10px 0 0 10px\",\r\n        color: \"rgba(255,255,255,0.8)\"\r\n    },\r\n\r\n    td2: {\r\n        width: \"5%\",\r\n        padding: \"0 0 0 10px\",\r\n    },\r\n    lavel : {\r\n        marginLeft: \"-12px\",\r\n        marginRight: \"-0.7em\",\r\n    },\r\n    font_size : {\r\n        fontSize : \"1rem\"\r\n    },\r\n    checkIcon : {\r\n        height: \"0.6em\"\r\n    },\r\n\r\n    tablecell: {\r\n        display: \"table-cell\",\r\n        verticalAlign: \"middle\",\r\n        height: \"100%\",\r\n    },\r\n    follow: {\r\n        marginRight: \"3px\",\r\n        float: \"right\",\r\n    },\r\n\r\n    question: {\r\n        width : \"90%\",\r\n    },\r\n\r\n    listbutton : {\r\n        position: \"absolute\",\r\n        top: \"-0.5em\",\r\n    },\r\n\r\n    alert : {\r\n        boxShadow: \"2px 2px 2px 2px #D95032\",    // 섀도우 색\r\n        border: \"solid 1px white\",    // 테두리 색\r\n        backgroundColor:\"black\"      // 배경색\r\n    }\r\n   \r\n}\r\n\r\n\r\n//^ =============================================================\r\nconst appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\nconst client = AgoraRTC.createClient({ codec: \"vp8\", mode: \"rtc\" });\r\nconst rtmClient = AgoraRTM.createInstance(appid);\r\n\r\n\r\n//^ =============================================================\r\n\r\nconst LiveSession = (props) => {\r\n    const history = useHistory();\r\n    console.log(\"!!!!!!!!!!!!!!!!!\", props);\r\n    // console.log(\"history state: \", history.state)\r\n    // history.pushState(null, null, '');\r\n    // console.log(\"history state: \", history.state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const hostPostApi = async(hostUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              channel_num : props.channelNum,\r\n              host_uid : hostUid,\r\n          };\r\n          console.log(\"LiveSession Host Post :\", data);\r\n          const res = await axios.post(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/create\",\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n    \r\n    const audiencePutApi = async(audienceUid) =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {\r\n              uid : audienceUid,\r\n          };\r\n          console.log(\"LiveSession Audience Post :\", data);\r\n          const res = await axios.put(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/join/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n    const leavePatchApi = async() =>  {\r\n        const headers = {\r\n            'Authorization': 'Token ' + localStorage.token\r\n          }\r\n          const data = {};\r\n          const res = await axios.patch(\r\n            \"https://www.ask2live.me/api/hole/\"+props.holeId+\"/live/leave/\"+props.channelNum,\r\n            data,\r\n            {headers:headers}\r\n          );\r\n          console.log(res.data);\r\n    }\r\n\r\n\r\n    const [listup, setListUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [queUp, setQueUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [userUp, setUserUp] = useState({transform : \"translate(0, 100%)\"})\r\n    const [dark, setDark] = useState({display:\"none\"})\r\n\r\n    const [room, setRoom] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [questionAlert, setOuestionAlert] = useState(false);\r\n\r\n    const openQuestionAlert = () => {\r\n        setOuestionAlert(true);\r\n      };\r\n    \r\n    const closeQuestionAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n        setOuestionAlert(false);\r\n    };\r\n    // const history = useHistory()\r\n    \r\n    let partiNum = \"로딩중\";\r\n    const holeInfo = useSelector(state => state.enteredSession, [partiNum])\r\n    const hostImage = holeInfo.arrived ? \r\n            holeInfo.data.detail.livehole.host_profile_image_url\r\n            : \"/static/live_png\";\r\n    partiNum = holeInfo.arrived ? \r\n         holeInfo.data.detail.participant.length + \"명\"\r\n        : \"로딩중\"\r\n\r\n    // const [hostExit, setHostExit] = useState(false);\r\n    // 여는 함수, onClick에 해당 함수 넣으면 클릭시 등장\r\n    const handleClick = () => {\r\n        // setHostExit(true);       \r\n        setOpen(true);\r\n    };\r\n\r\n\r\n    // 닫는 함수. 이미 아래에 자동적으로 사용되고 있음.\r\n    const handleClose = (event, reason) => { \r\n        history.push('/main');\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    //^ =============================================================\r\n    let rtmChannel;\r\n    const [channel, setChannel] = useState();\r\n\r\n    const {\r\n        localAudioTrack,\r\n        leave,\r\n        join,\r\n        joinState,\r\n        remoteUsers,\r\n        authority,\r\n    } = useAgora(client);\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n        const liveInter = setInterval(()=>{\r\n            dispatch(getEnteredSession(props.channelNum))\r\n            dispatch(getQuestionList(props.holeId))\r\n        }, 5000);\r\n        rtmChannel = rtmClient.createChannel(props.channelNum);\r\n        join(props.channelNum, null, rtmClient, rtmChannel, props.isHost);\r\n        rtmChannel.on('ChannelMessage', (message, memberId) => {\r\n            // Your code.\r\n            console.log(`Message ${message}, from ${memberId}`);\r\n            // setHostExit(1);\r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            clearInterval(liveInter);\r\n            handleClick();\r\n        });\r\n        if (props.isHost)\r\n            setTimeout(()=>{hostPostApi(client.uid)}, 4000);\r\n        else\r\n            setTimeout(()=>{audiencePutApi(client.uid)}, 4000);\r\n        \r\n        \r\n        if (props.isHost) return () => {\r\n            const unblock = history.block('정말 떠나시겠습니까?');\r\n            console.log(\"호스트여부: \", props.isHost)\r\n            rtmChannel.sendMessage({ text: \"hostOut\" }).then(() => {\r\n                // Your code for handling the event when the channel message is successfully sent.\r\n                    console.log('host is leaving')\r\n                }).catch(error => {\r\n                // Your code for handling the event when the channel message fails to be sent.\r\n                    console.log('host leaving error')\r\n                });\r\n            \r\n            rtmClient.logout();\r\n            leave();\r\n            leavePatchApi();\r\n            clearInterval(liveInter)\r\n            unblock();\r\n            \r\n            history.replace('/main');\r\n            // window.location.reload('/main');\r\n            \r\n        }\r\n        \r\n        \r\n        return () => {\r\n            console.log(\"호스트여부: \", props.isHost)\r\n            rtmClient.logout();\r\n            leave();\r\n            // leavePatchApi();\r\n            clearInterval(liveInter)\r\n            \r\n            // history.replace('/main');\r\n            // window.location.reload('/main');\r\n        }\r\n    }, [history])\r\n\r\n    // ^ =============================================================\r\n\r\n    return (\r\n        <>\r\n        <div style={style.livewrapper}>\r\n            <div style={style.livesession}>\r\n                <div style={style.session_top}>\r\n                    <table style={style.table}>\r\n                        <tr>\r\n                            <td  colspan=\"2\" className=\"NanumGothic4\" style={style.td1} >{props.holeTitle}</td>\r\n                            <td  rowspan=\"2\">\r\n                                <div style={style.follow}>\r\n                                    <CloseIcon\r\n                                    style={{color: \"white\"}}\r\n                                    onClick={()=>{history.push('/')}}\r\n                                    />  \r\n                                </div>\r\n                            </td>      \r\n                        </tr>\r\n                        <tr>\r\n                            <td style={style.td2}>\r\n                                <img className=\"live_img\" src=\"/static/live.png\"/>\r\n                            </td>\r\n                            <td style={{color:\"rgba(255, 255, 255, 0.6)\"}}className=\"NotoSans3\">{partiNum}</td>\r\n                        </tr>\r\n\r\n                    </table>  \r\n                </div>\r\n                <div style={style.session_mid}>\r\n                    <div style={{position:\"relative\", height:\"40%\"}}>\r\n                        <div className=\"horizentalmid\" >\r\n                            <div className=\"verticalmid\">\r\n                                <tr>\r\n                                <StyledBadge badgeContent={<MicIcon/>} color=\"error\">\r\n                                    <Avatar hostName={props.hostName} imageLink={props.hostImage}/>\r\n                                </StyledBadge>\r\n                                </tr>\r\n                                <tr className=\"centered\">\r\n                                    <span style={{color: \"rgba(255,255,255,0.8)\"}}className=\"BMDOHYEON\">{props.hostName}</span>\r\n                                </tr>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{position:\"relative\", height:\"50%\", display:\"flex\", alignItems: \"center\"}}>\r\n                        {/* <Grid container justify=\"center\"> */}\r\n                            <div>\r\n                                 <CurrentQuestion \r\n                                 holeId={props.holeId} \r\n                                 isHost={props.isHost}\r\n                                 client={client}\r\n                                 rtmClient={rtmClient}\r\n                                 host={authority}\r\n                                 localAudioTrack={localAudioTrack}\r\n                                 remoteUsers={remoteUsers}\r\n                                 channelNum={props.channelNum}\r\n                                 />\r\n                            </div>\r\n                        {/* </Grid>  */}\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={style.session_bottom}>\r\n                    <div className=\"chattingWrapper\"/>\r\n                    <Chat holeId={props.holeId} isHost={props.isHost} channelNum={props.channelNum} goQueUp={setQueUp} goListUp = {setListUp} goUserUp = {setUserUp} goDark={setDark} room={room} windowHeight=\"1000px\" onBack={()=>setRoom(null)}/>                   \r\n                </div>\r\n            \r\n           \r\n        </div>\r\n        {props.isHost?\r\n        <div style={userUp} className=\"hiddenlist\">\r\n            <ParticipantList holeId={props.holeId} channelNum={props.channelNum} goUserUp = {setUserUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setUserUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n        :   \r\n        <div style={queUp} className=\"hiddenQue\">\r\n            <p style={{color: \"rgba(0,0,0,0.7)\", fontSize: \"1em\", position:\"absolute\", left:\"5%\", bottom:\"6em\", zIndex:\"1\"}}\r\n            className=\"BMDOHYEON\"\r\n            > 질문을 등록하고 호스트와 대화하세요!</p>\r\n            <Questioning openQuestionAlert={openQuestionAlert} holeId={props.holeId} goQueUp = {setQueUp} goDark={setDark}/>\r\n        </div>\r\n        }\r\n        <div style={listup} className=\"hiddenlist\">\r\n            <QuestionList holeId={props.channelNum} goListUp = {setListUp} goDark={setDark}/>\r\n            <IconButton style={style.listbutton} onClick={()=>{setListUp({transform : \"translate(0, 100%)\"}); setDark({opacity: \"0\", animation: \"golight 0.7s\"}); setTimeout(()=>{setDark({display: \"none\"})}, 700)}} aria-label=\"question_list\">\r\n                <CloseListButton fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n\r\n        <div style={dark} className=\"layerfordark\"></div>\r\n\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} style={style.alert} severity=\"success\">\r\n            <span style={{color:\"white\"}}>호스트 {props.hostName}가<br/>세션을 종료하였습니다</span>\r\n        </Alert>\r\n        </Snackbar>\r\n\r\n        <div className=\"host-player\">\r\n            <PlayerWrapper\r\n                client={client}\r\n                rtmClient={rtmClient}\r\n                host={authority}\r\n                localAudioTrack={localAudioTrack}\r\n                remoteUsers={remoteUsers}\r\n                channelNum={props.channelNum}\r\n            />\r\n        </div>\r\n        <Snackbar style={{position: \"fixed\", bottom:\"50%\"}} open={questionAlert} autoHideDuration={6000} onClose={closeQuestionAlert}>\r\n            <Alert onClose={closeQuestionAlert} style={{ boxShadow: \"2px 2px 2px 2px #D95032\", border: \"solid 1px white\", backgroundColor:\"black\"}} severity=\"success\">\r\n                <span style={{ color:\"white\"}}>질문 등록 성공!</span>\r\n            </Alert>\r\n        </Snackbar>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default LiveSession","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport AgoraRTC, {\r\n  MicrophoneAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig,\r\n} from \"agora-rtc-sdk-ng\";\r\nimport AgoraRTM from \"agora-rtm-sdk\";\r\n\r\nimport { AirlineSeatReclineExtraOutlined } from \"@material-ui/icons\";\r\n\r\nexport default function useAgora(client) {\r\n  console.log(\"useAgora\");\r\n  const appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\n\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(\"\");\r\n  const [joinState, setJoinState] = useState(false);\r\n  const [remoteUsers, setRemoteUsers] = useState([]);\r\n  const authority = useSelector((state) => state.Authorize);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  async function createLocalTracks() {\r\n    const microphoneTrack = await AgoraRTC.createMicrophoneAudioTrack(\r\n      MicrophoneAudioTrackInitConfig\r\n    );\r\n    setLocalAudioTrack(microphoneTrack);\r\n    return microphoneTrack;\r\n  }\r\n  \r\n  async function join(channel, token, rtmClient, rtmChannel, isHost) {\r\n    console.log(\"join\");\r\n\r\n    if (!client) return;\r\n    \r\n    const microphoneTrack = await createLocalTracks();\r\n    await client.join(appid, channel, token);    \r\n    \r\n    // rtm 클라이언트 로그인\r\n    await rtmClient\r\n    .login({ token: null, uid: String(client.uid) })\r\n        .then(() => {\r\n          console.log(\"AgoraRTM client login success !!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"AgoraRTM client login failure !!\", err);\r\n        });\r\n        \r\n    // rtm 클라이언트 메시지 받기 모드\r\n    await rtmClient.on(\"ConnectionStateChanged\", (newState, reason) => {\r\n      console.log(\r\n        \"on connection state changed to \" + newState + \" reason: \" + reason\r\n        );\r\n      });\r\n    \r\n    //rtm 메시지채널 join\r\n    await rtmChannel.join();\r\n\r\n      // event listener for receiving a peer-to-peer message.\r\n    await rtmClient.on(\"MessageFromPeer\", (msg, peerId) => {\r\n        // text: text of the received message; peerId: User ID of the sender.\r\n        console.log(\r\n          \"AgoraRTM Peer Msg: from user \" + peerId + \" recieved: \\n\" + msg.text\r\n        );\r\n\r\n        // check if mute or leave command\r\n        if (msg.text === \"host\") {\r\n          console.log(\"make host\");\r\n\r\n          client.publish(microphoneTrack);\r\n          localAudioTrack.stop();\r\n          localAudioTrack.setEnabled(true);\r\n\r\n        } else if (msg.text === \"audience\") {\r\n          console.log(\"make audience\");\r\n          \r\n          client.unpublish();\r\n          localAudioTrack.play();\r\n\r\n        } else if (msg.text === \"hostOut\") {\r\n          console.log(\"[Host Out] the session is closed\");\r\n          leave();\r\n\r\n        } else {\r\n          console.log(\"[Warning] unknown message:\", msg);\r\n        }\r\n        \r\n        \r\n      });\r\n\r\n    if (isHost) {\r\n      console.log(\"client Role in JOIN \");\r\n      await dispatch({type: \"superHost\", payload: \"host\"});\r\n      await client.publish(microphoneTrack);\r\n\r\n    } else {\r\n      console.log(\"audience Role in JOIN\");\r\n      await dispatch({type: \"audience\"});\r\n    }\r\n\r\n    console.log(\"end useAgora\");\r\n    setJoinState(true);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n    // if (localVideoTrack) {\r\n    //   localVideoTrack.stop();\r\n    //   localVideoTrack.close();\r\n    // }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    //! leave하면 이상해지더라..\r\n    // await rtmChannel.leave();\r\n    await client.leave();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n    \r\n    const handleUserPublished = async (user, mediaType) => {\r\n      await client.subscribe(user, mediaType);\r\n\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserUnpublished = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n    \r\n    const handleUserJoined = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserLeft = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    client.on(\"user-published\", handleUserPublished);\r\n    client.on(\"user-unpublished\", handleUserUnpublished);\r\n    client.on(\"user-joined\", handleUserJoined);\r\n    client.on(\"user-left\", handleUserLeft);\r\n\r\n    return () => {\r\n      client.off(\"user-published\", handleUserPublished);\r\n      client.off(\"user-unpublished\", handleUserUnpublished);\r\n      client.off(\"user-joined\", handleUserJoined);\r\n      client.off(\"user-left\", handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    joinState,\r\n    leave,\r\n    join,\r\n    remoteUsers,\r\n    authority,\r\n  };\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useHistory, withRouter} from \"react-router-dom\"\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width : \"94%\",\r\n    maxWidth: \"23em\",\r\n    height: \"11em\"\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n},\r\ncover: {\r\n    width: \"20px\",\r\n    borderLeft: \"solid rgba(0, 0, 0, 0.3) 1px\"\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  top : {\r\n      position : \"fixed\",\r\n      top: \"30%\"\r\n  }\r\n}));\r\n\r\nconst JoinCard = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [mike, setMike] = useState(0);\r\n\r\n  const getMike = () => {\r\n      navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(function(stream) {\r\n        console.log('You let me use your mic!')\r\n        setMike(1);\r\n      })\r\n      .catch(function(err) {\r\n        history.push('/');\r\n      });\r\n  }\r\n\r\n  return (\r\n<Grid className={classes.top} container justify=\"center\">\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            {props.hostName}\r\n          </Typography>\r\n          {props.isHost ?  \r\n          <p className=\"NanumGothic3\">\r\n            {props.hostName}님의 라이브를 켭니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p> <button onClick={getMike}>허용</button></>}\r\n          </p>    \r\n            :\r\n          <p className=\"NanumGothic3\">\r\n            {props.hostName}님의 방에 입장합니다\r\n            {mike? <p>마이크 설정 완료</p> : <><p>마이크를 허용해주세요.</p> <button onClick={getMike}>허용</button></>}\r\n          </p>\r\n            }\r\n        </CardContent>\r\n        <div>\r\n          {console.log(props.isHost)}\r\n            {props.isHost ?\r\n                mike?\r\n                    <button \r\n                    onClick={()=>{\r\n                        history.push({\r\n                            pathname : \"/session/live\",\r\n                            search: \"?holeId=\" + props.holeId + \"&channelNum=\" + props.channelNum,\r\n                            state : {\r\n                                joinPass : true,\r\n                                isHost : true,\r\n                                hostName : props.hostName,\r\n                                hostImage: props.hostImage,\r\n                            }\r\n                        })\r\n                    }}\r\n                    style={{margin:\"0 0 1em 2em\"}}\r\n                    >라이브열기</button>\r\n                :\r\n                <></>\r\n            :   \r\n                mike?\r\n                <button \r\n                style={{margin:\"0 0 1em 1em\"}}\r\n                onClick={()=>props.setJoin(1)} aria-label=\"play/pause\">\r\n                    입장\r\n                </button>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n      </div>\r\n    </Card>\r\n\r\n</Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(JoinCard)","import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport LiveSession from \"../components/liveSession/LiveSession\"\r\nimport JoinCard from \"../components/JoinCard\"\r\nimport getEnteredSession from \"../actions/EnteredSessionActions\"\r\n\r\nimport \"../styles/style.css\"\r\nimport \"../index.css\"\r\nimport { sessionDummy } from \"../dummydatas/sessionDummy\"\r\n\r\n\r\nconst LiveSessionContainer = (props) => {\r\n\r\n    console.log(\"LiveSessionContainer Props\", props.joinPass);\r\n\r\n    const [join, setJoin] = useState(props.joinPass); // ?���? ?��?��코딩\r\n\r\n    console.log(join);\r\n\r\n    // if (1) //props.isHost\r\n    //     return <LiveSession hostName={hostName} imageLink={imageLink} channelNum={channelNum} isHost={1}/>\r\n    if (!join){\r\n        console.log(\"!join\", join)\r\n        return <JoinCard holeId={props.holeId} channelNum={props.channelNum} hostName={props.hostName} hostImage={props.hostImage} setJoin={setJoin} isHost={props.isHost}/>\r\n    }else\r\n    {\r\n        console.log(\"join\",join)\r\n        return <LiveSession holeTitle={props.holeTitle} holeId={props.holeId} hostName={props.hostName} imageLink={props.hostImage} channelNum={props.channelNum} isHost={props.isHost}/>\r\n    }\r\n}\r\n\r\nexport default LiveSessionContainer","import React from \"react\";\r\nimport {useSelector} from \"react-redux\"\r\nimport JoinCard from \"./JoinCard\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\n\r\nconst ReserveToLive = (props) => {\r\n    console.log(\"Enter : ReserveToLive\")\r\n\r\n    const holeId = props.holeId\r\n    const sessions = useSelector(state => state.session.data)\r\n    let channelNumAry = []\r\n\r\n    sessions.map((session) => {\r\n        channelNumAry = [...channelNumAry, session.livehole_id];\r\n    })\r\n\r\n    let channelNum;\r\n\r\n    while (true)\r\n    {\r\n        channelNum = Math.floor(Math.random() * 10001)\r\n        if (channelNumAry.indexOf(channelNum) == -1)\r\n            break\r\n    }\r\n\r\n    console.log(\"MakeChannelNum\", channelNum);\r\n    console.log(\"ReserveToLive Props\", props);\r\n\r\n    return <LiveSessionContainer hostName={props.hostName} hostImage={props.hostImage} holeId={holeId} channelNum={channelNum} isHost={true}/>\r\n}\r\n\r\nexport default ReserveToLive","import React, {useEffect, useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport LiveSessionContainer from \"../containers/LiveSessionContainer\"\r\nimport ReserveToLive from \"../components/ReserveToLive\"\r\nimport axios from \"axios\"\r\n\r\nconst LIVE = \"live\"\r\nconst RESERVE = \"reserve\" \r\n\r\nconst SessionMatchContainer = (props) => {\r\n    const history = useHistory()\r\n    const [match, setMatch] = useState()\r\n\r\n    console.log(props);\r\n    const sessionKind = props.routerInfo.match.params.state;\r\n    let urlSearchParams = new URLSearchParams(props.routerInfo.location.search.slice(1));\r\n    console.log(props);\r\n    console.log(sessionKind);\r\n\r\n    const holeId = urlSearchParams.get(\"holeId\");\r\n\r\n    const tmp =  useSelector(state => state.user.data)\r\n    const currUser = tmp.detail? tmp.detail.username : \"\";\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n            (res) => {\r\n                if (res.data.response === \"SUCCESS\")\r\n                    setMatch(res.data.detail);\r\n            }\r\n        )\r\n    },[holeId])\r\n    \r\n    switch (sessionKind) {\r\n        case LIVE:\r\n            const channelNum = urlSearchParams.get(\"channelNum\");\r\n            if (match) \r\n            {\r\n                const isHost = (currUser === match.host_username);\r\n                return <LiveSessionContainer holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.routerInfo.location.state?.joinPass} isHost={isHost}/>\r\n            }\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n\r\n        case RESERVE:\r\n            if (match)\r\n                return <ReserveToLive holeTitle={match.title} hostName={match.host_username} hostImage={match.host_profile_image} holeId={holeId}/>\r\n            else return <p>SessionMatchContainer LOADING</p> \r\n            \r\n        default:\r\n            return (\r\n                <p>SessionMatchContainer ERROR</p>     \r\n            )\r\n        }\r\n    // switch (sessionKind) {\r\n    //     case LIVE:\r\n    //         const holeId = urlSearchParams.get(\"holeId\");\r\n    //         const channelNum = urlSearchParams.get(\"channelNum\");\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     const isHost = (currUser === res.data.detail.host_username);\r\n    //                     return <LiveSessionContainer hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId} channelNum={channelNum} joinPass={props.location.state?.joinPass} isHost={isHost}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     case RESERVE: // ���� ȣ��Ʈ�� ���İ���\r\n    //         const holeId_reserve = urlSearchParams.get(\"holeId\");\r\n    //         console.log(holeId_reserve)\r\n    //         axios.get(\"https://www.ask2live.me/api/hole/read/\"+holeId).then(\r\n    //             (res) => {\r\n    //                 if (res.data.response === \"SUCCESS\")\r\n    //                 {\r\n    //                     return <ReserveToLive hostName={res.data.detail.host_username} hostImage={res.data.detail.host_profile_image} holeId={holeId_reserve}/>\r\n    //                 }\r\n    //                 else return <p>SessionMatchContainer GET ERROR</p> \r\n    //             }\r\n    //         )\r\n    //     default:\r\n    //         return (\r\n    //             <p>SessionMatchContainer ERROR</p>     \r\n    //         )\r\n    //     }\r\n}\r\n\r\nexport default SessionMatchContainer","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, {useState, memo} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoginButton from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport \"../../styles/style.css\";\r\nimport {getUserInfo} from \"../../actions/UserActions\";\r\nimport { SignalCellularNoSimOutlined } from '@material-ui/icons';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .MuiTextField-root': {\r\n      width: '25ch',\r\n    },\r\n    '& > *': {\r\n    },\r\n  },\r\n  list: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst style = {\r\n    login : {\r\n        position : \"absolute\",\r\n        top : \"43%\",\r\n    },\r\n    loginWrapper : {\r\n        position : \"fixed\",\r\n        backgroundColor : \"white\",\r\n        width : \"100%\",\r\n        height : \"100%\",\r\n    },\r\n    loginCard : {\r\n        top : \"20%\",\r\n        // backgroundColor: \"skyblue\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"15px\",\r\n        boxShadow: \"1px 1px 2px 2px black\",\r\n        paddingTop: \"1em\",\r\n        maxWidth : \"23em\",\r\n        width : \"16em\",\r\n        height : \"20em\",\r\n        position : \"fixed\",\r\n    },\r\n    loginBtnWrapper : {\r\n        position: \"absolute\",\r\n        top : \"88%\",\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    loginBtn : {\r\n\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"15px\",\r\n        color: \"white\",\r\n    },\r\n    infoIcon : {\r\n        color :\"grey\",\r\n        position: \"absolute\",\r\n        top: \"88%\",\r\n        right: \"4%\",\r\n        cursor: \"pointer\",\r\n    },\r\n    logo : {\r\n        height: \"2.3em\",\r\n        width : \"2.3em\", \r\n        backgroundImage:\"url('/static/logo.png')\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"contain\",\r\n    }\r\n}\r\n\r\nconst LoginPage = (props) => { \r\n    const history = useHistory();\r\n    if (localStorage.token) {\r\n      history.push('/main')\r\n    }\r\n\r\n    const [loginId, setLoginId] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [openTwo, setOpenTwo] = useState(false);\r\n  \r\n    const handleClick = () => {       \r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleClickTwo = () => {       \r\n        setOpenTwo(true);\r\n    };\r\n    \r\n    const handleCloseTwo = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpenTwo(false);\r\n    };\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    /*\r\n    axios.patch(\r\n    \"https://www.ask2live.me/api/reservation/hole/\" + sessionId + \"/wish\",\r\n    data,\r\n    config,\r\n  ).then((response) => {\r\n    console.log(\"onClickWish 응답 받음\", response)\r\n  }).catch((e) => {\r\n    console.log('error',e.response)\r\n    alert(e.response.data.detail)\r\n  })\r\n    */\r\n    const LoginApi = ({loginId, loginPassword}) => {\r\n      \r\n    }\r\n\r\n    const Login = async({loginId, loginPassword}) => {\r\n      let dataToSubmit = {\r\n        username : loginId,\r\n        password : loginPassword\r\n      }\r\n      axios.post('https://www.ask2live.me/api/user/login', \r\n      dataToSubmit,\r\n      ).then((res) => {\r\n        console.log(\"res\", res)\r\n        window.localStorage.setItem('token', res.data.detail.token)\r\n        dispatch(getUserInfo(res.data.detail.token));\r\n        console.log(res);\r\n        if (props.location.before)\r\n            history.push(props.location.before)\r\n        else\r\n            history.push('/main')\r\n      }).catch(\r\n        (err) => handleClick())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={style.loginWrapper}>\r\n                <Grid container justify=\"center\">\r\n                    <div style={style.loginCard}>\r\n                        <Grid container justify=\"center\">\r\n                             <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">ASK</p>\r\n                             {/* <div style={{display:\"flex\", paddingBottom: \"4px\", alignItems: \"center\"}}>\r\n                                 <ContactSupportIcon style={{fontSize:40}}/>\r\n                            </div> */}\r\n                            <div style={style.logo}>\r\n                            </div>\r\n\r\n                            <p style={{margin : \"10px 0 10px 0\" , fontSize: \"1.8em\"}} className=\"Gmarket3\">LIVE</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginBottom:\"0\",fontSize : \"0.8em\"}}>궁금한 점을 자유롭게 물어보고</p>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\">\r\n                            <p className=\"NanumGothic3\" style={{marginTop: \"8px\", fontSize : \"0.8em\"}}>라이브로 생생한 답변을 들어보세요!</p>   \r\n                        </Grid>\r\n                        <div style={style.login}>\r\n                            <Grid container justify=\"center\">\r\n                                <TextField \r\n                                size=\"1em\"\r\n                                style= {{marginBottom : \"1em\"}}\r\n                                id=\"outlined-search\" label=\"닉네임\" type=\"search\" variant=\"outlined\"\r\n                                onChange={(event) => setLoginId(event.target.value)}\r\n                                />\r\n                                <TextField \r\n                                id=\"outlined-search\" label=\"패스워드\" type=\"password\" variant=\"outlined\"\r\n                                onChange={(event) => setLoginPassword(event.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </div>\r\n                \r\n                        <Grid container justify=\"center\">\r\n                            <div style={style.loginBtnWrapper}>\r\n                                <button style={style.loginBtn} onClick={() => Login({loginId, loginPassword})}>\r\n                                    <span style={{fontSize: \"1.2em\"}} className=\"BMJUA\">로그인</span>\r\n                                </button>\r\n                                {/* <button type=\"button\" onClick={() => loginMatch(loginId)}/> */}\r\n                            </div>\r\n                        </Grid>\r\n                        <InfoIcon \r\n                        onClick={handleClickTwo}\r\n                        style={style.infoIcon}/>\r\n                    </div>      \r\n                </Grid>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                    유효한 아이디가 아닙니다.\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar \r\n                style={{position:\"fixed\", top: \"80%\"}}\r\n                open={openTwo} autoHideDuration={6000} onClose={handleCloseTwo}>\r\n                    <Alert \r\n                    style={{backgroundColor:\"black\"}}\r\n                    onClose={handleCloseTwo} severity=\"error\">\r\n                    중복되지 않은 닉네임으로<br/>\r\n                    회원가입과 동시에 로그인이<br/>\r\n                    가능합니다!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default LoginPage","import { \r\n    ALL_USERS_GET_PENDING,\r\n    ALL_USERS_GET_SUCCESS,\r\n    ALL_USERS_GET_FAILURE \r\n} from \"./types\";\r\nimport axios from 'axios'\r\n\r\nfunction AllUsersGetApi(){\r\n    return axios.get('https://www.ask2live.me/api/user/all_read')\r\n}\r\n\r\nexport const getAllUsersInfo = () => dispatch => {\r\n    console.log('-----getAllUserInfo start-----')\r\n    dispatch({type: ALL_USERS_GET_PENDING}); // 요청이 시작되었다는 것을 알림\r\n\r\n    // 요청 시작\r\n    return AllUsersGetApi().then(\r\n        (response) => {\r\n            dispatch({ type: ALL_USERS_GET_SUCCESS, payload: response });\r\n        }\r\n    ).catch(error => {\r\n        dispatch({ type: ALL_USERS_GET_FAILURE, payload: error });\r\n    })\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default (SpecialComponent, option, adminRoute=null) => {\r\n\r\n  /* \r\n     ��)  option: null -> ������ ������ ������ ������ (home)\r\n                 true -> �α����� ������ ������ ������ ������\r\n                 false -> �α����� ������ ������ �Ұ����� ������\r\n                 \r\n        false�� �������� �α����� ������ ������ �� �ְ� ¥�� �ȵ�����, Ȥ�ó� �������� ���� �Ʒ� �ڵ� ��� �α��������� ���Եȴ�.\r\n        ���� ���� �������� �������ҵ�??\r\n  */\r\n  const AuthenticateCheck = (props) => {\r\n    const isLoggedIn = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n      if (!isLoggedIn && option) {\r\n        props.history.push({\r\n            pathname : \"/login\",\r\n            before : props.location.pathname + props.location.search  \r\n        });\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <SpecialComponent routerInfo={props}/>\r\n    )\r\n\r\n  };\r\n  return AuthenticateCheck;\r\n};","import { NativeSelect } from '@material-ui/core';\r\nimport React, {useEffect, useState, } from 'react';\r\nimport CounterContainer from './containers/CounterContainer';\r\nimport NavContainer from './containers/NavContainer'\r\nimport SessionCardContainer from './containers/SessionCardContainer';\r\nimport MypageContainer from './containers/MypageContainer';\r\nimport SessionCreateContainer from './containers/SessionCreateContainer';\r\nimport ProfileDetail from './components/mypage/ProfileDetail';\r\nimport MypageEdit from './components/mypage/MypageEdit';\r\nimport MySessionEdit from './components/mypage/MySessionEdit'\r\nimport PreQuestions from './components/sessionCard/PreQuestions';\r\n// import MainPage from \"./components/MainPage\" \r\n// import 'fontsource-roboto'\r\n\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport SessionMatchContainer from './containers/SessionMatchContainer';\r\n\r\nimport {LoginPage} from './components/onBoard'\r\n\r\nimport { connect, useSelector, useDispatch} from 'react-redux';\r\nimport Chat from \"./components/liveSession/chatting/Chat\"\r\n\r\nimport { getAllUsersInfo } from './actions/AllUsersActions'\r\nimport { getSessionInfo, getUserSessionInfo } from './actions/SessionActions'\r\nimport { getUserInfo } from './actions/UserActions'\r\nimport { bindActionCreators } from 'redux';\r\nimport Auth from \"./hoc/auth\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token')\r\n    if(token){\r\n        dispatch(getUserInfo(token));\r\n        dispatch(getUserSessionInfo(token));\r\n    }\r\n\r\n    dispatch(getSessionInfo());\r\n\r\n    dispatch(getAllUsersInfo());\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* <Route exact path=\"/hole/c9c9dd9bb\" component={Chat}/> */}\r\n        \r\n        <Route exact path=\"/main\" component={Auth(SessionCardContainer, true)}/>\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={LoginPage}/>\r\n            <Route exact path=\"/\" component={LoginPage}/>\r\n            <Route exact path=\"/session/:state\" component={Auth(SessionMatchContainer, true)}/>\r\n            {/* <Route exact path=\"/session/:state\" render={(matchProps) => <SessionMatchContainer {...matchProps}/>}/>  */}\r\n            <Route exact path=\"/createSession\" component={Auth(SessionCreateContainer, true)}/>\r\n            <Route path=\"/\" component={NavContainer}/>\r\n        </Switch>\r\n        <Route exact path=\"/preQuestions/:pk\" component={Auth(PreQuestions, true)}/>    \r\n        <Route exact path=\"/mypage\" component={Auth(MypageContainer, true)}/>\r\n        <Route exact path=\"/mypage/:nickname\" component={Auth(ProfileDetail, true)}/>\r\n        <Route exact path=\"/mypage/:nickname/edit\" component={Auth(MypageEdit, true)}/>\r\n        <Route exact path=\"/mypage/hole/:session/edit\" component={Auth(MySessionEdit, true)}/>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default App\r\n","\r\nimport {\r\n    USER_GET_PENDING,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAILURE,\r\n    GIVEUSER\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    arrived : false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case USER_GET_SUCCESS:\r\n            const userInfo = action.payload.data; // 경로 수정 필요할수도\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                arrived: true,\r\n                data: userInfo\r\n            };\r\n        case USER_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        // case GIVEUSER:\r\n        //     // state = action.user; //state 이렇게 바꿔도 되나?\r\n        //     return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","\r\nimport {\r\n    SESSION_GET_PENDING,\r\n    SESSION_GET_SUCCESS,\r\n    SESSION_GET_FAILURE,\r\n    SETLIVE,\r\n  } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: []\r\n}\r\n\r\nexport const session = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SESSION_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case SESSION_GET_SUCCESS:\r\n            const sessionInfo = action.payload.data; \r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: sessionInfo\r\n            };\r\n        case SESSION_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        case SETLIVE:\r\n            return {\r\n                ...state[state.findIndex(e => e.holeId === action.holeId)],\r\n                isLive : action.livestate,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default session;","import {\r\n  MY_SESSION_GET_PENDING,\r\n  MY_SESSION_GET_SUCCESS,\r\n  MY_SESSION_GET_FAILURE,\r\n  MY_SETLIVE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  pending: false,\r\n  error: false,\r\n  data: [],\r\n};\r\n\r\nconst mySession = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MY_SESSION_GET_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n        error: false,\r\n      };\r\n    case MY_SESSION_GET_SUCCESS:\r\n      const sessionInfo = action.payload.data;\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: sessionInfo,\r\n      };\r\n    case MY_SESSION_GET_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: true,\r\n      };\r\n    // case MY_SETLIVE:\r\n    //   return {\r\n    //     ...state[state.findIndex((e) => e.holeId === action.holeId)],\r\n    //     isLive: action.livestate,\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mySession;\r\n","import {\r\n    ON_MESSAGES_VALUE_CHANGE,\r\n    ON_MESSAGES_READING,\r\n    ON_MESSAGES_READ\r\n  } from '../actions/types';\r\n  \r\n  const INITIAL_STATE = {\r\n    messages: [],\r\n    loading: false,\r\n    error: '',\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ON_MESSAGES_VALUE_CHANGE:\r\n        return { ...state, ...action.payload };\r\n      case ON_MESSAGES_READING:\r\n        return { ...state, loading: true, error: '' };\r\n      case ON_MESSAGES_READ:\r\n        return { ...state, ...action.payload, loading: false, error: '' };\r\n      default:\r\n        return state;\r\n    }\r\n  };","const initialState = \"\";\r\n\r\nconst authorize = (state = initialState, action) => {\r\n\r\n  switch(action.type){\r\n    case \"superHost\":\r\n      console.log(\"make super HOST\", action.payload);\r\n      state = action.payload;\r\n      return state;\r\n\r\n    case \"audience\":\r\n      state = initialState;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport default authorize;","import {\r\n    QUESTIONLIST_GET_PENDING,\r\n    QUESTIONLIST_GET_SUCCESS,\r\n    QUESTIONLIST_GET_ERROR\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//���༭\r\nconst questionlist = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case QUESTIONLIST_GET_PENDING:\r\n            console.log(\"PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case QUESTIONLIST_GET_SUCCESS:\r\n            console.log(\"SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case QUESTIONLIST_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default questionlist;","import {\r\n    ENTEREDSESSION_GET_PENDING,\r\n    ENTEREDSESSION_GET_SUCCESS,\r\n    ENTEREDSESSION_GET_ERROR\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    arrived: false,\r\n    pending : false,\r\n    error: false,\r\n    data: {}\r\n};\r\n\r\n//����??����\r\nconst enteredSession = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENTEREDSESSION_GET_PENDING:\r\n            console.log(\"EnteredSession PENDING\");\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ENTEREDSESSION_GET_SUCCESS:\r\n            console.log(\"EnteredSession SUCCESS :\", action.payload.data);\r\n            return {\r\n                ...state,\r\n                arrived: true,\r\n                pending: false,\r\n                error: true,\r\n                data: action.payload.data\r\n            };\r\n        case ENTEREDSESSION_GET_ERROR:\r\n            return {\r\n                ...state,\r\n                arrived: false,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default enteredSession;","import { \r\n    ALL_USERS_GET_PENDING,\r\n    ALL_USERS_GET_SUCCESS,\r\n    ALL_USERS_GET_FAILURE \r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n// Reducer\r\nconst allUsers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ALL_USERS_GET_PENDING:\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n                error: false\r\n            };\r\n        case ALL_USERS_GET_SUCCESS:\r\n            const allUserInfo = action.payload; // 경로 수정 필요할수도\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                data: allUserInfo\r\n            };\r\n        case ALL_USERS_GET_FAILURE:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default allUsers;","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport user from './user';\r\nimport session from './session';\r\nimport mySession from './mySession';\r\nimport messages from './messages';\r\nimport authorize from './authorize';\r\nimport questionlist from './questionlist';\r\nimport enteredSession from './enteredSession'\r\nimport allUsers from './allUsers';\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n    user,\r\n    allUsers,\r\n    session,\r\n    mySession,\r\n    messages,\r\n    authorize,\r\n    questionlist,\r\n    enteredSession,\r\n});\r\n\r\nexport default rootReducer;","import reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>        \r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}